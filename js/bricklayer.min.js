!function o(i,r,s){function u(n,e){if(!r[n]){if(!i[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(l)return l(n,!0);t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}t=r[n]={exports:{}};i[n][0].call(t.exports,function(e){var t=i[n][1][e];return u(t||e)},t,t.exports,o,i,r,s)}return r[n].exports}for(var l="function"==typeof require&&require,e=0;e<s.length;e++)u(s[e]);return u}({1:[function(e,t,n){var o,i,r,m=this&&this.__extends||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function o(){this.constructor=e}e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)};!function(e){function s(e){return[].slice.call(e)}function r(e,t,n){var o;return window.CustomEvent?o=new CustomEvent(t,{detail:n}):(o=document.createEvent("CustomEvent")).initCustomEvent(t,!0,!0,n),e.dispatchEvent(o)}var n={rulerClassName:"bricklayer-column-sizer",columnClassName:"bricklayer-column"},t=(o.prototype.destroy=function(){this.element.parentNode.removeChild(this.element)},o);function o(e){this.element=document.createElement("div"),this.element.className=e}var i,u=(m(l,i=t),l.prototype.getWidth=function(){this.element.setAttribute("style","\n        display: block;\n        visibility: hidden !important;\n        top: -1000px !important;\n      ");var e=this.element.offsetWidth;return this.element.removeAttribute("style"),e},l);function l(){i.apply(this,arguments)}var p,a=(m(c,p=t),c);function c(){p.apply(this,arguments)}h.prototype.append=function(e){var t,n=this;Array.isArray(e)?e.forEach(function(e){return n.append(e)}):(t=this.findMinHeightColumn(),this.elements=s(this.elements).concat([e]),this.applyPosition("append",t,e))},h.prototype.prepend=function(e){var t,n=this;Array.isArray(e)?e.forEach(function(e){return n.prepend(e)}):(t=this.findMinHeightColumn(),this.elements=[e].concat(s(this.elements)),this.applyPosition("prepend",t,e))},h.prototype.on=function(e,t){return this.element.addEventListener("bricklayer."+e,t),this},h.prototype.redraw=function(){var e=this.columnCount;this.checkColumnCount(!1),this.reorderElements(e),r(this.element,"bricklayer.redraw",{columnCount:e})},h.prototype.destroy=function(){var t=this;this.ruler.destroy(),s(this.elements).forEach(function(e){return t.element.appendChild(e)}),s(this.getColumns()).forEach(function(e){return e.parentNode.removeChild(e)}),r(this.element,"bricklayer.destroy",{})},h.prototype.build=function(){this.ruler=new u(this.options.rulerClassName),this.elements=this.getElementsInOrder(),this.element.insertBefore(this.ruler.element,this.element.firstChild)},h.prototype.buildResponsive=function(){var t=this;window.addEventListener("resize",function(e){return t.checkColumnCount()}),this.checkColumnCount(),this.on("breakpoint",function(e){return t.reorderElements(e.detail.columnCount)}),1<=this.columnCount&&this.reorderElements(this.columnCount)},h.prototype.getColumns=function(){return this.element.querySelectorAll(":scope > ."+this.options.columnClassName)},h.prototype.findMinHeightColumn=function(){var e=s(this.getColumns()),t=e.map(function(e){return e.offsetHeight}),n=Math.min.apply(null,t);return e[t.indexOf(n)]},h.prototype.getElementsInOrder=function(){return this.element.querySelectorAll(":scope > *:not(."+this.options.columnClassName+"):not(."+this.options.rulerClassName+")")},h.prototype.checkColumnCount=function(e){void 0===e&&(e=!0);var t=this.getColumnCount();this.columnCount!==t&&(e&&r(this.element,"bricklayer.breakpoint",{columnCount:t}),this.columnCount=t)},h.prototype.reorderElements=function(e){var t=this;void 0===e&&(e=1);for(var n=s(this.elements).map(function(e){return e.parentNode?e.parentNode.removeChild(e):e}),o=this.getColumns(),i=0;i<o.length;i++)o[i].parentNode.removeChild(o[i]);for(i=0;i<e;i++){var r=new a(this.options.columnClassName).element;this.element.appendChild(r)}n.forEach(function(e){t.findMinHeightColumn().appendChild(e)})},h.prototype.getColumnCount=function(){var e=this.element.offsetWidth,t=this.ruler.getWidth();return 0==t?1:Math.round(e/t)},h.prototype.applyPosition=function(t,n,o){function e(e){e=e+t.charAt(0).toUpperCase()+t.substr(1),r(i.element,"bricklayer."+e,{item:o,column:n})}var i=this;switch(e("before"),t){case"append":n.appendChild(o);break;case"prepend":n.insertBefore(o,n.firstChild)}e("after")},t=h;function h(e,t){void 0===t&&(t=n),this.element=e,this.options=t,this.build(),this.buildResponsive()}e.Container=t}(o=o||{}),i="undefined"!=typeof window?window:this,r=function(){return o.Container},"function"==typeof define&&define.amd?define(r):"undefined"!=typeof window&&i===window?i.Bricklayer=r():"object"==typeof t&&t.exports&&(t.exports=r())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
