!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery")):"function"==typeof define&&define.amd?define(["exports","jquery"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap={},t.jQuery)}(this,function(t,h){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t}).apply(this,arguments)}h=h&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h;var e="transitionend";function n(t){var e=this,n=!1;return h(this).one(u.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||u.triggerTransitionEnd(e)},t),this}var u={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");e&&"#"!==e||(e=(t=t.getAttribute("href"))&&"#"!==t?t.trim():"");try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=h(t).css("transition-duration"),n=h(t).css("transition-delay"),i=parseFloat(e),t=parseFloat(n);return i||t?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){h(t).trigger(e)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],r=e[i],s=r&&u.isElement(r)?"element":null==(s=r)?""+s:{}.toString.call(s).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(s))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+o+'".')}var s},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?u.findShadowRoot(t.parentNode):null;t=t.getRootNode();return t instanceof ShadowRoot?t:null},jQueryDetection:function(){if(void 0===h)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=h.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};u.jQueryDetection(),h.fn.emulateTransitionEnd=n,h.event.special[u.TRANSITION_END]={bindType:e,delegateType:e,handle:function(t){if(h(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var o="alert",r="bs.alert",l="."+r,c=h.fn[o],f=function(){function i(t){this._element=t}var t=i.prototype;return t.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},t.dispose=function(){h.removeData(this._element,r),this._element=null},t._getRootElement=function(t){var e=u.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n=n||h(t).closest(".alert")[0]},t._triggerCloseEvent=function(t){var e=h.Event("close.bs.alert");return h(t).trigger(e),e},t._removeElement=function(e){var t,n=this;h(e).removeClass("show"),h(e).hasClass("fade")?(t=u.getTransitionDurationFromElement(e),h(e).one(u.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)):this._destroyElement(e)},t._destroyElement=function(t){h(t).detach().trigger("closed.bs.alert").remove()},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(r);e||(e=new i(this),t.data(r,e)),"close"===n&&e[n](this)})},i._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),i}();h(document).on("click.bs.alert.data-api",'[data-dismiss="alert"]',f._handleDismiss(new f)),h.fn[o]=f._jQueryInterface,h.fn[o].Constructor=f,h.fn[o].noConflict=function(){return h.fn[o]=c,f._jQueryInterface};var d="button",p="bs.button",m="."+p,g=h.fn[d],_="active",l='[data-toggle^="button"]',v='input:not([type="hidden"])',y=".btn",b=function(){function n(t){this._element=t}var t=n.prototype;return t.toggle=function(){var t,e=!0,n=!0,i=h(this._element).closest('[data-toggle="buttons"]')[0];!i||(t=this._element.querySelector(v))&&("radio"===t.type&&(t.checked&&this._element.classList.contains(_)?e=!1:(i=i.querySelector(".active"))&&h(i).removeClass(_)),e&&("checkbox"!==t.type&&"radio"!==t.type||(t.checked=!this._element.classList.contains(_)),h(t).trigger("change")),t.focus(),n=!1),this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(_)),e&&h(this._element).toggleClass(_))},t.dispose=function(){h.removeData(this._element,p),this._element=null},n._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(p);t||(t=new n(this),h(this).data(p,t)),"toggle"===e&&t[e]()})},s(n,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),n}();h(document).on("click.bs.button.data-api",l,function(t){var e,n=t.target,i=n;h(n).hasClass("btn")||(n=h(n).closest(y)[0]),!n||n.hasAttribute("disabled")||n.classList.contains("disabled")||(e=n.querySelector(v))&&(e.hasAttribute("disabled")||e.classList.contains("disabled"))?t.preventDefault():("LABEL"!==i.tagName||e&&"checkbox"!==e.type)&&b._jQueryInterface.call(h(n),"toggle")}).on("focus.bs.button.data-api blur.bs.button.data-api",l,function(t){var e=h(t.target).closest(y)[0];h(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),h(window).on("load.bs.button.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')),e=0,n=t.length;e<n;e++){var i=t[e],o=i.querySelector(v);o.checked||o.hasAttribute("checked")?i.classList.add(_):i.classList.remove(_)}for(var r=0,s=(t=[].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length;r<s;r++){var a=t[r];"true"===a.getAttribute("aria-pressed")?a.classList.add(_):a.classList.remove(_)}}),h.fn[d]=b._jQueryInterface,h.fn[d].Constructor=b,h.fn[d].noConflict=function(){return h.fn[d]=g,b._jQueryInterface};var E="carousel",w="bs.carousel",T="."+w,m=".data-api",C=h.fn[E],S={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},D={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},N="next",A="prev",k="slid"+T,I="active",O=".active.carousel-item",x={TOUCH:"touch",PEN:"pen"},j=function(){function o(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var t=o.prototype;return t.next=function(){this._isSliding||this._slide(N)},t.nextWhenVisible=function(){!document.hidden&&h(this._element).is(":visible")&&"hidden"!==h(this._element).css("visibility")&&this.next()},t.prev=function(){this._isSliding||this._slide(A)},t.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&(u.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},t.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},t.to=function(t){var e=this;this._activeElement=this._element.querySelector(O);var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)h(this._element).one(k,function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();n=n<t?N:A;this._slide(n,this._items[t])}},t.dispose=function(){h(this._element).off(T),h.removeData(this._element,w),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},t._getConfig=function(t){return t=a({},S,t),u.typeCheckConfig(E,t,D),t},t._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);t<=40||(t=t/this.touchDeltaX,(this.touchDeltaX=0)<t&&this.prev(),t<0&&this.next())},t._addEventListeners=function(){var e=this;this._config.keyboard&&h(this._element).on("keydown.bs.carousel",function(t){return e._keydown(t)}),"hover"===this._config.pause&&h(this._element).on("mouseenter.bs.carousel",function(t){return e.pause(t)}).on("mouseleave.bs.carousel",function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},t._addTouchEventListeners=function(){var t,e,n=this;this._touchSupported&&(t=function(t){n._pointerEvent&&x[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},e=function(t){n._pointerEvent&&x[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))},h(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel",function(t){return t.preventDefault()}),this._pointerEvent?(h(this._element).on("pointerdown.bs.carousel",t),h(this._element).on("pointerup.bs.carousel",e),this._element.classList.add("pointer-event")):(h(this._element).on("touchstart.bs.carousel",t),h(this._element).on("touchmove.bs.carousel",function(t){(t=t).originalEvent.touches&&1<t.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=t.originalEvent.touches[0].clientX-n.touchStartX}),h(this._element).on("touchend.bs.carousel",e)))},t._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},t._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},t._getItemByDirection=function(t,e){var n=t===N,i=t===A,o=this._getItemIndex(e),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return e;t=(o+(t===A?-1:1))%this._items.length;return-1==t?this._items[this._items.length-1]:this._items[t]},t._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(O)),n=h.Event("slide.bs.carousel",{relatedTarget:t,direction:e,from:i,to:n});return h(this._element).trigger(n),n},t._setActiveIndicatorElement=function(t){var e;this._indicatorsElement&&(e=[].slice.call(this._indicatorsElement.querySelectorAll(".active")),h(e).removeClass(I),(t=this._indicatorsElement.children[this._getItemIndex(t)])&&h(t).addClass(I))},t._slide=function(t,e){var n,i,o,r=this,s=this._element.querySelector(O),a=this._getItemIndex(s),l=e||s&&this._getItemByDirection(t,s),c=this._getItemIndex(l),e=Boolean(this._interval),t=t===N?(n="carousel-item-left",i="carousel-item-next","left"):(n="carousel-item-right",i="carousel-item-prev","right");l&&h(l).hasClass(I)?this._isSliding=!1:this._triggerSlideEvent(l,t).isDefaultPrevented()||s&&l&&(this._isSliding=!0,e&&this.pause(),this._setActiveIndicatorElement(l),o=h.Event(k,{relatedTarget:l,direction:t,from:a,to:c}),h(this._element).hasClass("slide")?(h(l).addClass(i),u.reflow(l),h(s).addClass(n),h(l).addClass(n),(c=parseInt(l.getAttribute("data-interval"),10))?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=c):this._config.interval=this._config.defaultInterval||this._config.interval,c=u.getTransitionDurationFromElement(s),h(s).one(u.TRANSITION_END,function(){h(l).removeClass(n+" "+i).addClass(I),h(s).removeClass(I+" "+i+" "+n),r._isSliding=!1,setTimeout(function(){return h(r._element).trigger(o)},0)}).emulateTransitionEnd(c)):(h(s).removeClass(I),h(l).addClass(I),this._isSliding=!1,h(this._element).trigger(o)),e&&this.cycle())},o._jQueryInterface=function(i){return this.each(function(){var t=h(this).data(w),e=a({},S,h(this).data());"object"==typeof i&&(e=a({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new o(this,e),h(this).data(w,t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},o._dataApiClickHandler=function(t){var e,n,i=u.getSelectorFromElement(this);!i||(e=h(i)[0])&&h(e).hasClass("carousel")&&(n=a({},h(e).data(),h(this).data()),(i=this.getAttribute("data-slide-to"))&&(n.interval=!1),o._jQueryInterface.call(h(e),n),i&&h(e).data(w).to(i),t.preventDefault())},s(o,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return S}}]),o}();h(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",j._dataApiClickHandler),h(window).on("load.bs.carousel.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),e=0,n=t.length;e<n;e++){var i=h(t[e]);j._jQueryInterface.call(i,i.data())}}),h.fn[E]=j._jQueryInterface,h.fn[E].Constructor=j,h.fn[E].noConflict=function(){return h.fn[E]=C,j._jQueryInterface};var L="collapse",P="bs.collapse",F=h.fn[L],R={toggle:!0,parent:""},H={toggle:"boolean",parent:"(string|element)"},M="show",B="collapse",q="collapsing",Q="collapsed",W='[data-toggle="collapse"]',U=function(){function r(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll(W)),i=0,o=n.length;i<o;i++){var r=n[i],s=u.getSelectorFromElement(r),a=[].slice.call(document.querySelectorAll(s)).filter(function(t){return t===e});null!==s&&0<a.length&&(this._selector=s,this._triggerArray.push(r))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var t=r.prototype;return t.toggle=function(){h(this._element).hasClass(M)?this.hide():this.show()},t.show=function(){var t,e,n,i,o=this;this._isTransitioning||h(this._element).hasClass(M)||(this._parent&&0===(i=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t){return"string"==typeof o._config.parent?t.getAttribute("data-parent")===o._config.parent:t.classList.contains(B)})).length&&(i=null),i&&(n=h(i).not(this._selector).data(P))&&n._isTransitioning||(t=h.Event("show.bs.collapse"),h(this._element).trigger(t),t.isDefaultPrevented()||(i&&(r._jQueryInterface.call(h(i).not(this._selector),"hide"),n||h(i).data(P,null)),e=this._getDimension(),h(this._element).removeClass(B).addClass(q),this._element.style[e]=0,this._triggerArray.length&&h(this._triggerArray).removeClass(Q).attr("aria-expanded",!0),this.setTransitioning(!0),n="scroll"+(e[0].toUpperCase()+e.slice(1)),i=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(){h(o._element).removeClass(q).addClass(B+" "+M),o._element.style[e]="",o.setTransitioning(!1),h(o._element).trigger("shown.bs.collapse")}).emulateTransitionEnd(i),this._element.style[e]=this._element[n]+"px")))},t.hide=function(){var t=this;if(!this._isTransitioning&&h(this._element).hasClass(M)){var e=h.Event("hide.bs.collapse");if(h(this._element).trigger(e),!e.isDefaultPrevented()){e=this._getDimension();this._element.style[e]=this._element.getBoundingClientRect()[e]+"px",u.reflow(this._element),h(this._element).addClass(q).removeClass(B+" "+M);var n=this._triggerArray.length;if(0<n)for(var i=0;i<n;i++){var o=this._triggerArray[i],r=u.getSelectorFromElement(o);null!==r&&(h([].slice.call(document.querySelectorAll(r))).hasClass(M)||h(o).addClass(Q).attr("aria-expanded",!1))}this.setTransitioning(!0);this._element.style[e]="";e=u.getTransitionDurationFromElement(this._element);h(this._element).one(u.TRANSITION_END,function(){t.setTransitioning(!1),h(t._element).removeClass(q).addClass(B).trigger("hidden.bs.collapse")}).emulateTransitionEnd(e)}}},t.setTransitioning=function(t){this._isTransitioning=t},t.dispose=function(){h.removeData(this._element,P),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},t._getConfig=function(t){return(t=a({},R,t)).toggle=Boolean(t.toggle),u.typeCheckConfig(L,t,H),t},t._getDimension=function(){return h(this._element).hasClass("width")?"width":"height"},t._getParent=function(){var t,n=this;u.isElement(this._config.parent)?(t=this._config.parent,void 0!==this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',e=[].slice.call(t.querySelectorAll(e));return h(e).each(function(t,e){n._addAriaAndCollapsedClass(r._getTargetFromElement(e),[e])}),t},t._addAriaAndCollapsedClass=function(t,e){t=h(t).hasClass(M);e.length&&h(e).toggleClass(Q,!t).attr("aria-expanded",t)},r._getTargetFromElement=function(t){t=u.getSelectorFromElement(t);return t?document.querySelector(t):null},r._jQueryInterface=function(i){return this.each(function(){var t=h(this),e=t.data(P),n=a({},R,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&"string"==typeof i&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new r(this,n),t.data(P,e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},s(r,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return R}}]),r}();h(document).on("click.bs.collapse.data-api",W,function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=h(this),t=u.getSelectorFromElement(this),t=[].slice.call(document.querySelectorAll(t));h(t).each(function(){var t=h(this),e=t.data(P)?"toggle":n.data();U._jQueryInterface.call(t,e)})}),h.fn[L]=U._jQueryInterface,h.fn[L].Constructor=U,h.fn[L].noConflict=function(){return h.fn[L]=F,U._jQueryInterface};var V="undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof navigator,Y=function(){for(var t=["Edge","Trident","Firefox"],e=0;e<t.length;e+=1)if(V&&0<=navigator.userAgent.indexOf(t[e]))return 1;return 0}();var z=V&&window.Promise?function(t){var e=!1;return function(){e||(e=!0,window.Promise.resolve().then(function(){e=!1,t()}))}}:function(t){var e=!1;return function(){e||(e=!0,setTimeout(function(){e=!1,t()},Y))}};function X(t){return t&&"[object Function]"==={}.toString.call(t)}function K(t,e){if(1!==t.nodeType)return[];t=t.ownerDocument.defaultView.getComputedStyle(t,null);return e?t[e]:t}function G(t){return"HTML"===t.nodeName?t:t.parentNode||t.host}function $(t){if(!t)return document.body;switch(t.nodeName){case"HTML":case"BODY":return t.ownerDocument.body;case"#document":return t.body}var e=K(t),n=e.overflow,i=e.overflowX,e=e.overflowY;return/(auto|scroll|overlay)/.test(n+e+i)?t:$(G(t))}function J(t){return t&&t.referenceNode?t.referenceNode:t}var Z=V&&!(!window.MSInputMethodContext||!document.documentMode),tt=V&&/MSIE 10/.test(navigator.userAgent);function et(t){return 11===t?Z:10!==t&&Z||tt}function nt(t){if(!t)return document.documentElement;for(var e=et(10)?document.body:null,n=t.offsetParent||null;n===e&&t.nextElementSibling;)n=(t=t.nextElementSibling).offsetParent;var i=n&&n.nodeName;return i&&"BODY"!==i&&"HTML"!==i?-1!==["TH","TD","TABLE"].indexOf(n.nodeName)&&"static"===K(n,"position")?nt(n):n:(t?t.ownerDocument:document).documentElement}function it(t){return null!==t.parentNode?it(t.parentNode):t}function ot(t,e){if(!(t&&t.nodeType&&e&&e.nodeType))return document.documentElement;var n=t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_FOLLOWING,i=n?t:e,o=n?e:t,n=document.createRange();n.setStart(i,0),n.setEnd(o,0);n=n.commonAncestorContainer;if(t!==n&&e!==n||i.contains(o))return"BODY"===(o=(i=n).nodeName)||"HTML"!==o&&nt(i.firstElementChild)!==i?nt(n):n;n=it(t);return n.host?ot(n.host,e):ot(t,it(e).host)}function rt(t,e){var n="top"===(1<arguments.length&&void 0!==e?e:"top")?"scrollTop":"scrollLeft",e=t.nodeName;if("BODY"!==e&&"HTML"!==e)return t[n];e=t.ownerDocument.documentElement;return(t.ownerDocument.scrollingElement||e)[n]}function st(t,e){var n="x"===e?"Left":"Top",e="Left"==n?"Right":"Bottom";return parseFloat(t["border"+n+"Width"])+parseFloat(t["border"+e+"Width"])}function at(t,e,n,i){return Math.max(e["offset"+t],e["scroll"+t],n["client"+t],n["offset"+t],n["scroll"+t],et(10)?parseInt(n["offset"+t])+parseInt(i["margin"+("Height"===t?"Top":"Left")])+parseInt(i["margin"+("Height"===t?"Bottom":"Right")]):0)}function lt(t){var e=t.body,n=t.documentElement,t=et(10)&&getComputedStyle(n);return{height:at("Height",e,n,t),width:at("Width",e,n,t)}}var ct=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},l=function(t,e,n){return e&&ht(t.prototype,e),n&&ht(t,n),t};function ht(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function ut(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var ft=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t};function dt(t){return ft({},t,{right:t.left+t.width,bottom:t.top+t.height})}function pt(t){var e,n,i={};try{et(10)?(i=t.getBoundingClientRect(),e=rt(t,"top"),n=rt(t,"left"),i.top+=e,i.left+=n,i.bottom+=e,i.right+=n):i=t.getBoundingClientRect()}catch(t){}var o={left:i.left,top:i.top,width:i.right-i.left,height:i.bottom-i.top},r="HTML"===t.nodeName?lt(t.ownerDocument):{},s=r.width||t.clientWidth||o.width,a=r.height||t.clientHeight||o.height,r=t.offsetWidth-s,s=t.offsetHeight-a;return(r||s)&&(r-=st(a=K(t),"x"),s-=st(a,"y"),o.width-=r,o.height-=s),dt(o)}function mt(t,e,n){var i=2<arguments.length&&void 0!==n&&n,o=et(10),r="HTML"===e.nodeName,s=pt(t),a=pt(e),l=$(t),c=K(e),n=parseFloat(c.borderTopWidth),t=parseFloat(c.borderLeftWidth);i&&r&&(a.top=Math.max(a.top,0),a.left=Math.max(a.left,0));s=dt({top:s.top-a.top-n,left:s.left-a.left-t,width:s.width,height:s.height});return s.marginTop=0,s.marginLeft=0,!o&&r&&(r=parseFloat(c.marginTop),c=parseFloat(c.marginLeft),s.top-=n-r,s.bottom-=n-r,s.left-=t-c,s.right-=t-c,s.marginTop=r,s.marginLeft=c),(o&&!i?e.contains(l):e===l&&"BODY"!==l.nodeName)&&(s=function(t,e,n){var i=2<arguments.length&&void 0!==n&&n,n=rt(e,"top"),e=rt(e,"left"),i=i?-1:1;return t.top+=n*i,t.bottom+=n*i,t.left+=e*i,t.right+=e*i,t}(s,e)),s}function gt(t){if(!t||!t.parentElement||et())return document.documentElement;for(var e=t.parentElement;e&&"none"===K(e,"transform");)e=e.parentElement;return e||document.documentElement}function _t(t,e,n,i,o){var r=4<arguments.length&&void 0!==o&&o,s={top:0,left:0},a=r?gt(t):ot(t,J(e));"viewport"===i?s=function(t,e){var n=1<arguments.length&&void 0!==e&&e,i=t.ownerDocument.documentElement,o=mt(t,i),r=Math.max(i.clientWidth,window.innerWidth||0),e=Math.max(i.clientHeight,window.innerHeight||0),t=n?0:rt(i),i=n?0:rt(i,"left");return dt({top:t-o.top+o.marginTop,left:i-o.left+o.marginLeft,width:r,height:e})}(a,r):(o=void 0,"scrollParent"===i?"BODY"===(o=$(G(e))).nodeName&&(o=t.ownerDocument.documentElement):o="window"===i?t.ownerDocument.documentElement:i,l=mt(o,a,r),"HTML"!==o.nodeName||function t(e){var n=e.nodeName;if("BODY"===n||"HTML"===n)return!1;if("fixed"===K(e,"position"))return!0;e=G(e);return!!e&&t(e)}(a)?s=l:(t=(a=lt(t.ownerDocument)).height,a=a.width,s.top+=l.top-l.marginTop,s.bottom=t+l.top,s.left+=l.left-l.marginLeft,s.right=a+l.left));var l="number"==typeof(n=n||0);return s.left+=l?n:n.left||0,s.top+=l?n:n.top||0,s.right-=l?n:n.right||0,s.bottom-=l?n:n.bottom||0,s}function vt(t,e,n,i,o,r){r=5<arguments.length&&void 0!==r?r:0;if(-1===t.indexOf("auto"))return t;var o=_t(n,i,r,o),s={top:{width:o.width,height:e.top-o.top},right:{width:o.right-e.right,height:o.height},bottom:{width:o.width,height:o.bottom-e.bottom},left:{width:e.left-o.left,height:o.height}},e=Object.keys(s).map(function(t){return ft({key:t},s[t],{area:(t=s[t]).width*t.height})}).sort(function(t,e){return e.area-t.area}),o=e.filter(function(t){var e=t.width,t=t.height;return e>=n.clientWidth&&t>=n.clientHeight}),e=(0<o.length?o:e)[0].key,t=t.split("-")[1];return e+(t?"-"+t:"")}function yt(t,e,n,i){i=3<arguments.length&&void 0!==i?i:null;return mt(n,i?gt(e):ot(e,J(n)),i)}function bt(t){var e=t.ownerDocument.defaultView.getComputedStyle(t),n=parseFloat(e.marginTop||0)+parseFloat(e.marginBottom||0),e=parseFloat(e.marginLeft||0)+parseFloat(e.marginRight||0);return{width:t.offsetWidth+e,height:t.offsetHeight+n}}function Et(t){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return t.replace(/left|right|bottom|top/g,function(t){return e[t]})}function wt(t,e,n){n=n.split("-")[0];var i=bt(t),o={width:i.width,height:i.height},r=-1!==["right","left"].indexOf(n),s=r?"top":"left",a=r?"left":"top",t=r?"height":"width",r=r?"width":"height";return o[s]=e[s]+e[t]/2-i[t]/2,o[a]=n===a?e[a]-i[r]:e[Et(a)],o}function Tt(t,e){return Array.prototype.find?t.find(e):t.filter(e)[0]}function Ct(t,n,e){return(void 0===e?t:t.slice(0,function(t,e,n){if(Array.prototype.findIndex)return t.findIndex(function(t){return t[e]===n});var i=Tt(t,function(t){return t[e]===n});return t.indexOf(i)}(t,"name",e))).forEach(function(t){t.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var e=t.function||t.fn;t.enabled&&X(e)&&(n.offsets.popper=dt(n.offsets.popper),n.offsets.reference=dt(n.offsets.reference),n=e(n,t))}),n}function St(t,n){return t.some(function(t){var e=t.name;return t.enabled&&e===n})}function Dt(t){for(var e=[!1,"ms","Webkit","Moz","O"],n=t.charAt(0).toUpperCase()+t.slice(1),i=0;i<e.length;i++){var o=e[i],o=o?""+o+n:t;if(void 0!==document.body.style[o])return o}return null}function Nt(t){t=t.ownerDocument;return t?t.defaultView:window}function At(t,e,n,i){n.updateBound=i,Nt(t).addEventListener("resize",n.updateBound,{passive:!0});t=$(t);return function t(e,n,i,o){var r="BODY"===e.nodeName,e=r?e.ownerDocument.defaultView:e;e.addEventListener(n,i,{passive:!0}),r||t($(e.parentNode),n,i,o),o.push(e)}(t,"scroll",n.updateBound,n.scrollParents),n.scrollElement=t,n.eventsEnabled=!0,n}function kt(){var t,e;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(t=this.reference,e=this.state,Nt(t).removeEventListener("resize",e.updateBound),e.scrollParents.forEach(function(t){t.removeEventListener("scroll",e.updateBound)}),e.updateBound=null,e.scrollParents=[],e.scrollElement=null,e.eventsEnabled=!1,e))}function It(t){return""!==t&&!isNaN(parseFloat(t))&&isFinite(t)}function Ot(n,i){Object.keys(i).forEach(function(t){var e="";-1!==["width","height","top","right","bottom","left"].indexOf(t)&&It(i[t])&&(e="px"),n.style[t]=i[t]+e})}var xt=V&&/Firefox/i.test(navigator.userAgent);function jt(t,e,n){var i,o=Tt(t,function(t){return t.name===e}),r=!!o&&t.some(function(t){return t.name===n&&t.enabled&&t.order<o.order});return r||(i="`"+e+"`",t="`"+n+"`",console.warn(t+" modifier is required by "+i+" modifier in order to work, be sure to include it before "+i+"!")),r}var m=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],Lt=m.slice(3);function Pt(t,e){e=1<arguments.length&&void 0!==e&&e,t=Lt.indexOf(t),t=Lt.slice(t+1).concat(Lt.slice(0,t));return e?t.reverse():t}var Ft="flip",Rt="clockwise",Ht="counterclockwise";function Mt(t,o,r,e){var s=[0,0],a=-1!==["right","left"].indexOf(e),n=t.split(/(\+|\-)/).map(function(t){return t.trim()}),e=n.indexOf(Tt(n,function(t){return-1!==t.search(/,|\s/)}));n[e]&&-1===n[e].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");t=/\s*,\s*|\s+/;return(-1!==e?[n.slice(0,e).concat([n[e].split(t)[0]]),[n[e].split(t)[1]].concat(n.slice(e+1))]:[n]).map(function(t,e){var n=(1===e?!a:a)?"height":"width",i=!1;return t.reduce(function(t,e){return""===t[t.length-1]&&-1!==["+","-"].indexOf(e)?(t[t.length-1]=e,i=!0,t):i?(t[t.length-1]+=e,i=!1,t):t.concat(e)},[]).map(function(t){return function(t,e,n,i){var o=+(r=t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/))[1],r=r[2];if(!o)return t;if(0!==r.indexOf("%"))return"vh"!==r&&"vw"!==r?o:("vh"===r?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*o;var s=void 0;switch(r){case"%p":s=n;break;case"%":case"%r":default:s=i}return dt(s)[e]/100*o}(t,n,o,r)})}).forEach(function(n,i){n.forEach(function(t,e){It(t)&&(s[i]+=t*("-"===n[e-1]?-1:1))})}),s}var Bt={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(t){var e,n,i=t.placement,o=i.split("-")[0],r=i.split("-")[1];return r&&(e=(n=t.offsets).reference,i=n.popper,o=(n=-1!==["bottom","top"].indexOf(o))?"width":"height",o={start:ut({},n=n?"left":"top",e[n]),end:ut({},n,e[n]+e[o]-i[o])},t.offsets.popper=ft({},i,o[r])),t}},offset:{order:200,enabled:!0,fn:function(t,e){var n=e.offset,i=t.placement,o=(r=t.offsets).popper,e=r.reference,r=i.split("-")[0],i=void 0,i=It(+n)?[+n,0]:Mt(n,o,e,r);return"left"===r?(o.top+=i[0],o.left-=i[1]):"right"===r?(o.top+=i[0],o.left+=i[1]):"top"===r?(o.left+=i[0],o.top-=i[1]):"bottom"===r&&(o.left+=i[0],o.top+=i[1]),t.popper=o,t},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(t,i){var e=i.boundariesElement||nt(t.instance.popper);t.instance.reference===e&&(e=nt(e));var n=Dt("transform"),o=t.instance.popper.style,r=o.top,s=o.left,a=o[n];o.top="",o.left="",o[n]="";var l=_t(t.instance.popper,t.instance.reference,i.padding,e,t.positionFixed);o.top=r,o.left=s,o[n]=a,i.boundaries=l;var a=i.priority,c=t.offsets.popper,h={primary:function(t){var e=c[t];return c[t]<l[t]&&!i.escapeWithReference&&(e=Math.max(c[t],l[t])),ut({},t,e)},secondary:function(t){var e="right"===t?"left":"top",n=c[e];return c[t]>l[t]&&!i.escapeWithReference&&(n=Math.min(c[e],l[t]-("right"===t?c.width:c.height))),ut({},e,n)}};return a.forEach(function(t){var e=-1!==["left","top"].indexOf(t)?"primary":"secondary";c=ft({},c,h[e](t))}),t.offsets.popper=c,t},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(t){var e=(r=t.offsets).popper,n=r.reference,i=t.placement.split("-")[0],o=Math.floor,r=(s=-1!==["top","bottom"].indexOf(i))?"right":"bottom",i=s?"left":"top",s=s?"width":"height";return e[r]<o(n[i])&&(t.offsets.popper[i]=o(n[i])-e[s]),e[i]>o(n[r])&&(t.offsets.popper[i]=o(n[r])),t}},arrow:{order:500,enabled:!0,fn:function(t,e){if(!jt(t.instance.modifiers,"arrow","keepTogether"))return t;var n=e.element;if("string"==typeof n){if(!(n=t.instance.popper.querySelector(n)))return t}else if(!t.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),t;var i=t.placement.split("-")[0],o=(h=t.offsets).popper,r=h.reference,s=-1!==["left","right"].indexOf(i),a=s?"height":"width",l=s?"Top":"Left",c=l.toLowerCase(),e=s?"left":"top",h=s?"bottom":"right",i=bt(n)[a];return r[h]-i<o[c]&&(t.offsets.popper[c]-=o[c]-(r[h]-i)),r[c]+i>o[h]&&(t.offsets.popper[c]+=r[c]+i-o[h]),t.offsets.popper=dt(t.offsets.popper),s=r[c]+r[a]/2-i/2,h=K(t.instance.popper),r=parseFloat(h["margin"+l]),l=parseFloat(h["border"+l+"Width"]),l=s-t.offsets.popper[c]-r-l,l=Math.max(Math.min(o[a]-i,l),0),t.arrowElement=n,t.offsets.arrow=(ut(n={},c,Math.round(l)),ut(n,e,""),n),t},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(c,h){if(St(c.instance.modifiers,"inner"))return c;if(c.flipped&&c.placement===c.originalPlacement)return c;var u=_t(c.instance.popper,c.instance.reference,h.padding,h.boundariesElement,c.positionFixed),f=c.placement.split("-")[0],d=Et(f),p=c.placement.split("-")[1]||"",m=[];switch(h.behavior){case Ft:m=[f,d];break;case Rt:m=Pt(f);break;case Ht:m=Pt(f,!0);break;default:m=h.behavior}return m.forEach(function(t,e){if(f!==t||m.length===e+1)return c;f=c.placement.split("-")[0],d=Et(f);var n=c.offsets.popper,i=c.offsets.reference,o=Math.floor,r="left"===f&&o(n.right)>o(i.left)||"right"===f&&o(n.left)<o(i.right)||"top"===f&&o(n.bottom)>o(i.top)||"bottom"===f&&o(n.top)<o(i.bottom),s=o(n.left)<o(u.left),a=o(n.right)>o(u.right),l=o(n.top)<o(u.top),t=o(n.bottom)>o(u.bottom),i="left"===f&&s||"right"===f&&a||"top"===f&&l||"bottom"===f&&t,n=-1!==["top","bottom"].indexOf(f),o=!!h.flipVariations&&(n&&"start"===p&&s||n&&"end"===p&&a||!n&&"start"===p&&l||!n&&"end"===p&&t),l=!!h.flipVariationsByContent&&(n&&"start"===p&&a||n&&"end"===p&&s||!n&&"start"===p&&t||!n&&"end"===p&&l),l=o||l;(r||i||l)&&(c.flipped=!0,(r||i)&&(f=m[e+1]),l&&(p="end"===(l=p)?"start":"start"===l?"end":l),c.placement=f+(p?"-"+p:""),c.offsets.popper=ft({},c.offsets.popper,wt(c.instance.popper,c.offsets.reference,c.placement)),c=Ct(c.instance.modifiers,c,"flip"))}),c},behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:!1,flipVariationsByContent:!1},inner:{order:700,enabled:!1,fn:function(t){var e=t.placement,n=e.split("-")[0],i=(s=t.offsets).popper,o=s.reference,r=-1!==["left","right"].indexOf(n),s=-1===["top","left"].indexOf(n);return i[r?"left":"top"]=o[n]-(s?i[r?"width":"height"]:0),t.placement=Et(e),t.offsets.popper=dt(i),t}},hide:{order:800,enabled:!0,fn:function(t){if(!jt(t.instance.modifiers,"hide","preventOverflow"))return t;var e=t.offsets.reference,n=Tt(t.instance.modifiers,function(t){return"preventOverflow"===t.name}).boundaries;if(e.bottom<n.top||e.left>n.right||e.top>n.bottom||e.right<n.left){if(!0===t.hide)return t;t.hide=!0,t.attributes["x-out-of-boundaries"]=""}else{if(!1===t.hide)return t;t.hide=!1,t.attributes["x-out-of-boundaries"]=!1}return t}},computeStyle:{order:850,enabled:!0,fn:function(t,e){var n=e.x,i=e.y,o=t.offsets.popper;void 0!==(p=Tt(t.instance.modifiers,function(t){return"applyStyle"===t.name}).gpuAcceleration)&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var r,s,a,l,c=void 0!==p?p:e.gpuAcceleration,h=nt(t.instance.popper),u=pt(h),f={position:o.position},d=(r=t,d=window.devicePixelRatio<2||!xt,m=(l=r.offsets).popper,s=l.reference,a=Math.round,p=Math.floor,e=function(t){return t},o=a(s.width),l=a(m.width),s=-1!==["left","right"].indexOf(r.placement),r=-1!==r.placement.indexOf("-"),p=d?s||r||o%2==l%2?a:p:e,e=d?a:e,{left:p(o%2==1&&l%2==1&&!r&&d?m.left-1:m.left),top:e(m.top),bottom:e(m.bottom),right:p(m.right)}),e="bottom"===n?"top":"bottom",p="right"===i?"left":"right",m=Dt("transform"),n=void 0,i=void 0,i="bottom"==e?"HTML"===h.nodeName?-h.clientHeight+d.bottom:-u.height+d.bottom:d.top,n="right"==p?"HTML"===h.nodeName?-h.clientWidth+d.right:-u.width+d.right:d.left;return c&&m?(f[m]="translate3d("+n+"px, "+i+"px, 0)",f[e]=0,f[p]=0,f.willChange="transform"):(c="bottom"==e?-1:1,m="right"==p?-1:1,f[e]=i*c,f[p]=n*m,f.willChange=e+", "+p),p={"x-placement":t.placement},t.attributes=ft({},p,t.attributes),t.styles=ft({},f,t.styles),t.arrowStyles=ft({},t.offsets.arrow,t.arrowStyles),t},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(t){var e,n;return Ot(t.instance.popper,t.styles),e=t.instance.popper,n=t.attributes,Object.keys(n).forEach(function(t){!1!==n[t]?e.setAttribute(t,n[t]):e.removeAttribute(t)}),t.arrowElement&&Object.keys(t.arrowStyles).length&&Ot(t.arrowElement,t.arrowStyles),t},onLoad:function(t,e,n,i,o){return o=yt(o,e,t,n.positionFixed),t=vt(n.placement,o,e,t,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding),e.setAttribute("x-placement",t),Ot(e,{position:n.positionFixed?"fixed":"absolute"}),n},gpuAcceleration:void 0}}},qt=(l(Qt,[{key:"update",value:function(){return function(){var t;this.state.isDestroyed||((t={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}}).offsets.reference=yt(this.state,this.popper,this.reference,this.options.positionFixed),t.placement=vt(this.options.placement,t.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),t.originalPlacement=t.placement,t.positionFixed=this.options.positionFixed,t.offsets.popper=wt(this.popper,t.offsets.reference,t.placement),t.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",t=Ct(this.modifiers,t),this.state.isCreated?this.options.onUpdate(t):(this.state.isCreated=!0,this.options.onCreate(t)))}.call(this)}},{key:"destroy",value:function(){return function(){return this.state.isDestroyed=!0,St(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[Dt("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}.call(this)}},{key:"enableEventListeners",value:function(){return function(){this.state.eventsEnabled||(this.state=At(this.reference,this.options,this.state,this.scheduleUpdate))}.call(this)}},{key:"disableEventListeners",value:function(){return kt.call(this)}}]),Qt);function Qt(t,e){var n=this,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};ct(this,Qt),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=z(this.update.bind(this)),this.options=ft({},Qt.Defaults,i),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=t&&t.jquery?t[0]:t,this.popper=e&&e.jquery?e[0]:e,this.options.modifiers={},Object.keys(ft({},Qt.Defaults.modifiers,i.modifiers)).forEach(function(t){n.options.modifiers[t]=ft({},Qt.Defaults.modifiers[t]||{},i.modifiers?i.modifiers[t]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(t){return ft({name:t},n.options.modifiers[t])}).sort(function(t,e){return t.order-e.order}),this.modifiers.forEach(function(t){t.enabled&&X(t.onLoad)&&t.onLoad(n.reference,n.popper,n.options,t,n.state)}),this.update();e=this.options.eventsEnabled;e&&this.enableEventListeners(),this.state.eventsEnabled=e}qt.Utils=("undefined"!=typeof window?window:global).PopperUtils,qt.placements=m,qt.Defaults=Bt;var Wt="dropdown",Ut="bs.dropdown",Vt="."+Ut,l=".data-api",Yt=h.fn[Wt],zt=new RegExp("38|40|27"),Xt="hide"+Vt,Kt="hidden"+Vt,m="click"+Vt+l,Bt="keydown"+Vt+l,Gt="disabled",$t="show",Jt="dropdown-menu-right",Zt='[data-toggle="dropdown"]',te=".dropdown-menu",ee={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},ne={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},ie=function(){function c(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var t=c.prototype;return t.toggle=function(){var t;this._element.disabled||h(this._element).hasClass(Gt)||(t=h(this._menu).hasClass($t),c._clearMenus(),t||this.show(!0))},t.show=function(t){if(void 0===t&&(t=!1),!(this._element.disabled||h(this._element).hasClass(Gt)||h(this._menu).hasClass($t))){var e={relatedTarget:this._element},n=h.Event("show.bs.dropdown",e),i=c._getParentFromElement(this._element);if(h(i).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar&&t){if(void 0===qt)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");t=this._element;"parent"===this._config.reference?t=i:u.isElement(this._config.reference)&&(t=this._config.reference,void 0!==this._config.reference.jquery&&(t=this._config.reference[0])),"scrollParent"!==this._config.boundary&&h(i).addClass("position-static"),this._popper=new qt(t,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===h(i).closest(".navbar-nav").length&&h(document.body).children().on("mouseover",null,h.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),h(this._menu).toggleClass($t),h(i).toggleClass($t).trigger(h.Event("shown.bs.dropdown",e))}}},t.hide=function(){var t,e,n;this._element.disabled||h(this._element).hasClass(Gt)||!h(this._menu).hasClass($t)||(t={relatedTarget:this._element},e=h.Event(Xt,t),n=c._getParentFromElement(this._element),h(n).trigger(e),e.isDefaultPrevented()||(this._popper&&this._popper.destroy(),h(this._menu).toggleClass($t),h(n).toggleClass($t).trigger(h.Event(Kt,t))))},t.dispose=function(){h.removeData(this._element,Ut),h(this._element).off(Vt),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},t.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},t._addEventListeners=function(){var e=this;h(this._element).on("click.bs.dropdown",function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},t._getConfig=function(t){return t=a({},this.constructor.Default,h(this._element).data(),t),u.typeCheckConfig(Wt,t,this.constructor.DefaultType),t},t._getMenuElement=function(){var t;return this._menu||(t=c._getParentFromElement(this._element))&&(this._menu=t.querySelector(te)),this._menu},t._getPlacement=function(){var t=h(this._element.parentNode),e="bottom-start";return t.hasClass("dropup")?e=h(this._menu).hasClass(Jt)?"top-end":"top-start":t.hasClass("dropright")?e="right-start":t.hasClass("dropleft")?e="left-start":h(this._menu).hasClass(Jt)&&(e="bottom-end"),e},t._detectNavbar=function(){return 0<h(this._element).closest(".navbar").length},t._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=a({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},t._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),a({},t,this._config.popperConfig)},c._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(Ut);if(t||(t=new c(this,"object"==typeof e?e:null),h(this).data(Ut,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},c._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll(Zt)),n=0,i=e.length;n<i;n++){var o,r,s=c._getParentFromElement(e[n]),a=h(e[n]).data(Ut),l={relatedTarget:e[n]};t&&"click"===t.type&&(l.clickEvent=t),a&&(o=a._menu,h(s).hasClass($t)&&(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&h.contains(s,t.target)||(r=h.Event(Xt,l),h(s).trigger(r),r.isDefaultPrevented()||("ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),e[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),h(o).removeClass($t),h(s).removeClass($t).trigger(h.Event(Kt,l))))))}},c._getParentFromElement=function(t){var e,n=u.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},c._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||h(t.target).closest(te).length)):zt.test(t.which))&&!this.disabled&&!h(this).hasClass(Gt)){var e=c._getParentFromElement(this),n=h(e).hasClass($t);if(n||27!==t.which){if(t.preventDefault(),t.stopPropagation(),!n||n&&(27===t.which||32===t.which))return 27===t.which&&h(e.querySelector(Zt)).trigger("focus"),void h(this).trigger("click");n=[].slice.call(e.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function(t){return h(t).is(":visible")});0!==n.length&&(e=n.indexOf(t.target),38===t.which&&0<e&&e--,40===t.which&&e<n.length-1&&e++,e<0&&(e=0),n[e].focus())}}},s(c,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return ee}},{key:"DefaultType",get:function(){return ne}}]),c}();h(document).on(Bt,Zt,ie._dataApiKeydownHandler).on(Bt,te,ie._dataApiKeydownHandler).on(m+" keyup.bs.dropdown.data-api",ie._clearMenus).on(m,Zt,function(t){t.preventDefault(),t.stopPropagation(),ie._jQueryInterface.call(h(this),"toggle")}).on(m,".dropdown form",function(t){t.stopPropagation()}),h.fn[Wt]=ie._jQueryInterface,h.fn[Wt].Constructor=ie,h.fn[Wt].noConflict=function(){return h.fn[Wt]=Yt,ie._jQueryInterface};var oe="modal",re="bs.modal",se="."+re,ae=h.fn[oe],le={backdrop:!0,keyboard:!0,focus:!0,show:!0},ce={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},he="hidden"+se,ue="show"+se,fe="focusin"+se,de="resize"+se,pe="click.dismiss"+se,me="keydown.dismiss"+se,ge="mousedown.dismiss"+se,_e="modal-open",ve="fade",ye="show",be="modal-static",Ee=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",we=".sticky-top",Te=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var t=o.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e,n=this;this._isShown||this._isTransitioning||(h(this._element).hasClass(ve)&&(this._isTransitioning=!0),e=h.Event(ue,{relatedTarget:t}),h(this._element).trigger(e),this._isShown||e.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),h(this._element).on(pe,'[data-dismiss="modal"]',function(t){return n.hide(t)}),h(this._dialog).on(ge,function(){h(n._element).one("mouseup.dismiss.bs.modal",function(t){h(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(t)})))},t.hide=function(t){var e=this;t&&t.preventDefault(),this._isShown&&!this._isTransitioning&&(t=h.Event("hide.bs.modal"),h(this._element).trigger(t),this._isShown&&!t.isDefaultPrevented()&&(this._isShown=!1,(t=h(this._element).hasClass(ve))&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),h(document).off(fe),h(this._element).removeClass(ye),h(this._element).off(pe),h(this._dialog).off(ge),t?(t=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(t)):this._hideModal()))},t.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return h(t).off(se)}),h(document).off(fe),h.removeData(this._element,re),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=a({},le,t),u.typeCheckConfig(oe,t,ce),t},t._triggerBackdropTransition=function(){var t,e,n,i=this;"static"===this._config.backdrop?(t=h.Event("hidePrevented.bs.modal"),h(this._element).trigger(t),t.defaultPrevented||((e=this._element.scrollHeight>document.documentElement.clientHeight)||(this._element.style.overflowY="hidden"),this._element.classList.add(be),n=u.getTransitionDurationFromElement(this._dialog),h(this._element).off(u.TRANSITION_END),h(this._element).one(u.TRANSITION_END,function(){i._element.classList.remove(be),e||h(i._element).one(u.TRANSITION_END,function(){i._element.style.overflowY=""}).emulateTransitionEnd(i._element,n)}).emulateTransitionEnd(n),this._element.focus())):this.hide()},t._showElement=function(t){var e=this,n=h(this._element).hasClass(ve),i=this._dialog?this._dialog.querySelector(".modal-body"):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),h(this._dialog).hasClass("modal-dialog-scrollable")&&i?i.scrollTop=0:this._element.scrollTop=0,n&&u.reflow(this._element),h(this._element).addClass(ye),this._config.focus&&this._enforceFocus();var o=h.Event("shown.bs.modal",{relatedTarget:t}),t=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,h(e._element).trigger(o)};n?(n=u.getTransitionDurationFromElement(this._dialog),h(this._dialog).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t()},t._enforceFocus=function(){var e=this;h(document).off(fe).on(fe,function(t){document!==t.target&&e._element!==t.target&&0===h(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown?h(this._element).on(me,function(t){e._config.keyboard&&27===t.which?(t.preventDefault(),e.hide()):e._config.keyboard||27!==t.which||e._triggerBackdropTransition()}):this._isShown||h(this._element).off(me)},t._setResizeEvent=function(){var e=this;this._isShown?h(window).on(de,function(t){return e.handleUpdate(t)}):h(window).off(de)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop(function(){h(document.body).removeClass(_e),t._resetAdjustments(),t._resetScrollbar(),h(t._element).trigger(he)})},t._removeBackdrop=function(){this._backdrop&&(h(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e,n=this,i=h(this._element).hasClass(ve)?ve:"";this._isShown&&this._config.backdrop?(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),h(this._backdrop).appendTo(document.body),h(this._element).on(pe,function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&n._triggerBackdropTransition()}),i&&u.reflow(this._backdrop),h(this._backdrop).addClass(ye),t&&(i?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t())):!this._isShown&&this._backdrop?(h(this._backdrop).removeClass(ye),i=function(){n._removeBackdrop(),t&&t()},h(this._element).hasClass(ve)?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,i).emulateTransitionEnd(e)):i()):t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(t.left+t.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var t,e,o=this;this._isBodyOverflowing&&(t=[].slice.call(document.querySelectorAll(Ee)),e=[].slice.call(document.querySelectorAll(we)),h(t).each(function(t,e){var n=e.style.paddingRight,i=h(e).css("padding-right");h(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),h(e).each(function(t,e){var n=e.style.marginRight,i=h(e).css("margin-right");h(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")}),t=document.body.style.paddingRight,e=h(document.body).css("padding-right"),h(document.body).data("padding-right",t).css("padding-right",parseFloat(e)+this._scrollbarWidth+"px")),h(document.body).addClass(_e)},t._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(Ee));h(t).each(function(t,e){var n=h(e).data("padding-right");h(e).removeData("padding-right"),e.style.paddingRight=n||""});t=[].slice.call(document.querySelectorAll(we));h(t).each(function(t,e){var n=h(e).data("margin-right");void 0!==n&&h(e).css("margin-right",n).removeData("margin-right")});t=h(document.body).data("padding-right");h(document.body).removeData("padding-right"),document.body.style.paddingRight=t||""},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(n,i){return this.each(function(){var t=h(this).data(re),e=a({},le,h(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new o(this,e),h(this).data(re,t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},s(o,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return le}}]),o}();h(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e,n=this,i=u.getSelectorFromElement(this);i&&(e=document.querySelector(i));i=h(e).data(re)?"toggle":a({},h(e).data(),h(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var o=h(e).one(ue,function(t){t.isDefaultPrevented()||o.one(he,function(){h(n).is(":visible")&&n.focus()})});Te._jQueryInterface.call(h(e),i,this)}),h.fn[oe]=Te._jQueryInterface,h.fn[oe].Constructor=Te,h.fn[oe].noConflict=function(){return h.fn[oe]=ae,Te._jQueryInterface};var Ce=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],m={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Se=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,De=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function Ne(t,o,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var t=(new window.DOMParser).parseFromString(t,"text/html"),r=Object.keys(o),s=[].slice.call(t.body.querySelectorAll("*")),n=function(t){var e=s[t],n=e.nodeName.toLowerCase();if(-1===r.indexOf(e.nodeName.toLowerCase()))return e.parentNode.removeChild(e),"continue";var t=[].slice.call(e.attributes),i=[].concat(o["*"]||[],o[n]||[]);t.forEach(function(t){!function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===Ce.indexOf(n)||Boolean(t.nodeValue.match(Se)||t.nodeValue.match(De));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,r=i.length;o<r;o++)if(n.match(i[o]))return 1}(t,i)&&e.removeAttribute(t.nodeName)})},i=0,a=s.length;i<a;i++)n(i);return t.body.innerHTML}var Ae="tooltip",ke="bs.tooltip",Ie="."+ke,Oe=h.fn[Ae],xe="bs-tooltip",je=new RegExp("(^|\\s)"+xe+"\\S+","g"),Le=["sanitize","whiteList","sanitizeFn"],Pe={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},Fe={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Re={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:m,popperConfig:null},He="show",Me={HIDE:"hide"+Ie,HIDDEN:"hidden"+Ie,SHOW:"show"+Ie,SHOWN:"shown"+Ie,INSERTED:"inserted"+Ie,CLICK:"click"+Ie,FOCUSIN:"focusin"+Ie,FOCUSOUT:"focusout"+Ie,MOUSEENTER:"mouseenter"+Ie,MOUSELEAVE:"mouseleave"+Ie},Be="fade",qe="show",Qe="hover",We="focus",Ue=function(){function i(t,e){if(void 0===qt)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var t=i.prototype;return t.enable=function(){this._isEnabled=!0},t.disable=function(){this._isEnabled=!1},t.toggleEnabled=function(){this._isEnabled=!this._isEnabled},t.toggle=function(t){var e,n;this._isEnabled&&(t?(e=this.constructor.DATA_KEY,(n=h(t.currentTarget).data(e))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)):h(this.getTipElement()).hasClass(qe)?this._leave(null,this):this._enter(null,this))},t.dispose=function(){clearTimeout(this._timeout),h.removeData(this.element,this.constructor.DATA_KEY),h(this.element).off(this.constructor.EVENT_KEY),h(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&h(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},t.show=function(){var e=this;if("none"===h(this.element).css("display"))throw new Error("Please use show on visible elements");var t,n,i=h.Event(this.constructor.Event.SHOW);this.isWithContent()&&this._isEnabled&&(h(this.element).trigger(i),n=u.findShadowRoot(this.element),t=h.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element),!i.isDefaultPrevented()&&t&&(n=this.getTipElement(),i=u.getUID(this.constructor.NAME),n.setAttribute("id",i),this.element.setAttribute("aria-describedby",i),this.setContent(),this.config.animation&&h(n).addClass(Be),t="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,i=this._getAttachment(t),this.addAttachmentClass(i),t=this._getContainer(),h(n).data(this.constructor.DATA_KEY,this),h.contains(this.element.ownerDocument.documentElement,this.tip)||h(n).appendTo(t),h(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new qt(this.element,n,this._getPopperConfig(i)),h(n).addClass(qe),"ontouchstart"in document.documentElement&&h(document.body).children().on("mouseover",null,h.noop),i=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,h(e.element).trigger(e.constructor.Event.SHOWN),"out"===t&&e._leave(null,e)},h(this.tip).hasClass(Be)?(n=u.getTransitionDurationFromElement(this.tip),h(this.tip).one(u.TRANSITION_END,i).emulateTransitionEnd(n)):i()))},t.hide=function(t){function e(){n._hoverState!==He&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),h(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()}var n=this,i=this.getTipElement(),o=h.Event(this.constructor.Event.HIDE);h(this.element).trigger(o),o.isDefaultPrevented()||(h(i).removeClass(qe),"ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),this._activeTrigger.click=!1,this._activeTrigger[We]=!1,this._activeTrigger[Qe]=!1,h(this.tip).hasClass(Be)?(o=u.getTransitionDurationFromElement(i),h(i).one(u.TRANSITION_END,e).emulateTransitionEnd(o)):e(),this._hoverState="")},t.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},t.isWithContent=function(){return Boolean(this.getTitle())},t.addAttachmentClass=function(t){h(this.getTipElement()).addClass(xe+"-"+t)},t.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},t.setContent=function(){var t=this.getTipElement();this.setElementContent(h(t.querySelectorAll(".tooltip-inner")),this.getTitle()),h(t).removeClass(Be+" "+qe)},t.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=Ne(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?h(e).parent().is(t)||t.empty().append(e):t.text(h(e).text())},t.getTitle=function(){return this.element.getAttribute("data-original-title")||("function"==typeof this.config.title?this.config.title.call(this.element):this.config.title)},t._getPopperConfig=function(t){var e=this;return a({},{placement:t,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}},this.config.popperConfig)},t._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=a({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},t._getContainer=function(){return!1===this.config.container?document.body:u.isElement(this.config.container)?h(this.config.container):h(document).find(this.config.container)},t._getAttachment=function(t){return Fe[t.toUpperCase()]},t._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(t){var e;"click"===t?h(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(t){return n.toggle(t)}):"manual"!==t&&(e=t===Qe?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,t=t===Qe?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT,h(n.element).on(e,n.config.selector,function(t){return n._enter(t)}).on(t,n.config.selector,function(t){return n._leave(t)}))}),this._hideModalHandler=function(){n.element&&n.hide()},h(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=a({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},t._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");!this.element.getAttribute("title")&&"string"==t||(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},t._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?We:Qe]=!0),h(e.getTipElement()).hasClass(qe)||e._hoverState===He?e._hoverState=He:(clearTimeout(e._timeout),e._hoverState=He,e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){e._hoverState===He&&e.show()},e.config.delay.show):e.show())},t._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?We:Qe]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){"out"===e._hoverState&&e.hide()},e.config.delay.hide):e.hide())},t._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},t._getConfig=function(t){var e=h(this.element).data();return Object.keys(e).forEach(function(t){-1!==Le.indexOf(t)&&delete e[t]}),"number"==typeof(t=a({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),u.typeCheckConfig(Ae,t,this.constructor.DefaultType),t.sanitize&&(t.template=Ne(t.template,t.whiteList,t.sanitizeFn)),t},t._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},t._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(je);null!==e&&e.length&&t.removeClass(e.join(""))},t._handlePopperPlacementChange=function(t){this.tip=t.instance.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},t._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(h(t).removeClass(Be),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data(ke),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data(ke,t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Re}},{key:"NAME",get:function(){return Ae}},{key:"DATA_KEY",get:function(){return ke}},{key:"Event",get:function(){return Me}},{key:"EVENT_KEY",get:function(){return Ie}},{key:"DefaultType",get:function(){return Pe}}]),i}();h.fn[Ae]=Ue._jQueryInterface,h.fn[Ae].Constructor=Ue,h.fn[Ae].noConflict=function(){return h.fn[Ae]=Oe,Ue._jQueryInterface};var Ve="popover",Ye="bs.popover",ze="."+Ye,Xe=h.fn[Ve],Ke="bs-popover",Ge=new RegExp("(^|\\s)"+Ke+"\\S+","g"),$e=a({},Ue.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),Je=a({},Ue.DefaultType,{content:"(string|element|function)"}),Ze={HIDE:"hide"+ze,HIDDEN:"hidden"+ze,SHOW:"show"+ze,SHOWN:"shown"+ze,INSERTED:"inserted"+ze,CLICK:"click"+ze,FOCUSIN:"focusin"+ze,FOCUSOUT:"focusout"+ze,MOUSEENTER:"mouseenter"+ze,MOUSELEAVE:"mouseleave"+ze},tn=function(t){var e;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var n=i.prototype;return n.isWithContent=function(){return this.getTitle()||this._getContent()},n.addAttachmentClass=function(t){h(this.getTipElement()).addClass(Ke+"-"+t)},n.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},n.setContent=function(){var t=h(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(".popover-body"),e),t.removeClass("fade show")},n._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},n._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(Ge);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data(Ye),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data(Ye,t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return $e}},{key:"NAME",get:function(){return Ve}},{key:"DATA_KEY",get:function(){return Ye}},{key:"Event",get:function(){return Ze}},{key:"EVENT_KEY",get:function(){return ze}},{key:"DefaultType",get:function(){return Je}}]),i}(Ue);h.fn[Ve]=tn._jQueryInterface,h.fn[Ve].Constructor=tn,h.fn[Ve].noConflict=function(){return h.fn[Ve]=Xe,tn._jQueryInterface};var en="scrollspy",nn="bs.scrollspy",on="."+nn,rn=h.fn[en],sn={offset:10,method:"auto",target:""},an={offset:"number",method:"string",target:"(string|element)"},ln="active",cn=".nav, .list-group",hn=".nav-link",un=".list-group-item",fn="position",dn=function(){function n(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" "+hn+","+this._config.target+" "+un+","+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,h(this._scrollElement).on("scroll.bs.scrollspy",function(t){return n._process(t)}),this.refresh(),this._process()}var t=n.prototype;return t.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":fn,i="auto"===this._config.method?t:this._config.method,o=i===fn?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=u.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){t=e.getBoundingClientRect();if(t.width||t.height)return[h(e)[i]().top+o,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},t.dispose=function(){h.removeData(this._element,nn),h(this._scrollElement).off(on),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},t._getConfig=function(t){var e;return"string"!=typeof(t=a({},sn,"object"==typeof t&&t?t:{})).target&&u.isElement(t.target)&&((e=h(t.target).attr("id"))||(e=u.getUID(en),h(t.target).attr("id",e)),t.target="#"+e),u.typeCheckConfig(en,t,an),t},t._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},t._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},t._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},t._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;)this._activeTarget!==this._targets[i]&&t>=this._offsets[i]&&(void 0===this._offsets[i+1]||t<this._offsets[i+1])&&this._activate(this._targets[i])}},t._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),t=h([].slice.call(document.querySelectorAll(t.join(","))));t.hasClass("dropdown-item")?(t.closest(".dropdown").find(".dropdown-toggle").addClass(ln),t.addClass(ln)):(t.addClass(ln),t.parents(cn).prev(hn+", "+un).addClass(ln),t.parents(cn).prev(".nav-item").children(hn).addClass(ln)),h(this._scrollElement).trigger("activate.bs.scrollspy",{relatedTarget:e})},t._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains(ln)}).forEach(function(t){return t.classList.remove(ln)})},n._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(nn);if(t||(t=new n(this,"object"==typeof e&&e),h(this).data(nn,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},s(n,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return sn}}]),n}();h(window).on("load.bs.scrollspy.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),e=t.length;e--;){var n=h(t[e]);dn._jQueryInterface.call(n,n.data())}}),h.fn[en]=dn._jQueryInterface,h.fn[en].Constructor=dn,h.fn[en].noConflict=function(){return h.fn[en]=rn,dn._jQueryInterface};var pn="bs.tab",m="."+pn,mn=h.fn.tab,gn="active",_n=".active",vn="> li > .active",yn=function(){function i(t){this._element=t}var t=i.prototype;return t.show=function(){var t,e,n,i,o,r,s=this;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&h(this._element).hasClass(gn)||h(this._element).hasClass("disabled")||(r=h(this._element).closest(".nav, .list-group")[0],e=u.getSelectorFromElement(this._element),r&&(o="UL"===r.nodeName||"OL"===r.nodeName?vn:_n,n=(n=h.makeArray(h(r).find(o)))[n.length-1]),i=h.Event("hide.bs.tab",{relatedTarget:this._element}),o=h.Event("show.bs.tab",{relatedTarget:n}),n&&h(n).trigger(i),h(this._element).trigger(o),o.isDefaultPrevented()||i.isDefaultPrevented()||(e&&(t=document.querySelector(e)),this._activate(this._element,r),r=function(){var t=h.Event("hidden.bs.tab",{relatedTarget:s._element}),e=h.Event("shown.bs.tab",{relatedTarget:n});h(n).trigger(t),h(s._element).trigger(e)},t?this._activate(t,t.parentNode,r):r()))},t.dispose=function(){h.removeData(this._element,pn),this._element=null},t._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?h(e).children(_n):h(e).find(vn))[0],r=n&&o&&h(o).hasClass("fade"),e=function(){return i._transitionComplete(t,o,n)};o&&r?(r=u.getTransitionDurationFromElement(o),h(o).removeClass("show").one(u.TRANSITION_END,e).emulateTransitionEnd(r)):e()},t._transitionComplete=function(t,e,n){var i;e&&(h(e).removeClass(gn),(i=h(e.parentNode).find("> .dropdown-menu .active")[0])&&h(i).removeClass(gn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)),h(t).addClass(gn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),u.reflow(t),t.classList.contains("fade")&&t.classList.add("show"),t.parentNode&&h(t.parentNode).hasClass("dropdown-menu")&&((e=h(t).closest(".dropdown")[0])&&(e=[].slice.call(e.querySelectorAll(".dropdown-toggle")),h(e).addClass(gn)),t.setAttribute("aria-expanded",!0)),n&&n()},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(pn);if(e||(e=new i(this),t.data(pn,e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),i}();h(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',function(t){t.preventDefault(),yn._jQueryInterface.call(h(this),"show")}),h.fn.tab=yn._jQueryInterface,h.fn.tab.Constructor=yn,h.fn.tab.noConflict=function(){return h.fn.tab=mn,yn._jQueryInterface};var bn="toast",En="bs.toast",m="."+En,wn=h.fn[bn],Tn="click.dismiss"+m,Cn="show",Sn="showing",Dn={animation:"boolean",autohide:"boolean",delay:"number"},Nn={animation:!0,autohide:!0,delay:500},An=function(){function i(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}var t=i.prototype;return t.show=function(){var t,e=this,n=h.Event("show.bs.toast");h(this._element).trigger(n),n.isDefaultPrevented()||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),t=function(){e._element.classList.remove(Sn),e._element.classList.add(Cn),h(e._element).trigger("shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout(function(){e.hide()},e._config.delay))},this._element.classList.remove("hide"),u.reflow(this._element),this._element.classList.add(Sn),this._config.animation?(n=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t())},t.hide=function(){var t;this._element.classList.contains(Cn)&&(t=h.Event("hide.bs.toast"),h(this._element).trigger(t),t.isDefaultPrevented()||this._close())},t.dispose=function(){this._clearTimeout(),this._element.classList.contains(Cn)&&this._element.classList.remove(Cn),h(this._element).off(Tn),h.removeData(this._element,En),this._element=null,this._config=null},t._getConfig=function(t){return t=a({},Nn,h(this._element).data(),"object"==typeof t&&t?t:{}),u.typeCheckConfig(bn,t,this.constructor.DefaultType),t},t._setListeners=function(){var t=this;h(this._element).on(Tn,'[data-dismiss="toast"]',function(){return t.hide()})},t._close=function(){function t(){n._element.classList.add("hide"),h(n._element).trigger("hidden.bs.toast")}var e,n=this;this._element.classList.remove(Cn),this._config.animation?(e=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t()},t._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(En);if(e||(e=new i(this,"object"==typeof n&&n),t.data(En,e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"DefaultType",get:function(){return Dn}},{key:"Default",get:function(){return Nn}}]),i}();h.fn[bn]=An._jQueryInterface,h.fn[bn].Constructor=An,h.fn[bn].noConflict=function(){return h.fn[bn]=wn,An._jQueryInterface},t.Alert=f,t.Button=b,t.Carousel=j,t.Collapse=U,t.Dropdown=ie,t.Modal=Te,t.Popover=tn,t.Scrollspy=dn,t.Tab=yn,t.Toast=An,t.Tooltip=Ue,t.Util=u,Object.defineProperty(t,"__esModule",{value:!0})});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery")):"function"==typeof define&&define.amd?define(["exports","jquery"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap={},t.jQuery)}(this,function(t,h){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function o(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t}).apply(this,arguments)}h=h&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h;var u={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e,n=t.getAttribute("data-target");n&&"#"!==n||(n=(e=t.getAttribute("href"))&&"#"!==e?e.trim():"");try{return document.querySelector(n)?n:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=h(t).css("transition-duration"),n=h(t).css("transition-delay"),i=parseFloat(e),t=parseFloat(n);return i||t?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){h(t).trigger("transitionend")},supportsTransitionEnd:function(){return Boolean("transitionend")},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],r=e[i],r=r&&u.isElement(r)?"element":null===r||void 0===r?""+r:{}.toString.call(r).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(r))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+r+'" but expected type "'+o+'".')}},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?u.findShadowRoot(t.parentNode):null;t=t.getRootNode();return t instanceof ShadowRoot?t:null},jQueryDetection:function(){if(void 0===h)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=h.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};u.jQueryDetection(),h.fn.emulateTransitionEnd=function(t){var e=this,n=!1;return h(this).one(u.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||u.triggerTransitionEnd(e)},t),this},h.event.special[u.TRANSITION_END]={bindType:"transitionend",delegateType:"transitionend",handle:function(t){if(h(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var e="alert",n=h.fn[e],s=((vt=a.prototype).close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},vt.dispose=function(){h.removeData(this._element,"bs.alert"),this._element=null},vt._getRootElement=function(t){var e=u.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n=n||h(t).closest(".alert")[0]},vt._triggerCloseEvent=function(t){var e=h.Event("close.bs.alert");return h(t).trigger(e),e},vt._removeElement=function(e){var t,n=this;h(e).removeClass("show"),h(e).hasClass("fade")?(t=u.getTransitionDurationFromElement(e),h(e).one(u.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)):this._destroyElement(e)},vt._destroyElement=function(t){h(t).detach().trigger("closed.bs.alert").remove()},a._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.alert");e||(e=new a(this),t.data("bs.alert",e)),"close"===n&&e[n](this)})},a._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},o(a,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),a);function a(t){this._element=t}h(document).on("click.bs.alert.data-api",'[data-dismiss="alert"]',s._handleDismiss(new s)),h.fn[e]=s._jQueryInterface,h.fn[e].Constructor=s,h.fn[e].noConflict=function(){return h.fn[e]=n,s._jQueryInterface};var l=h.fn.button,c=((Y=d.prototype).toggle=function(){var t,e=!0,n=!0,i=h(this._element).closest('[data-toggle="buttons"]')[0];!i||(t=this._element.querySelector('input:not([type="hidden"])'))&&("radio"===t.type&&(t.checked&&this._element.classList.contains("active")?e=!1:(i=i.querySelector(".active"))&&h(i).removeClass("active")),e&&("checkbox"!==t.type&&"radio"!==t.type||(t.checked=!this._element.classList.contains("active")),h(t).trigger("change")),t.focus(),n=!1),this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains("active")),e&&h(this._element).toggleClass("active"))},Y.dispose=function(){h.removeData(this._element,"bs.button"),this._element=null},d._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.button");t||(t=new d(this),h(this).data("bs.button",t)),"toggle"===e&&t[e]()})},o(d,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),d);function d(t){this._element=t}h(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var e,n=t.target,i=n;h(n).hasClass("btn")||(n=h(n).closest(".btn")[0]),!n||n.hasAttribute("disabled")||n.classList.contains("disabled")||(e=n.querySelector('input:not([type="hidden"])'))&&(e.hasAttribute("disabled")||e.classList.contains("disabled"))?t.preventDefault():("LABEL"!==i.tagName||e&&"checkbox"!==e.type)&&c._jQueryInterface.call(h(n),"toggle")}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){var e=h(t.target).closest(".btn")[0];h(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),h(window).on("load.bs.button.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')),e=0,n=t.length;e<n;e++){var i=t[e],o=i.querySelector('input:not([type="hidden"])');o.checked||o.hasAttribute("checked")?i.classList.add("active"):i.classList.remove("active")}for(var r=0,s=(t=[].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length;r<s;r++){var a=t[r];"true"===a.getAttribute("aria-pressed")?a.classList.add("active"):a.classList.remove("active")}}),h.fn.button=c._jQueryInterface,h.fn.button.Constructor=c,h.fn.button.noConflict=function(){return h.fn.button=l,c._jQueryInterface};var f="carousel",p=h.fn[f],m={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},g={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},_={TOUCH:"touch",PEN:"pen"},v=((mt=b.prototype).next=function(){this._isSliding||this._slide("next")},mt.nextWhenVisible=function(){!document.hidden&&h(this._element).is(":visible")&&"hidden"!==h(this._element).css("visibility")&&this.next()},mt.prev=function(){this._isSliding||this._slide("prev")},mt.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&(u.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},mt.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},mt.to=function(t){var e=this;this._activeElement=this._element.querySelector(".active.carousel-item");var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)h(this._element).one("slid.bs.carousel",function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();n=n<t?"next":"prev";this._slide(n,this._items[t])}},mt.dispose=function(){h(this._element).off(".bs.carousel"),h.removeData(this._element,"bs.carousel"),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},mt._getConfig=function(t){return t=r({},m,t),u.typeCheckConfig(f,t,g),t},mt._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);t<=40||(t=t/this.touchDeltaX,(this.touchDeltaX=0)<t&&this.prev(),t<0&&this.next())},mt._addEventListeners=function(){var e=this;this._config.keyboard&&h(this._element).on("keydown.bs.carousel",function(t){return e._keydown(t)}),"hover"===this._config.pause&&h(this._element).on("mouseenter.bs.carousel",function(t){return e.pause(t)}).on("mouseleave.bs.carousel",function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},mt._addTouchEventListeners=function(){var t,e,n=this;this._touchSupported&&(t=function(t){n._pointerEvent&&_[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},e=function(t){n._pointerEvent&&_[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))},h(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel",function(t){return t.preventDefault()}),this._pointerEvent?(h(this._element).on("pointerdown.bs.carousel",t),h(this._element).on("pointerup.bs.carousel",e),this._element.classList.add("pointer-event")):(h(this._element).on("touchstart.bs.carousel",t),h(this._element).on("touchmove.bs.carousel",function(t){(t=t).originalEvent.touches&&1<t.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=t.originalEvent.touches[0].clientX-n.touchStartX}),h(this._element).on("touchend.bs.carousel",e)))},mt._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},mt._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},mt._getItemByDirection=function(t,e){var n="next"===t,i="prev"===t,o=this._getItemIndex(e),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return e;t=(o+("prev"===t?-1:1))%this._items.length;return-1==t?this._items[this._items.length-1]:this._items[t]},mt._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(".active.carousel-item")),n=h.Event("slide.bs.carousel",{relatedTarget:t,direction:e,from:i,to:n});return h(this._element).trigger(n),n},mt._setActiveIndicatorElement=function(t){var e;this._indicatorsElement&&(e=[].slice.call(this._indicatorsElement.querySelectorAll(".active")),h(e).removeClass("active"),(t=this._indicatorsElement.children[this._getItemIndex(t)])&&h(t).addClass("active"))},mt._slide=function(t,e){var n,i,o,r=this,s=this._element.querySelector(".active.carousel-item"),a=this._getItemIndex(s),l=e||s&&this._getItemByDirection(t,s),c=this._getItemIndex(l),e=Boolean(this._interval),t="next"===t?(n="carousel-item-left",i="carousel-item-next","left"):(n="carousel-item-right",i="carousel-item-prev","right");l&&h(l).hasClass("active")?this._isSliding=!1:!this._triggerSlideEvent(l,t).isDefaultPrevented()&&s&&l&&(this._isSliding=!0,e&&this.pause(),this._setActiveIndicatorElement(l),o=h.Event("slid.bs.carousel",{relatedTarget:l,direction:t,from:a,to:c}),h(this._element).hasClass("slide")?(h(l).addClass(i),u.reflow(l),h(s).addClass(n),h(l).addClass(n),(c=parseInt(l.getAttribute("data-interval"),10))?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=c):this._config.interval=this._config.defaultInterval||this._config.interval,c=u.getTransitionDurationFromElement(s),h(s).one(u.TRANSITION_END,function(){h(l).removeClass(n+" "+i).addClass("active"),h(s).removeClass("active "+i+" "+n),r._isSliding=!1,setTimeout(function(){return h(r._element).trigger(o)},0)}).emulateTransitionEnd(c)):(h(s).removeClass("active"),h(l).addClass("active"),this._isSliding=!1,h(this._element).trigger(o)),e&&this.cycle())},b._jQueryInterface=function(i){return this.each(function(){var t=h(this).data("bs.carousel"),e=r({},m,h(this).data());"object"==typeof i&&(e=r({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new b(this,e),h(this).data("bs.carousel",t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},b._dataApiClickHandler=function(t){var e,n,i=u.getSelectorFromElement(this);!i||(e=h(i)[0])&&h(e).hasClass("carousel")&&(n=r({},h(e).data(),h(this).data()),(i=this.getAttribute("data-slide-to"))&&(n.interval=!1),b._jQueryInterface.call(h(e),n),i&&h(e).data("bs.carousel").to(i),t.preventDefault())},o(b,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return m}}]),b);function b(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}h(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",v._dataApiClickHandler),h(window).on("load.bs.carousel.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),e=0,n=t.length;e<n;e++){var i=h(t[e]);v._jQueryInterface.call(i,i.data())}}),h.fn[f]=v._jQueryInterface,h.fn[f].Constructor=v,h.fn[f].noConflict=function(){return h.fn[f]=p,v._jQueryInterface};var y="collapse",w=h.fn[y],E={toggle:!0,parent:""},T={toggle:"boolean",parent:"(string|element)"},C=((vt=S.prototype).toggle=function(){h(this._element).hasClass("show")?this.hide():this.show()},vt.show=function(){var t,e,n,i,o=this;this._isTransitioning||h(this._element).hasClass("show")||(this._parent&&0===(i=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t){return"string"==typeof o._config.parent?t.getAttribute("data-parent")===o._config.parent:t.classList.contains("collapse")})).length&&(i=null),i&&(n=h(i).not(this._selector).data("bs.collapse"))&&n._isTransitioning)||(t=h.Event("show.bs.collapse"),h(this._element).trigger(t),t.isDefaultPrevented()||(i&&(S._jQueryInterface.call(h(i).not(this._selector),"hide"),n||h(i).data("bs.collapse",null)),e=this._getDimension(),h(this._element).removeClass("collapse").addClass("collapsing"),this._element.style[e]=0,this._triggerArray.length&&h(this._triggerArray).removeClass("collapsed").attr("aria-expanded",!0),this.setTransitioning(!0),n="scroll"+(e[0].toUpperCase()+e.slice(1)),i=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(){h(o._element).removeClass("collapsing").addClass("collapse show"),o._element.style[e]="",o.setTransitioning(!1),h(o._element).trigger("shown.bs.collapse")}).emulateTransitionEnd(i),this._element.style[e]=this._element[n]+"px"))},vt.hide=function(){var t=this;if(!this._isTransitioning&&h(this._element).hasClass("show")){var e=h.Event("hide.bs.collapse");if(h(this._element).trigger(e),!e.isDefaultPrevented()){e=this._getDimension();this._element.style[e]=this._element.getBoundingClientRect()[e]+"px",u.reflow(this._element),h(this._element).addClass("collapsing").removeClass("collapse show");var n=this._triggerArray.length;if(0<n)for(var i=0;i<n;i++){var o=this._triggerArray[i],r=u.getSelectorFromElement(o);null!==r&&(h([].slice.call(document.querySelectorAll(r))).hasClass("show")||h(o).addClass("collapsed").attr("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[e]="";e=u.getTransitionDurationFromElement(this._element);h(this._element).one(u.TRANSITION_END,function(){t.setTransitioning(!1),h(t._element).removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")}).emulateTransitionEnd(e)}}},vt.setTransitioning=function(t){this._isTransitioning=t},vt.dispose=function(){h.removeData(this._element,"bs.collapse"),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},vt._getConfig=function(t){return(t=r({},E,t)).toggle=Boolean(t.toggle),u.typeCheckConfig(y,t,T),t},vt._getDimension=function(){return h(this._element).hasClass("width")?"width":"height"},vt._getParent=function(){var t,n=this;u.isElement(this._config.parent)?(t=this._config.parent,void 0!==this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',e=[].slice.call(t.querySelectorAll(e));return h(e).each(function(t,e){n._addAriaAndCollapsedClass(S._getTargetFromElement(e),[e])}),t},vt._addAriaAndCollapsedClass=function(t,e){t=h(t).hasClass("show");e.length&&h(e).toggleClass("collapsed",!t).attr("aria-expanded",t)},S._getTargetFromElement=function(t){t=u.getSelectorFromElement(t);return t?document.querySelector(t):null},S._jQueryInterface=function(i){return this.each(function(){var t=h(this),e=t.data("bs.collapse"),n=r({},E,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&"string"==typeof i&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new S(this,n),t.data("bs.collapse",e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},o(S,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return E}}]),S);function S(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll('[data-toggle="collapse"]')),i=0,o=n.length;i<o;i++){var r=n[i],s=u.getSelectorFromElement(r),a=[].slice.call(document.querySelectorAll(s)).filter(function(t){return t===e});null!==s&&0<a.length&&(this._selector=s,this._triggerArray.push(r))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}h(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=h(this),t=u.getSelectorFromElement(this),t=[].slice.call(document.querySelectorAll(t));h(t).each(function(){var t=h(this),e=t.data("bs.collapse")?"toggle":n.data();C._jQueryInterface.call(t,e)})}),h.fn[y]=C._jQueryInterface,h.fn[y].Constructor=C,h.fn[y].noConflict=function(){return h.fn[y]=w,C._jQueryInterface};var D="undefined"!=typeof window&&"undefined"!=typeof document&&"undefined"!=typeof navigator,N=function(){for(var t=["Edge","Trident","Firefox"],e=0;e<t.length;e+=1)if(D&&0<=navigator.userAgent.indexOf(t[e]))return 1;return 0}(),k=D&&window.Promise?function(t){var e=!1;return function(){e||(e=!0,window.Promise.resolve().then(function(){e=!1,t()}))}}:function(t){var e=!1;return function(){e||(e=!0,setTimeout(function(){e=!1,t()},N))}};function A(t){return t&&"[object Function]"==={}.toString.call(t)}function I(t,e){if(1!==t.nodeType)return[];t=t.ownerDocument.defaultView.getComputedStyle(t,null);return e?t[e]:t}function O(t){return"HTML"===t.nodeName?t:t.parentNode||t.host}function x(t){if(!t)return document.body;switch(t.nodeName){case"HTML":case"BODY":return t.ownerDocument.body;case"#document":return t.body}var e=I(t),n=e.overflow,i=e.overflowX,e=e.overflowY;return/(auto|scroll|overlay)/.test(n+e+i)?t:x(O(t))}function j(t){return t&&t.referenceNode?t.referenceNode:t}var L=D&&!(!window.MSInputMethodContext||!document.documentMode),P=D&&/MSIE 10/.test(navigator.userAgent);function F(t){return 11===t?L:10!==t&&L||P}function R(t){if(!t)return document.documentElement;for(var e=F(10)?document.body:null,n=t.offsetParent||null;n===e&&t.nextElementSibling;)n=(t=t.nextElementSibling).offsetParent;var i=n&&n.nodeName;return i&&"BODY"!==i&&"HTML"!==i?-1!==["TH","TD","TABLE"].indexOf(n.nodeName)&&"static"===I(n,"position")?R(n):n:(t?t.ownerDocument:document).documentElement}function H(t){return null!==t.parentNode?H(t.parentNode):t}function M(t,e){if(!(t&&t.nodeType&&e&&e.nodeType))return document.documentElement;var n=t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_FOLLOWING,i=n?t:e,o=n?e:t,n=document.createRange();n.setStart(i,0),n.setEnd(o,0);n=n.commonAncestorContainer;if(t!==n&&e!==n||i.contains(o))return"BODY"===(o=(i=n).nodeName)||"HTML"!==o&&R(i.firstElementChild)!==i?R(n):n;n=H(t);return n.host?M(n.host,e):M(t,H(e).host)}function B(t,e){var n="top"===(1<arguments.length&&void 0!==e?e:"top")?"scrollTop":"scrollLeft",e=t.nodeName;if("BODY"!==e&&"HTML"!==e)return t[n];e=t.ownerDocument.documentElement;return(t.ownerDocument.scrollingElement||e)[n]}function q(t,e){var n="x"===e?"Left":"Top",e="Left"==n?"Right":"Bottom";return parseFloat(t["border"+n+"Width"])+parseFloat(t["border"+e+"Width"])}function Q(t,e,n,i){return Math.max(e["offset"+t],e["scroll"+t],n["client"+t],n["offset"+t],n["scroll"+t],F(10)?parseInt(n["offset"+t])+parseInt(i["margin"+("Height"===t?"Top":"Left")])+parseInt(i["margin"+("Height"===t?"Bottom":"Right")]):0)}function W(t){var e=t.body,n=t.documentElement,t=F(10)&&getComputedStyle(n);return{height:Q("Height",e,n,t),width:Q("Width",e,n,t)}}function U(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var V=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},Y=function(t,e,n){return e&&X(t.prototype,e),n&&X(t,n),t},z=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t};function X(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function K(t){return z({},t,{right:t.left+t.width,bottom:t.top+t.height})}function G(t){var e,n,i={};try{F(10)?(i=t.getBoundingClientRect(),e=B(t,"top"),n=B(t,"left"),i.top+=e,i.left+=n,i.bottom+=e,i.right+=n):i=t.getBoundingClientRect()}catch(t){}var o={left:i.left,top:i.top,width:i.right-i.left,height:i.bottom-i.top},r="HTML"===t.nodeName?W(t.ownerDocument):{},s=r.width||t.clientWidth||o.width,a=r.height||t.clientHeight||o.height,r=t.offsetWidth-s,s=t.offsetHeight-a;return(r||s)&&(r-=q(a=I(t),"x"),s-=q(a,"y"),o.width-=r,o.height-=s),K(o)}function $(t,e,n){var i=2<arguments.length&&void 0!==n&&n,o=F(10),r="HTML"===e.nodeName,s=G(t),a=G(e),l=x(t),c=I(e),n=parseFloat(c.borderTopWidth),t=parseFloat(c.borderLeftWidth);i&&r&&(a.top=Math.max(a.top,0),a.left=Math.max(a.left,0));s=K({top:s.top-a.top-n,left:s.left-a.left-t,width:s.width,height:s.height});return s.marginTop=0,s.marginLeft=0,!o&&r&&(r=parseFloat(c.marginTop),c=parseFloat(c.marginLeft),s.top-=n-r,s.bottom-=n-r,s.left-=t-c,s.right-=t-c,s.marginTop=r,s.marginLeft=c),(o&&!i?e.contains(l):e===l&&"BODY"!==l.nodeName)&&(s=function(t,e,n){var i=2<arguments.length&&void 0!==n&&n,n=B(e,"top"),e=B(e,"left"),i=i?-1:1;return t.top+=n*i,t.bottom+=n*i,t.left+=e*i,t.right+=e*i,t}(s,e)),s}function J(t){if(!t||!t.parentElement||F())return document.documentElement;for(var e=t.parentElement;e&&"none"===I(e,"transform");)e=e.parentElement;return e||document.documentElement}function Z(t,e,n,i,o){var r=4<arguments.length&&void 0!==o&&o,s={top:0,left:0},a=r?J(t):M(t,j(e));"viewport"===i?s=function(t,e){var n=1<arguments.length&&void 0!==e&&e,i=t.ownerDocument.documentElement,o=$(t,i),r=Math.max(i.clientWidth,window.innerWidth||0),e=Math.max(i.clientHeight,window.innerHeight||0),t=n?0:B(i),i=n?0:B(i,"left");return K({top:t-o.top+o.marginTop,left:i-o.left+o.marginLeft,width:r,height:e})}(a,r):(o=void 0,"scrollParent"===i?"BODY"===(o=x(O(e))).nodeName&&(o=t.ownerDocument.documentElement):o="window"===i?t.ownerDocument.documentElement:i,l=$(o,a,r),"HTML"!==o.nodeName||function t(e){var n=e.nodeName;if("BODY"===n||"HTML"===n)return!1;if("fixed"===I(e,"position"))return!0;e=O(e);return!!e&&t(e)}(a)?s=l:(t=(a=W(t.ownerDocument)).height,a=a.width,s.top+=l.top-l.marginTop,s.bottom=t+l.top,s.left+=l.left-l.marginLeft,s.right=a+l.left));var l="number"==typeof(n=n||0);return s.left+=l?n:n.left||0,s.top+=l?n:n.top||0,s.right-=l?n:n.right||0,s.bottom-=l?n:n.bottom||0,s}function tt(t,e,n,i,o,r){r=5<arguments.length&&void 0!==r?r:0;if(-1===t.indexOf("auto"))return t;var o=Z(n,i,r,o),s={top:{width:o.width,height:e.top-o.top},right:{width:o.right-e.right,height:o.height},bottom:{width:o.width,height:o.bottom-e.bottom},left:{width:e.left-o.left,height:o.height}},e=Object.keys(s).map(function(t){return z({key:t},s[t],{area:(t=s[t]).width*t.height})}).sort(function(t,e){return e.area-t.area}),o=e.filter(function(t){var e=t.width,t=t.height;return e>=n.clientWidth&&t>=n.clientHeight}),e=(0<o.length?o:e)[0].key,t=t.split("-")[1];return e+(t?"-"+t:"")}function et(t,e,n,i){i=3<arguments.length&&void 0!==i?i:null;return $(n,i?J(e):M(e,j(n)),i)}function nt(t){var e=t.ownerDocument.defaultView.getComputedStyle(t),n=parseFloat(e.marginTop||0)+parseFloat(e.marginBottom||0),e=parseFloat(e.marginLeft||0)+parseFloat(e.marginRight||0);return{width:t.offsetWidth+e,height:t.offsetHeight+n}}function it(t){var e={left:"right",right:"left",bottom:"top",top:"bottom"};return t.replace(/left|right|bottom|top/g,function(t){return e[t]})}function ot(t,e,n){n=n.split("-")[0];var i=nt(t),o={width:i.width,height:i.height},r=-1!==["right","left"].indexOf(n),s=r?"top":"left",a=r?"left":"top",t=r?"height":"width",r=r?"width":"height";return o[s]=e[s]+e[t]/2-i[t]/2,o[a]=n===a?e[a]-i[r]:e[it(a)],o}function rt(t,e){return Array.prototype.find?t.find(e):t.filter(e)[0]}function st(t,n,e){return(void 0===e?t:t.slice(0,function(t,e){if(Array.prototype.findIndex)return t.findIndex(function(t){return t.name===e});var n=rt(t,function(t){return t.name===e});return t.indexOf(n)}(t,e))).forEach(function(t){t.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var e=t.function||t.fn;t.enabled&&A(e)&&(n.offsets.popper=K(n.offsets.popper),n.offsets.reference=K(n.offsets.reference),n=e(n,t))}),n}function at(t,n){return t.some(function(t){var e=t.name;return t.enabled&&e===n})}function lt(t){for(var e=[!1,"ms","Webkit","Moz","O"],n=t.charAt(0).toUpperCase()+t.slice(1),i=0;i<e.length;i++){var o=e[i],o=o?""+o+n:t;if(void 0!==document.body.style[o])return o}return null}function ct(t){t=t.ownerDocument;return t?t.defaultView:window}function ht(){var t,e,n;this.state.eventsEnabled||(this.state=(t=this.reference,this.options,e=this.state,n=this.scheduleUpdate,e.updateBound=n,ct(t).addEventListener("resize",e.updateBound,{passive:!0}),function t(e,n,i,o){var r="BODY"===e.nodeName,e=r?e.ownerDocument.defaultView:e;e.addEventListener(n,i,{passive:!0}),r||t(x(e.parentNode),n,i,o),o.push(e)}(t=x(t),"scroll",e.updateBound,e.scrollParents),e.scrollElement=t,e.eventsEnabled=!0,e))}function ut(t){return""!==t&&!isNaN(parseFloat(t))&&isFinite(t)}function dt(n,i){Object.keys(i).forEach(function(t){var e="";-1!==["width","height","top","right","bottom","left"].indexOf(t)&&ut(i[t])&&(e="px"),n.style[t]=i[t]+e})}var ft=D&&/Firefox/i.test(navigator.userAgent);function pt(t,e,n){var i,o=rt(t,function(t){return t.name===e}),r=!!o&&t.some(function(t){return t.name===n&&t.enabled&&t.order<o.order});return r||(i="`"+e+"`",t="`"+n+"`",console.warn(t+" modifier is required by "+i+" modifier in order to work, be sure to include it before "+i+"!")),r}var mt=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],gt=mt.slice(3);function _t(t,e){e=1<arguments.length&&void 0!==e&&e,t=gt.indexOf(t),t=gt.slice(t+1).concat(gt.slice(0,t));return e?t.reverse():t}var vt={placement:"bottom",positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(t){var e,n,i=t.placement,o=i.split("-")[0],r=i.split("-")[1];return r&&(e=(n=t.offsets).reference,i=n.popper,o=(n=-1!==["bottom","top"].indexOf(o))?"width":"height",o={start:U({},n=n?"left":"top",e[n]),end:U({},n,e[n]+e[o]-i[o])},t.offsets.popper=z({},i,o[r])),t}},offset:{order:200,enabled:!0,fn:function(t,e){var o,r,s,a,n=e.offset,i=t.placement,l=t.offsets,c=l.popper,h=l.reference,e=i.split("-")[0],l=ut(+n)?[+n,0]:(i=n,o=c,r=h,s=[0,0],a=-1!==["right","left"].indexOf(n=e),h=i.split(/(\+|\-)/).map(function(t){return t.trim()}),n=h.indexOf(rt(h,function(t){return-1!==t.search(/,|\s/)})),h[n]&&-1===h[n].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead."),i=/\s*,\s*|\s+/,(-1!==n?[h.slice(0,n).concat([h[n].split(i)[0]]),[h[n].split(i)[1]].concat(h.slice(n+1))]:[h]).map(function(t,e){var n=(1===e?!a:a)?"height":"width",i=!1;return t.reduce(function(t,e){return""===t[t.length-1]&&-1!==["+","-"].indexOf(e)?(t[t.length-1]=e,i=!0,t):i?(t[t.length-1]+=e,i=!1,t):t.concat(e)},[]).map(function(t){return function(t,e,n,i){var o=t.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),r=+o[1],o=o[2];if(!r)return t;if(0!==o.indexOf("%"))return"vh"===o||"vw"===o?("vh"===o?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*r:r;var s=void 0;switch(o){case"%p":s=n;break;case"%":case"%r":default:s=i}return K(s)[e]/100*r}(t,n,o,r)})}).forEach(function(n,i){n.forEach(function(t,e){ut(t)&&(s[i]+=t*("-"===n[e-1]?-1:1))})}),s);return"left"===e?(c.top+=l[0],c.left-=l[1]):"right"===e?(c.top+=l[0],c.left+=l[1]):"top"===e?(c.left+=l[0],c.top-=l[1]):"bottom"===e&&(c.left+=l[0],c.top+=l[1]),t.popper=c,t},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(t,i){var e=i.boundariesElement||R(t.instance.popper);t.instance.reference===e&&(e=R(e));var n=lt("transform"),o=t.instance.popper.style,r=o.top,s=o.left,a=o[n];o.top="",o.left="",o[n]="";var l=Z(t.instance.popper,t.instance.reference,i.padding,e,t.positionFixed);o.top=r,o.left=s,o[n]=a,i.boundaries=l;var a=i.priority,c=t.offsets.popper,h={primary:function(t){var e=c[t];return c[t]<l[t]&&!i.escapeWithReference&&(e=Math.max(c[t],l[t])),U({},t,e)},secondary:function(t){var e="right"===t?"left":"top",n=c[e];return c[t]>l[t]&&!i.escapeWithReference&&(n=Math.min(c[e],l[t]-("right"===t?c.width:c.height))),U({},e,n)}};return a.forEach(function(t){var e=-1!==["left","top"].indexOf(t)?"primary":"secondary";c=z({},c,h[e](t))}),t.offsets.popper=c,t},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(t){var e=t.offsets,n=e.popper,i=e.reference,o=t.placement.split("-")[0],r=Math.floor,s=-1!==["top","bottom"].indexOf(o),e=s?"right":"bottom",o=s?"left":"top",s=s?"width":"height";return n[e]<r(i[o])&&(t.offsets.popper[o]=r(i[o])-n[s]),n[o]>r(i[e])&&(t.offsets.popper[o]=r(i[e])),t}},arrow:{order:500,enabled:!0,fn:function(t,e){if(!pt(t.instance.modifiers,"arrow","keepTogether"))return t;var n=e.element;if("string"==typeof n){if(!(n=t.instance.popper.querySelector(n)))return t}else if(!t.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),t;var i=t.placement.split("-")[0],o=t.offsets,r=o.popper,s=o.reference,a=-1!==["left","right"].indexOf(i),l=a?"height":"width",c=a?"Top":"Left",h=c.toLowerCase(),e=a?"left":"top",o=a?"bottom":"right",i=nt(n)[l];s[o]-i<r[h]&&(t.offsets.popper[h]-=r[h]-(s[o]-i)),s[h]+i>r[o]&&(t.offsets.popper[h]+=s[h]+i-r[o]),t.offsets.popper=K(t.offsets.popper);a=s[h]+s[l]/2-i/2,o=I(t.instance.popper),s=parseFloat(o["margin"+c]),c=parseFloat(o["border"+c+"Width"]),c=a-t.offsets.popper[h]-s-c,c=Math.max(Math.min(r[l]-i,c),0);return t.arrowElement=n,t.offsets.arrow=(U(n={},h,Math.round(c)),U(n,e,""),n),t},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(c,h){if(at(c.instance.modifiers,"inner"))return c;if(c.flipped&&c.placement===c.originalPlacement)return c;var u=Z(c.instance.popper,c.instance.reference,h.padding,h.boundariesElement,c.positionFixed),d=c.placement.split("-")[0],f=it(d),p=c.placement.split("-")[1]||"",m=[];switch(h.behavior){case"flip":m=[d,f];break;case"clockwise":m=_t(d);break;case"counterclockwise":m=_t(d,!0);break;default:m=h.behavior}return m.forEach(function(t,e){if(d!==t||m.length===e+1)return c;d=c.placement.split("-")[0],f=it(d);var n=c.offsets.popper,i=c.offsets.reference,o=Math.floor,r="left"===d&&o(n.right)>o(i.left)||"right"===d&&o(n.left)<o(i.right)||"top"===d&&o(n.bottom)>o(i.top)||"bottom"===d&&o(n.top)<o(i.bottom),s=o(n.left)<o(u.left),a=o(n.right)>o(u.right),l=o(n.top)<o(u.top),t=o(n.bottom)>o(u.bottom),i="left"===d&&s||"right"===d&&a||"top"===d&&l||"bottom"===d&&t,n=-1!==["top","bottom"].indexOf(d),o=!!h.flipVariations&&(n&&"start"===p&&s||n&&"end"===p&&a||!n&&"start"===p&&l||!n&&"end"===p&&t),l=!!h.flipVariationsByContent&&(n&&"start"===p&&a||n&&"end"===p&&s||!n&&"start"===p&&t||!n&&"end"===p&&l),l=o||l;(r||i||l)&&(c.flipped=!0,(r||i)&&(d=m[e+1]),l&&(p="end"===p?"start":"start"===p?"end":p),c.placement=d+(p?"-"+p:""),c.offsets.popper=z({},c.offsets.popper,ot(c.instance.popper,c.offsets.reference,c.placement)),c=st(c.instance.modifiers,c,"flip"))}),c},behavior:"flip",padding:5,boundariesElement:"viewport",flipVariations:!1,flipVariationsByContent:!1},inner:{order:700,enabled:!1,fn:function(t){var e=t.placement,n=e.split("-")[0],i=t.offsets,o=i.popper,r=i.reference,s=-1!==["left","right"].indexOf(n),i=-1===["top","left"].indexOf(n);return o[s?"left":"top"]=r[n]-(i?o[s?"width":"height"]:0),t.placement=it(e),t.offsets.popper=K(o),t}},hide:{order:800,enabled:!0,fn:function(t){if(!pt(t.instance.modifiers,"hide","preventOverflow"))return t;var e=t.offsets.reference,n=rt(t.instance.modifiers,function(t){return"preventOverflow"===t.name}).boundaries;if(e.bottom<n.top||e.left>n.right||e.top>n.bottom||e.right<n.left){if(!0===t.hide)return t;t.hide=!0,t.attributes["x-out-of-boundaries"]=""}else{if(!1===t.hide)return t;t.hide=!1,t.attributes["x-out-of-boundaries"]=!1}return t}},computeStyle:{order:850,enabled:!0,fn:function(t,e){var n=e.x,i=e.y,o=t.offsets.popper,r=rt(t.instance.modifiers,function(t){return"applyStyle"===t.name}).gpuAcceleration;void 0!==r&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var s,a,l,c,h,u,d=void 0!==r?r:e.gpuAcceleration,f=R(t.instance.popper),p=G(f),m={position:o.position},a=(s=t,a=window.devicePixelRatio<2||!ft,l=s.offsets,u=l.popper,c=l.reference,h=Math.round,r=Math.floor,e=function(t){return t},o=h(c.width),l=h(u.width),c=-1!==["left","right"].indexOf(s.placement),s=-1!==s.placement.indexOf("-"),r=a?c||s||o%2==l%2?h:r:e,e=a?h:e,{left:r(o%2==1&&l%2==1&&!s&&a?u.left-1:u.left),top:e(u.top),bottom:e(u.bottom),right:r(u.right)}),e="bottom"===n?"top":"bottom",r="right"===i?"left":"right",u=lt("transform"),i="bottom"==e?"HTML"===f.nodeName?-f.clientHeight+a.bottom:-p.height+a.bottom:a.top,n="right"==r?"HTML"===f.nodeName?-f.clientWidth+a.right:-p.width+a.right:a.left;d&&u?(m[u]="translate3d("+n+"px, "+i+"px, 0)",m[e]=0,m[r]=0,m.willChange="transform"):(d="bottom"==e?-1:1,u="right"==r?-1:1,m[e]=i*d,m[r]=n*u,m.willChange=e+", "+r);r={"x-placement":t.placement};return t.attributes=z({},r,t.attributes),t.styles=z({},m,t.styles),t.arrowStyles=z({},t.offsets.arrow,t.arrowStyles),t},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(t){var e,n;return dt(t.instance.popper,t.styles),e=t.instance.popper,n=t.attributes,Object.keys(n).forEach(function(t){!1!==n[t]?e.setAttribute(t,n[t]):e.removeAttribute(t)}),t.arrowElement&&Object.keys(t.arrowStyles).length&&dt(t.arrowElement,t.arrowStyles),t},onLoad:function(t,e,n,i,o){o=et(o,e,t,n.positionFixed),t=tt(n.placement,o,e,t,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return e.setAttribute("x-placement",t),dt(e,{position:n.positionFixed?"fixed":"absolute"}),n},gpuAcceleration:void 0}}},bt=(Y(yt,[{key:"update",value:function(){return function(){var t;this.state.isDestroyed||((t={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}}).offsets.reference=et(this.state,this.popper,this.reference,this.options.positionFixed),t.placement=tt(this.options.placement,t.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),t.originalPlacement=t.placement,t.positionFixed=this.options.positionFixed,t.offsets.popper=ot(this.popper,t.offsets.reference,t.placement),t.offsets.popper.position=this.options.positionFixed?"fixed":"absolute",t=st(this.modifiers,t),this.state.isCreated?this.options.onUpdate(t):(this.state.isCreated=!0,this.options.onCreate(t)))}.call(this)}},{key:"destroy",value:function(){return function(){return this.state.isDestroyed=!0,at(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.position="",this.popper.style.top="",this.popper.style.left="",this.popper.style.right="",this.popper.style.bottom="",this.popper.style.willChange="",this.popper.style[lt("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}.call(this)}},{key:"enableEventListeners",value:function(){return ht.call(this)}},{key:"disableEventListeners",value:function(){return function(){var t,e;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(t=this.reference,e=this.state,ct(t).removeEventListener("resize",e.updateBound),e.scrollParents.forEach(function(t){t.removeEventListener("scroll",e.updateBound)}),e.updateBound=null,e.scrollParents=[],e.scrollElement=null,e.eventsEnabled=!1,e))}.call(this)}}]),yt);function yt(t,e){var n=this,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};V(this,yt),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=k(this.update.bind(this)),this.options=z({},yt.Defaults,i),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=t&&t.jquery?t[0]:t,this.popper=e&&e.jquery?e[0]:e,this.options.modifiers={},Object.keys(z({},yt.Defaults.modifiers,i.modifiers)).forEach(function(t){n.options.modifiers[t]=z({},yt.Defaults.modifiers[t]||{},i.modifiers?i.modifiers[t]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(t){return z({name:t},n.options.modifiers[t])}).sort(function(t,e){return t.order-e.order}),this.modifiers.forEach(function(t){t.enabled&&A(t.onLoad)&&t.onLoad(n.reference,n.popper,n.options,t,n.state)}),this.update();e=this.options.eventsEnabled;e&&this.enableEventListeners(),this.state.eventsEnabled=e}bt.Utils=("undefined"!=typeof window?window:global).PopperUtils,bt.placements=mt,bt.Defaults=vt;var wt="dropdown",Et=h.fn[wt],Tt=new RegExp("38|40|27"),Ct={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},St={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},Dt=((vt=Nt.prototype).toggle=function(){var t;this._element.disabled||h(this._element).hasClass("disabled")||(t=h(this._menu).hasClass("show"),Nt._clearMenus(),t||this.show(!0))},vt.show=function(t){if(void 0===t&&(t=!1),!(this._element.disabled||h(this._element).hasClass("disabled")||h(this._menu).hasClass("show"))){var e={relatedTarget:this._element},n=h.Event("show.bs.dropdown",e),i=Nt._getParentFromElement(this._element);if(h(i).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar&&t){if(void 0===bt)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");t=this._element;"parent"===this._config.reference?t=i:u.isElement(this._config.reference)&&(t=this._config.reference,void 0!==this._config.reference.jquery&&(t=this._config.reference[0])),"scrollParent"!==this._config.boundary&&h(i).addClass("position-static"),this._popper=new bt(t,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===h(i).closest(".navbar-nav").length&&h(document.body).children().on("mouseover",null,h.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),h(this._menu).toggleClass("show"),h(i).toggleClass("show").trigger(h.Event("shown.bs.dropdown",e))}}},vt.hide=function(){var t,e,n;this._element.disabled||h(this._element).hasClass("disabled")||!h(this._menu).hasClass("show")||(t={relatedTarget:this._element},e=h.Event("hide.bs.dropdown",t),n=Nt._getParentFromElement(this._element),h(n).trigger(e),e.isDefaultPrevented()||(this._popper&&this._popper.destroy(),h(this._menu).toggleClass("show"),h(n).toggleClass("show").trigger(h.Event("hidden.bs.dropdown",t))))},vt.dispose=function(){h.removeData(this._element,"bs.dropdown"),h(this._element).off(".bs.dropdown"),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},vt.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},vt._addEventListeners=function(){var e=this;h(this._element).on("click.bs.dropdown",function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},vt._getConfig=function(t){return t=r({},this.constructor.Default,h(this._element).data(),t),u.typeCheckConfig(wt,t,this.constructor.DefaultType),t},vt._getMenuElement=function(){var t;return this._menu||(t=Nt._getParentFromElement(this._element))&&(this._menu=t.querySelector(".dropdown-menu")),this._menu},vt._getPlacement=function(){var t=h(this._element.parentNode),e="bottom-start";return t.hasClass("dropup")?e=h(this._menu).hasClass("dropdown-menu-right")?"top-end":"top-start":t.hasClass("dropright")?e="right-start":t.hasClass("dropleft")?e="left-start":h(this._menu).hasClass("dropdown-menu-right")&&(e="bottom-end"),e},vt._detectNavbar=function(){return 0<h(this._element).closest(".navbar").length},vt._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=r({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},vt._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),r({},t,this._config.popperConfig)},Nt._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.dropdown");if(t||(t=new Nt(this,"object"==typeof e?e:null),h(this).data("bs.dropdown",t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},Nt._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll('[data-toggle="dropdown"]')),n=0,i=e.length;n<i;n++){var o,r,s=Nt._getParentFromElement(e[n]),a=h(e[n]).data("bs.dropdown"),l={relatedTarget:e[n]};t&&"click"===t.type&&(l.clickEvent=t),a&&(o=a._menu,!h(s).hasClass("show")||t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&h.contains(s,t.target)||(r=h.Event("hide.bs.dropdown",l),h(s).trigger(r),r.isDefaultPrevented()||("ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),e[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),h(o).removeClass("show"),h(s).removeClass("show").trigger(h.Event("hidden.bs.dropdown",l)))))}},Nt._getParentFromElement=function(t){var e,n=u.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},Nt._dataApiKeydownHandler=function(t){if(!(/input|textarea/i.test(t.target.tagName)?32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||h(t.target).closest(".dropdown-menu").length):!Tt.test(t.which))&&!this.disabled&&!h(this).hasClass("disabled")){var e=Nt._getParentFromElement(this),n=h(e).hasClass("show");if(n||27!==t.which){if(t.preventDefault(),t.stopPropagation(),!n||n&&(27===t.which||32===t.which))return 27===t.which&&h(e.querySelector('[data-toggle="dropdown"]')).trigger("focus"),void h(this).trigger("click");n=[].slice.call(e.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function(t){return h(t).is(":visible")});0!==n.length&&(e=n.indexOf(t.target),38===t.which&&0<e&&e--,40===t.which&&e<n.length-1&&e++,e<0&&(e=0),n[e].focus())}}},o(Nt,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Ct}},{key:"DefaultType",get:function(){return St}}]),Nt);function Nt(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}h(document).on("keydown.bs.dropdown.data-api",'[data-toggle="dropdown"]',Dt._dataApiKeydownHandler).on("keydown.bs.dropdown.data-api",".dropdown-menu",Dt._dataApiKeydownHandler).on("click.bs.dropdown.data-api keyup.bs.dropdown.data-api",Dt._clearMenus).on("click.bs.dropdown.data-api",'[data-toggle="dropdown"]',function(t){t.preventDefault(),t.stopPropagation(),Dt._jQueryInterface.call(h(this),"toggle")}).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}),h.fn[wt]=Dt._jQueryInterface,h.fn[wt].Constructor=Dt,h.fn[wt].noConflict=function(){return h.fn[wt]=Et,Dt._jQueryInterface};var kt=h.fn.modal,At={backdrop:!0,keyboard:!0,focus:!0,show:!0},It={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},Ot=((vt=xt.prototype).toggle=function(t){return this._isShown?this.hide():this.show(t)},vt.show=function(t){var e,n=this;this._isShown||this._isTransitioning||(h(this._element).hasClass("fade")&&(this._isTransitioning=!0),e=h.Event("show.bs.modal",{relatedTarget:t}),h(this._element).trigger(e),this._isShown||e.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),h(this._element).on("click.dismiss.bs.modal",'[data-dismiss="modal"]',function(t){return n.hide(t)}),h(this._dialog).on("mousedown.dismiss.bs.modal",function(){h(n._element).one("mouseup.dismiss.bs.modal",function(t){h(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(t)})))},vt.hide=function(t){var e=this;t&&t.preventDefault(),this._isShown&&!this._isTransitioning&&(t=h.Event("hide.bs.modal"),h(this._element).trigger(t),this._isShown&&!t.isDefaultPrevented()&&(this._isShown=!1,(t=h(this._element).hasClass("fade"))&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),h(document).off("focusin.bs.modal"),h(this._element).removeClass("show"),h(this._element).off("click.dismiss.bs.modal"),h(this._dialog).off("mousedown.dismiss.bs.modal"),t?(t=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(t)):this._hideModal()))},vt.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return h(t).off(".bs.modal")}),h(document).off("focusin.bs.modal"),h.removeData(this._element,"bs.modal"),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},vt.handleUpdate=function(){this._adjustDialog()},vt._getConfig=function(t){return t=r({},At,t),u.typeCheckConfig("modal",t,It),t},vt._triggerBackdropTransition=function(){var t,e,n,i=this;"static"===this._config.backdrop?(t=h.Event("hidePrevented.bs.modal"),h(this._element).trigger(t),t.defaultPrevented||((e=this._element.scrollHeight>document.documentElement.clientHeight)||(this._element.style.overflowY="hidden"),this._element.classList.add("modal-static"),n=u.getTransitionDurationFromElement(this._dialog),h(this._element).off(u.TRANSITION_END),h(this._element).one(u.TRANSITION_END,function(){i._element.classList.remove("modal-static"),e||h(i._element).one(u.TRANSITION_END,function(){i._element.style.overflowY=""}).emulateTransitionEnd(i._element,n)}).emulateTransitionEnd(n),this._element.focus())):this.hide()},vt._showElement=function(t){var e=this,n=h(this._element).hasClass("fade"),i=this._dialog?this._dialog.querySelector(".modal-body"):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),h(this._dialog).hasClass("modal-dialog-scrollable")&&i?i.scrollTop=0:this._element.scrollTop=0,n&&u.reflow(this._element),h(this._element).addClass("show"),this._config.focus&&this._enforceFocus();var o=h.Event("shown.bs.modal",{relatedTarget:t}),t=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,h(e._element).trigger(o)};n?(n=u.getTransitionDurationFromElement(this._dialog),h(this._dialog).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t()},vt._enforceFocus=function(){var e=this;h(document).off("focusin.bs.modal").on("focusin.bs.modal",function(t){document!==t.target&&e._element!==t.target&&0===h(e._element).has(t.target).length&&e._element.focus()})},vt._setEscapeEvent=function(){var e=this;this._isShown?h(this._element).on("keydown.dismiss.bs.modal",function(t){e._config.keyboard&&27===t.which?(t.preventDefault(),e.hide()):e._config.keyboard||27!==t.which||e._triggerBackdropTransition()}):this._isShown||h(this._element).off("keydown.dismiss.bs.modal")},vt._setResizeEvent=function(){var e=this;this._isShown?h(window).on("resize.bs.modal",function(t){return e.handleUpdate(t)}):h(window).off("resize.bs.modal")},vt._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop(function(){h(document.body).removeClass("modal-open"),t._resetAdjustments(),t._resetScrollbar(),h(t._element).trigger("hidden.bs.modal")})},vt._removeBackdrop=function(){this._backdrop&&(h(this._backdrop).remove(),this._backdrop=null)},vt._showBackdrop=function(t){var e,n=this,i=h(this._element).hasClass("fade")?"fade":"";this._isShown&&this._config.backdrop?(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),h(this._backdrop).appendTo(document.body),h(this._element).on("click.dismiss.bs.modal",function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&n._triggerBackdropTransition()}),i&&u.reflow(this._backdrop),h(this._backdrop).addClass("show"),t&&(i?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t())):!this._isShown&&this._backdrop?(h(this._backdrop).removeClass("show"),i=function(){n._removeBackdrop(),t&&t()},h(this._element).hasClass("fade")?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,i).emulateTransitionEnd(e)):i()):t&&t()},vt._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},vt._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},vt._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(t.left+t.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},vt._setScrollbar=function(){var t,e,o=this;this._isBodyOverflowing&&(t=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")),e=[].slice.call(document.querySelectorAll(".sticky-top")),h(t).each(function(t,e){var n=e.style.paddingRight,i=h(e).css("padding-right");h(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),h(e).each(function(t,e){var n=e.style.marginRight,i=h(e).css("margin-right");h(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")}),t=document.body.style.paddingRight,e=h(document.body).css("padding-right"),h(document.body).data("padding-right",t).css("padding-right",parseFloat(e)+this._scrollbarWidth+"px")),h(document.body).addClass("modal-open")},vt._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"));h(t).each(function(t,e){var n=h(e).data("padding-right");h(e).removeData("padding-right"),e.style.paddingRight=n||""});t=[].slice.call(document.querySelectorAll(".sticky-top"));h(t).each(function(t,e){var n=h(e).data("margin-right");void 0!==n&&h(e).css("margin-right",n).removeData("margin-right")});t=h(document.body).data("padding-right");h(document.body).removeData("padding-right"),document.body.style.paddingRight=t||""},vt._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},xt._jQueryInterface=function(n,i){return this.each(function(){var t=h(this).data("bs.modal"),e=r({},At,h(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new xt(this,e),h(this).data("bs.modal",t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},o(xt,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return At}}]),xt);function xt(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}h(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e,n=this,i=u.getSelectorFromElement(this);i&&(e=document.querySelector(i));i=h(e).data("bs.modal")?"toggle":r({},h(e).data(),h(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var o=h(e).one("show.bs.modal",function(t){t.isDefaultPrevented()||o.one("hidden.bs.modal",function(){h(n).is(":visible")&&n.focus()})});Ot._jQueryInterface.call(h(e),i,this)}),h.fn.modal=Ot._jQueryInterface,h.fn.modal.Constructor=Ot,h.fn.modal.noConflict=function(){return h.fn.modal=kt,Ot._jQueryInterface};var jt=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],Lt=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,Pt=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function Ft(t,o,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var t=(new window.DOMParser).parseFromString(t,"text/html"),r=Object.keys(o),s=[].slice.call(t.body.querySelectorAll("*")),n=0,i=s.length;n<i;n++)!function(t){var e=s[t],n=e.nodeName.toLowerCase();if(-1===r.indexOf(e.nodeName.toLowerCase()))return e.parentNode.removeChild(e);var t=[].slice.call(e.attributes),i=[].concat(o["*"]||[],o[n]||[]);t.forEach(function(t){!function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===jt.indexOf(n)||Boolean(t.nodeValue.match(Lt)||t.nodeValue.match(Pt));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,r=i.length;o<r;o++)if(n.match(i[o]))return 1}(t,i)&&e.removeAttribute(t.nodeName)})}(n);return t.body.innerHTML}var Rt="tooltip",Ht=h.fn[Rt],Mt=new RegExp("(^|\\s)bs-tooltip\\S+","g"),Bt=["sanitize","whiteList","sanitizeFn"],qt={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},Qt={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Wt={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},Ut={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},Vt=((vt=Yt.prototype).enable=function(){this._isEnabled=!0},vt.disable=function(){this._isEnabled=!1},vt.toggleEnabled=function(){this._isEnabled=!this._isEnabled},vt.toggle=function(t){var e,n;this._isEnabled&&(t?(e=this.constructor.DATA_KEY,(n=h(t.currentTarget).data(e))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)):h(this.getTipElement()).hasClass("show")?this._leave(null,this):this._enter(null,this))},vt.dispose=function(){clearTimeout(this._timeout),h.removeData(this.element,this.constructor.DATA_KEY),h(this.element).off(this.constructor.EVENT_KEY),h(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&h(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},vt.show=function(){var e=this;if("none"===h(this.element).css("display"))throw new Error("Please use show on visible elements");var t,n,i=h.Event(this.constructor.Event.SHOW);this.isWithContent()&&this._isEnabled&&(h(this.element).trigger(i),n=u.findShadowRoot(this.element),t=h.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element),!i.isDefaultPrevented()&&t&&(n=this.getTipElement(),i=u.getUID(this.constructor.NAME),n.setAttribute("id",i),this.element.setAttribute("aria-describedby",i),this.setContent(),this.config.animation&&h(n).addClass("fade"),t="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,i=this._getAttachment(t),this.addAttachmentClass(i),t=this._getContainer(),h(n).data(this.constructor.DATA_KEY,this),h.contains(this.element.ownerDocument.documentElement,this.tip)||h(n).appendTo(t),h(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new bt(this.element,n,this._getPopperConfig(i)),h(n).addClass("show"),"ontouchstart"in document.documentElement&&h(document.body).children().on("mouseover",null,h.noop),i=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,h(e.element).trigger(e.constructor.Event.SHOWN),"out"===t&&e._leave(null,e)},h(this.tip).hasClass("fade")?(n=u.getTransitionDurationFromElement(this.tip),h(this.tip).one(u.TRANSITION_END,i).emulateTransitionEnd(n)):i()))},vt.hide=function(t){function e(){"show"!==n._hoverState&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),h(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()}var n=this,i=this.getTipElement(),o=h.Event(this.constructor.Event.HIDE);h(this.element).trigger(o),o.isDefaultPrevented()||(h(i).removeClass("show"),"ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,h(this.tip).hasClass("fade")?(o=u.getTransitionDurationFromElement(i),h(i).one(u.TRANSITION_END,e).emulateTransitionEnd(o)):e(),this._hoverState="")},vt.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},vt.isWithContent=function(){return Boolean(this.getTitle())},vt.addAttachmentClass=function(t){h(this.getTipElement()).addClass("bs-tooltip-"+t)},vt.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},vt.setContent=function(){var t=this.getTipElement();this.setElementContent(h(t.querySelectorAll(".tooltip-inner")),this.getTitle()),h(t).removeClass("fade show")},vt.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=Ft(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?h(e).parent().is(t)||t.empty().append(e):t.text(h(e).text())},vt.getTitle=function(){return this.element.getAttribute("data-original-title")||("function"==typeof this.config.title?this.config.title.call(this.element):this.config.title)},vt._getPopperConfig=function(t){var e=this;return r({},{placement:t,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}},this.config.popperConfig)},vt._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=r({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},vt._getContainer=function(){return!1===this.config.container?document.body:u.isElement(this.config.container)?h(this.config.container):h(document).find(this.config.container)},vt._getAttachment=function(t){return Qt[t.toUpperCase()]},vt._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(t){var e;"click"===t?h(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(t){return n.toggle(t)}):"manual"!==t&&(e="hover"===t?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,t="hover"===t?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT,h(n.element).on(e,n.config.selector,function(t){return n._enter(t)}).on(t,n.config.selector,function(t){return n._leave(t)}))}),this._hideModalHandler=function(){n.element&&n.hide()},h(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=r({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},vt._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");!this.element.getAttribute("title")&&"string"==t||(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},vt._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?"focus":"hover"]=!0),h(e.getTipElement()).hasClass("show")||"show"===e._hoverState?e._hoverState="show":(clearTimeout(e._timeout),e._hoverState="show",e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){"show"===e._hoverState&&e.show()},e.config.delay.show):e.show())},vt._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?"focus":"hover"]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){"out"===e._hoverState&&e.hide()},e.config.delay.hide):e.hide())},vt._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},vt._getConfig=function(t){var e=h(this.element).data();return Object.keys(e).forEach(function(t){-1!==Bt.indexOf(t)&&delete e[t]}),"number"==typeof(t=r({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),u.typeCheckConfig(Rt,t,this.constructor.DefaultType),t.sanitize&&(t.template=Ft(t.template,t.whiteList,t.sanitizeFn)),t},vt._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},vt._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(Mt);null!==e&&e.length&&t.removeClass(e.join(""))},vt._handlePopperPlacementChange=function(t){this.tip=t.instance.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},vt._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(h(t).removeClass("fade"),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},Yt._jQueryInterface=function(n){return this.each(function(){var t=h(this).data("bs.tooltip"),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new Yt(this,e),h(this).data("bs.tooltip",t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},o(Yt,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Wt}},{key:"NAME",get:function(){return Rt}},{key:"DATA_KEY",get:function(){return"bs.tooltip"}},{key:"Event",get:function(){return Ut}},{key:"EVENT_KEY",get:function(){return".bs.tooltip"}},{key:"DefaultType",get:function(){return qt}}]),Yt);function Yt(t,e){if(void 0===bt)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}h.fn[Rt]=Vt._jQueryInterface,h.fn[Rt].Constructor=Vt,h.fn[Rt].noConflict=function(){return h.fn[Rt]=Ht,Vt._jQueryInterface};var zt="popover",Xt=h.fn[zt],Kt=new RegExp("(^|\\s)bs-popover\\S+","g"),Gt=r({},Vt.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),$t=r({},Vt.DefaultType,{content:"(string|element|function)"}),Jt={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"},Zt=function(t){var e;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var n=i.prototype;return n.isWithContent=function(){return this.getTitle()||this._getContent()},n.addAttachmentClass=function(t){h(this.getTipElement()).addClass("bs-popover-"+t)},n.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},n.setContent=function(){var t=h(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(".popover-body"),e),t.removeClass("fade show")},n._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},n._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(Kt);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data("bs.popover"),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data("bs.popover",t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},o(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Gt}},{key:"NAME",get:function(){return zt}},{key:"DATA_KEY",get:function(){return"bs.popover"}},{key:"Event",get:function(){return Jt}},{key:"EVENT_KEY",get:function(){return".bs.popover"}},{key:"DefaultType",get:function(){return $t}}]),i}(Vt);h.fn[zt]=Zt._jQueryInterface,h.fn[zt].Constructor=Zt,h.fn[zt].noConflict=function(){return h.fn[zt]=Xt,Zt._jQueryInterface};var te="scrollspy",ee=h.fn[te],ne={offset:10,method:"auto",target:""},ie={offset:"number",method:"string",target:"(string|element)"},oe=((vt=re.prototype).refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":"position",i="auto"===this._config.method?t:this._config.method,o="position"===i?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=u.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){t=e.getBoundingClientRect();if(t.width||t.height)return[h(e)[i]().top+o,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},vt.dispose=function(){h.removeData(this._element,"bs.scrollspy"),h(this._scrollElement).off(".bs.scrollspy"),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},vt._getConfig=function(t){var e;return"string"!=typeof(t=r({},ne,"object"==typeof t&&t?t:{})).target&&u.isElement(t.target)&&((e=h(t.target).attr("id"))||(e=u.getUID(te),h(t.target).attr("id",e)),t.target="#"+e),u.typeCheckConfig(te,t,ie),t},vt._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},vt._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},vt._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},vt._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;)this._activeTarget!==this._targets[i]&&t>=this._offsets[i]&&(void 0===this._offsets[i+1]||t<this._offsets[i+1])&&this._activate(this._targets[i])}},vt._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),t=h([].slice.call(document.querySelectorAll(t.join(","))));t.hasClass("dropdown-item")?(t.closest(".dropdown").find(".dropdown-toggle").addClass("active"),t.addClass("active")):(t.addClass("active"),t.parents(".nav, .list-group").prev(".nav-link, .list-group-item").addClass("active"),t.parents(".nav, .list-group").prev(".nav-item").children(".nav-link").addClass("active")),h(this._scrollElement).trigger("activate.bs.scrollspy",{relatedTarget:e})},vt._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains("active")}).forEach(function(t){return t.classList.remove("active")})},re._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.scrollspy");if(t||(t=new re(this,"object"==typeof e&&e),h(this).data("bs.scrollspy",t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},o(re,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return ne}}]),re);function re(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" .nav-link,"+this._config.target+" .list-group-item,"+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,h(this._scrollElement).on("scroll.bs.scrollspy",function(t){return n._process(t)}),this.refresh(),this._process()}h(window).on("load.bs.scrollspy.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),e=t.length;e--;){var n=h(t[e]);oe._jQueryInterface.call(n,n.data())}}),h.fn[te]=oe._jQueryInterface,h.fn[te].Constructor=oe,h.fn[te].noConflict=function(){return h.fn[te]=ee,oe._jQueryInterface};var se=h.fn.tab,ae=((vt=le.prototype).show=function(){var t,e,n,i,o,r,s=this;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&h(this._element).hasClass("active")||h(this._element).hasClass("disabled")||(r=h(this._element).closest(".nav, .list-group")[0],e=u.getSelectorFromElement(this._element),r&&(o="UL"===r.nodeName||"OL"===r.nodeName?"> li > .active":".active",n=(n=h.makeArray(h(r).find(o)))[n.length-1]),i=h.Event("hide.bs.tab",{relatedTarget:this._element}),o=h.Event("show.bs.tab",{relatedTarget:n}),n&&h(n).trigger(i),h(this._element).trigger(o),o.isDefaultPrevented()||i.isDefaultPrevented()||(e&&(t=document.querySelector(e)),this._activate(this._element,r),r=function(){var t=h.Event("hidden.bs.tab",{relatedTarget:s._element}),e=h.Event("shown.bs.tab",{relatedTarget:n});h(n).trigger(t),h(s._element).trigger(e)},t?this._activate(t,t.parentNode,r):r()))},vt.dispose=function(){h.removeData(this._element,"bs.tab"),this._element=null},vt._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?h(e).children(".active"):h(e).find("> li > .active"))[0],r=n&&o&&h(o).hasClass("fade"),e=function(){return i._transitionComplete(t,o,n)};o&&r?(r=u.getTransitionDurationFromElement(o),h(o).removeClass("show").one(u.TRANSITION_END,e).emulateTransitionEnd(r)):e()},vt._transitionComplete=function(t,e,n){var i;e&&(h(e).removeClass("active"),(i=h(e.parentNode).find("> .dropdown-menu .active")[0])&&h(i).removeClass("active"),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)),h(t).addClass("active"),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),u.reflow(t),t.classList.contains("fade")&&t.classList.add("show"),t.parentNode&&h(t.parentNode).hasClass("dropdown-menu")&&((e=h(t).closest(".dropdown")[0])&&(e=[].slice.call(e.querySelectorAll(".dropdown-toggle")),h(e).addClass("active")),t.setAttribute("aria-expanded",!0)),n&&n()},le._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.tab");if(e||(e=new le(this),t.data("bs.tab",e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},o(le,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),le);function le(t){this._element=t}h(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',function(t){t.preventDefault(),ae._jQueryInterface.call(h(this),"show")}),h.fn.tab=ae._jQueryInterface,h.fn.tab.Constructor=ae,h.fn.tab.noConflict=function(){return h.fn.tab=se,ae._jQueryInterface};var ce=h.fn.toast,he={animation:"boolean",autohide:"boolean",delay:"number"},ue={animation:!0,autohide:!0,delay:500},de=((vt=fe.prototype).show=function(){var t,e=this,n=h.Event("show.bs.toast");h(this._element).trigger(n),n.isDefaultPrevented()||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),t=function(){e._element.classList.remove("showing"),e._element.classList.add("show"),h(e._element).trigger("shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout(function(){e.hide()},e._config.delay))},this._element.classList.remove("hide"),u.reflow(this._element),this._element.classList.add("showing"),this._config.animation?(n=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t())},vt.hide=function(){var t;this._element.classList.contains("show")&&(t=h.Event("hide.bs.toast"),h(this._element).trigger(t),t.isDefaultPrevented()||this._close())},vt.dispose=function(){this._clearTimeout(),this._element.classList.contains("show")&&this._element.classList.remove("show"),h(this._element).off("click.dismiss.bs.toast"),h.removeData(this._element,"bs.toast"),this._element=null,this._config=null},vt._getConfig=function(t){return t=r({},ue,h(this._element).data(),"object"==typeof t&&t?t:{}),u.typeCheckConfig("toast",t,this.constructor.DefaultType),t},vt._setListeners=function(){var t=this;h(this._element).on("click.dismiss.bs.toast",'[data-dismiss="toast"]',function(){return t.hide()})},vt._close=function(){function t(){n._element.classList.add("hide"),h(n._element).trigger("hidden.bs.toast")}var e,n=this;this._element.classList.remove("show"),this._config.animation?(e=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t()},vt._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},fe._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.toast");if(e||(e=new fe(this,"object"==typeof n&&n),t.data("bs.toast",e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},o(fe,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"DefaultType",get:function(){return he}},{key:"Default",get:function(){return ue}}]),fe);function fe(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}h.fn.toast=de._jQueryInterface,h.fn.toast.Constructor=de,h.fn.toast.noConflict=function(){return h.fn.toast=ce,de._jQueryInterface},t.Alert=s,t.Button=c,t.Carousel=v,t.Collapse=C,t.Dropdown=Dt,t.Modal=Ot,t.Popover=Zt,t.Scrollspy=oe,t.Tab=ae,t.Toast=de,t.Tooltip=Vt,t.Util=u,Object.defineProperty(t,"__esModule",{value:!0})});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap={},t.jQuery,t.Popper)}(this,function(t,h,o){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function r(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function a(){return(a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t}).apply(this,arguments)}h=h&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h,o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o;var e="transitionend";function n(t){var e=this,n=!1;return h(this).one(u.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||u.triggerTransitionEnd(e)},t),this}var u={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");e&&"#"!==e||(e=(t=t.getAttribute("href"))&&"#"!==t?t.trim():"");try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=h(t).css("transition-duration"),n=h(t).css("transition-delay"),i=parseFloat(e),t=parseFloat(n);return i||t?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){h(t).trigger(e)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],s=e[i],r=s&&u.isElement(s)?"element":null==(r=s)?""+r:{}.toString.call(r).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(r))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+r+'" but expected type "'+o+'".')}var r},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?u.findShadowRoot(t.parentNode):null;t=t.getRootNode();return t instanceof ShadowRoot?t:null},jQueryDetection:function(){if(void 0===h)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=h.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};u.jQueryDetection(),h.fn.emulateTransitionEnd=n,h.event.special[u.TRANSITION_END]={bindType:e,delegateType:e,handle:function(t){if(h(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var s="alert",l="bs.alert",c=h.fn[s],d=function(){function i(t){this._element=t}var t=i.prototype;return t.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},t.dispose=function(){h.removeData(this._element,l),this._element=null},t._getRootElement=function(t){var e=u.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n=n||h(t).closest(".alert")[0]},t._triggerCloseEvent=function(t){var e=h.Event("close.bs.alert");return h(t).trigger(e),e},t._removeElement=function(e){var t,n=this;h(e).removeClass("show"),h(e).hasClass("fade")?(t=u.getTransitionDurationFromElement(e),h(e).one(u.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)):this._destroyElement(e)},t._destroyElement=function(t){h(t).detach().trigger("closed.bs.alert").remove()},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(l);e||(e=new i(this),t.data(l,e)),"close"===n&&e[n](this)})},i._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},r(i,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),i}();h(document).on("click.bs.alert.data-api",'[data-dismiss="alert"]',d._handleDismiss(new d)),h.fn[s]=d._jQueryInterface,h.fn[s].Constructor=d,h.fn[s].noConflict=function(){return h.fn[s]=c,d._jQueryInterface};var f="button",g="bs.button",m=h.fn[f],_="active",p='[data-toggle^="button"]',v='input:not([type="hidden"])',y=".btn",b=function(){function n(t){this._element=t}var t=n.prototype;return t.toggle=function(){var t,e=!0,n=!0,i=h(this._element).closest('[data-toggle="buttons"]')[0];!i||(t=this._element.querySelector(v))&&("radio"===t.type&&(t.checked&&this._element.classList.contains(_)?e=!1:(i=i.querySelector(".active"))&&h(i).removeClass(_)),e&&("checkbox"!==t.type&&"radio"!==t.type||(t.checked=!this._element.classList.contains(_)),h(t).trigger("change")),t.focus(),n=!1),this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(_)),e&&h(this._element).toggleClass(_))},t.dispose=function(){h.removeData(this._element,g),this._element=null},n._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(g);t||(t=new n(this),h(this).data(g,t)),"toggle"===e&&t[e]()})},r(n,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),n}();h(document).on("click.bs.button.data-api",p,function(t){var e,n=t.target,i=n;h(n).hasClass("btn")||(n=h(n).closest(y)[0]),!n||n.hasAttribute("disabled")||n.classList.contains("disabled")||(e=n.querySelector(v))&&(e.hasAttribute("disabled")||e.classList.contains("disabled"))?t.preventDefault():("LABEL"!==i.tagName||e&&"checkbox"!==e.type)&&b._jQueryInterface.call(h(n),"toggle")}).on("focus.bs.button.data-api blur.bs.button.data-api",p,function(t){var e=h(t.target).closest(y)[0];h(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),h(window).on("load.bs.button.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')),e=0,n=t.length;e<n;e++){var i=t[e],o=i.querySelector(v);o.checked||o.hasAttribute("checked")?i.classList.add(_):i.classList.remove(_)}for(var s=0,r=(t=[].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length;s<r;s++){var a=t[s];"true"===a.getAttribute("aria-pressed")?a.classList.add(_):a.classList.remove(_)}}),h.fn[f]=b._jQueryInterface,h.fn[f].Constructor=b,h.fn[f].noConflict=function(){return h.fn[f]=m,b._jQueryInterface};var E="carousel",T="bs.carousel",w="."+T,C=h.fn[E],S={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},D={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},N="next",A="prev",k="slid"+w,I="active",O=".active.carousel-item",j={TOUCH:"touch",PEN:"pen"},P=function(){function o(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var t=o.prototype;return t.next=function(){this._isSliding||this._slide(N)},t.nextWhenVisible=function(){!document.hidden&&h(this._element).is(":visible")&&"hidden"!==h(this._element).css("visibility")&&this.next()},t.prev=function(){this._isSliding||this._slide(A)},t.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&(u.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},t.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},t.to=function(t){var e=this;this._activeElement=this._element.querySelector(O);var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)h(this._element).one(k,function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();n=n<t?N:A;this._slide(n,this._items[t])}},t.dispose=function(){h(this._element).off(w),h.removeData(this._element,T),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},t._getConfig=function(t){return t=a({},S,t),u.typeCheckConfig(E,t,D),t},t._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);t<=40||(t=t/this.touchDeltaX,(this.touchDeltaX=0)<t&&this.prev(),t<0&&this.next())},t._addEventListeners=function(){var e=this;this._config.keyboard&&h(this._element).on("keydown.bs.carousel",function(t){return e._keydown(t)}),"hover"===this._config.pause&&h(this._element).on("mouseenter.bs.carousel",function(t){return e.pause(t)}).on("mouseleave.bs.carousel",function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},t._addTouchEventListeners=function(){var t,e,n=this;this._touchSupported&&(t=function(t){n._pointerEvent&&j[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},e=function(t){n._pointerEvent&&j[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))},h(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel",function(t){return t.preventDefault()}),this._pointerEvent?(h(this._element).on("pointerdown.bs.carousel",t),h(this._element).on("pointerup.bs.carousel",e),this._element.classList.add("pointer-event")):(h(this._element).on("touchstart.bs.carousel",t),h(this._element).on("touchmove.bs.carousel",function(t){(t=t).originalEvent.touches&&1<t.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=t.originalEvent.touches[0].clientX-n.touchStartX}),h(this._element).on("touchend.bs.carousel",e)))},t._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},t._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},t._getItemByDirection=function(t,e){var n=t===N,i=t===A,o=this._getItemIndex(e),s=this._items.length-1;if((i&&0===o||n&&o===s)&&!this._config.wrap)return e;t=(o+(t===A?-1:1))%this._items.length;return-1==t?this._items[this._items.length-1]:this._items[t]},t._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(O)),n=h.Event("slide.bs.carousel",{relatedTarget:t,direction:e,from:i,to:n});return h(this._element).trigger(n),n},t._setActiveIndicatorElement=function(t){var e;this._indicatorsElement&&(e=[].slice.call(this._indicatorsElement.querySelectorAll(".active")),h(e).removeClass(I),(t=this._indicatorsElement.children[this._getItemIndex(t)])&&h(t).addClass(I))},t._slide=function(t,e){var n,i,o,s=this,r=this._element.querySelector(O),a=this._getItemIndex(r),l=e||r&&this._getItemByDirection(t,r),c=this._getItemIndex(l),e=Boolean(this._interval),t=t===N?(n="carousel-item-left",i="carousel-item-next","left"):(n="carousel-item-right",i="carousel-item-prev","right");l&&h(l).hasClass(I)?this._isSliding=!1:this._triggerSlideEvent(l,t).isDefaultPrevented()||r&&l&&(this._isSliding=!0,e&&this.pause(),this._setActiveIndicatorElement(l),o=h.Event(k,{relatedTarget:l,direction:t,from:a,to:c}),h(this._element).hasClass("slide")?(h(l).addClass(i),u.reflow(l),h(r).addClass(n),h(l).addClass(n),(c=parseInt(l.getAttribute("data-interval"),10))?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=c):this._config.interval=this._config.defaultInterval||this._config.interval,c=u.getTransitionDurationFromElement(r),h(r).one(u.TRANSITION_END,function(){h(l).removeClass(n+" "+i).addClass(I),h(r).removeClass(I+" "+i+" "+n),s._isSliding=!1,setTimeout(function(){return h(s._element).trigger(o)},0)}).emulateTransitionEnd(c)):(h(r).removeClass(I),h(l).addClass(I),this._isSliding=!1,h(this._element).trigger(o)),e&&this.cycle())},o._jQueryInterface=function(i){return this.each(function(){var t=h(this).data(T),e=a({},S,h(this).data());"object"==typeof i&&(e=a({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new o(this,e),h(this).data(T,t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},o._dataApiClickHandler=function(t){var e,n,i=u.getSelectorFromElement(this);!i||(e=h(i)[0])&&h(e).hasClass("carousel")&&(n=a({},h(e).data(),h(this).data()),(i=this.getAttribute("data-slide-to"))&&(n.interval=!1),o._jQueryInterface.call(h(e),n),i&&h(e).data(T).to(i),t.preventDefault())},r(o,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return S}}]),o}();h(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",P._dataApiClickHandler),h(window).on("load.bs.carousel.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),e=0,n=t.length;e<n;e++){var i=h(t[e]);P._jQueryInterface.call(i,i.data())}}),h.fn[E]=P._jQueryInterface,h.fn[E].Constructor=P,h.fn[E].noConflict=function(){return h.fn[E]=C,P._jQueryInterface};var R="collapse",x="bs.collapse",L=h.fn[R],q={toggle:!0,parent:""},F={toggle:"boolean",parent:"(string|element)"},Q="show",B="collapse",H="collapsing",U="collapsed",M='[data-toggle="collapse"]',W=function(){function s(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll(M)),i=0,o=n.length;i<o;i++){var s=n[i],r=u.getSelectorFromElement(s),a=[].slice.call(document.querySelectorAll(r)).filter(function(t){return t===e});null!==r&&0<a.length&&(this._selector=r,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var t=s.prototype;return t.toggle=function(){h(this._element).hasClass(Q)?this.hide():this.show()},t.show=function(){var t,e,n,i,o=this;this._isTransitioning||h(this._element).hasClass(Q)||(this._parent&&0===(i=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t){return"string"==typeof o._config.parent?t.getAttribute("data-parent")===o._config.parent:t.classList.contains(B)})).length&&(i=null),i&&(n=h(i).not(this._selector).data(x))&&n._isTransitioning||(t=h.Event("show.bs.collapse"),h(this._element).trigger(t),t.isDefaultPrevented()||(i&&(s._jQueryInterface.call(h(i).not(this._selector),"hide"),n||h(i).data(x,null)),e=this._getDimension(),h(this._element).removeClass(B).addClass(H),this._element.style[e]=0,this._triggerArray.length&&h(this._triggerArray).removeClass(U).attr("aria-expanded",!0),this.setTransitioning(!0),n="scroll"+(e[0].toUpperCase()+e.slice(1)),i=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(){h(o._element).removeClass(H).addClass(B+" "+Q),o._element.style[e]="",o.setTransitioning(!1),h(o._element).trigger("shown.bs.collapse")}).emulateTransitionEnd(i),this._element.style[e]=this._element[n]+"px")))},t.hide=function(){var t=this;if(!this._isTransitioning&&h(this._element).hasClass(Q)){var e=h.Event("hide.bs.collapse");if(h(this._element).trigger(e),!e.isDefaultPrevented()){e=this._getDimension();this._element.style[e]=this._element.getBoundingClientRect()[e]+"px",u.reflow(this._element),h(this._element).addClass(H).removeClass(B+" "+Q);var n=this._triggerArray.length;if(0<n)for(var i=0;i<n;i++){var o=this._triggerArray[i],s=u.getSelectorFromElement(o);null!==s&&(h([].slice.call(document.querySelectorAll(s))).hasClass(Q)||h(o).addClass(U).attr("aria-expanded",!1))}this.setTransitioning(!0);this._element.style[e]="";e=u.getTransitionDurationFromElement(this._element);h(this._element).one(u.TRANSITION_END,function(){t.setTransitioning(!1),h(t._element).removeClass(H).addClass(B).trigger("hidden.bs.collapse")}).emulateTransitionEnd(e)}}},t.setTransitioning=function(t){this._isTransitioning=t},t.dispose=function(){h.removeData(this._element,x),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},t._getConfig=function(t){return(t=a({},q,t)).toggle=Boolean(t.toggle),u.typeCheckConfig(R,t,F),t},t._getDimension=function(){return h(this._element).hasClass("width")?"width":"height"},t._getParent=function(){var t,n=this;u.isElement(this._config.parent)?(t=this._config.parent,void 0!==this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',e=[].slice.call(t.querySelectorAll(e));return h(e).each(function(t,e){n._addAriaAndCollapsedClass(s._getTargetFromElement(e),[e])}),t},t._addAriaAndCollapsedClass=function(t,e){t=h(t).hasClass(Q);e.length&&h(e).toggleClass(U,!t).attr("aria-expanded",t)},s._getTargetFromElement=function(t){t=u.getSelectorFromElement(t);return t?document.querySelector(t):null},s._jQueryInterface=function(i){return this.each(function(){var t=h(this),e=t.data(x),n=a({},q,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&"string"==typeof i&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new s(this,n),t.data(x,e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},r(s,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return q}}]),s}();h(document).on("click.bs.collapse.data-api",M,function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=h(this),t=u.getSelectorFromElement(this),t=[].slice.call(document.querySelectorAll(t));h(t).each(function(){var t=h(this),e=t.data(x)?"toggle":n.data();W._jQueryInterface.call(t,e)})}),h.fn[R]=W._jQueryInterface,h.fn[R].Constructor=W,h.fn[R].noConflict=function(){return h.fn[R]=L,W._jQueryInterface};var V="dropdown",z="bs.dropdown",K="."+z,p=".data-api",X=h.fn[V],Y=new RegExp("38|40|27"),$="hide"+K,J="hidden"+K,G="click"+K+p,Z="keydown"+K+p,tt="disabled",et="show",nt="dropdown-menu-right",it='[data-toggle="dropdown"]',ot=".dropdown-menu",st={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},rt={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},at=function(){function c(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var t=c.prototype;return t.toggle=function(){var t;this._element.disabled||h(this._element).hasClass(tt)||(t=h(this._menu).hasClass(et),c._clearMenus(),t||this.show(!0))},t.show=function(t){if(void 0===t&&(t=!1),!(this._element.disabled||h(this._element).hasClass(tt)||h(this._menu).hasClass(et))){var e={relatedTarget:this._element},n=h.Event("show.bs.dropdown",e),i=c._getParentFromElement(this._element);if(h(i).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar&&t){if(void 0===o)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");t=this._element;"parent"===this._config.reference?t=i:u.isElement(this._config.reference)&&(t=this._config.reference,void 0!==this._config.reference.jquery&&(t=this._config.reference[0])),"scrollParent"!==this._config.boundary&&h(i).addClass("position-static"),this._popper=new o(t,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===h(i).closest(".navbar-nav").length&&h(document.body).children().on("mouseover",null,h.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),h(this._menu).toggleClass(et),h(i).toggleClass(et).trigger(h.Event("shown.bs.dropdown",e))}}},t.hide=function(){var t,e,n;this._element.disabled||h(this._element).hasClass(tt)||!h(this._menu).hasClass(et)||(t={relatedTarget:this._element},e=h.Event($,t),n=c._getParentFromElement(this._element),h(n).trigger(e),e.isDefaultPrevented()||(this._popper&&this._popper.destroy(),h(this._menu).toggleClass(et),h(n).toggleClass(et).trigger(h.Event(J,t))))},t.dispose=function(){h.removeData(this._element,z),h(this._element).off(K),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},t.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},t._addEventListeners=function(){var e=this;h(this._element).on("click.bs.dropdown",function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},t._getConfig=function(t){return t=a({},this.constructor.Default,h(this._element).data(),t),u.typeCheckConfig(V,t,this.constructor.DefaultType),t},t._getMenuElement=function(){var t;return this._menu||(t=c._getParentFromElement(this._element))&&(this._menu=t.querySelector(ot)),this._menu},t._getPlacement=function(){var t=h(this._element.parentNode),e="bottom-start";return t.hasClass("dropup")?e=h(this._menu).hasClass(nt)?"top-end":"top-start":t.hasClass("dropright")?e="right-start":t.hasClass("dropleft")?e="left-start":h(this._menu).hasClass(nt)&&(e="bottom-end"),e},t._detectNavbar=function(){return 0<h(this._element).closest(".navbar").length},t._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=a({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},t._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),a({},t,this._config.popperConfig)},c._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(z);if(t||(t=new c(this,"object"==typeof e?e:null),h(this).data(z,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},c._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll(it)),n=0,i=e.length;n<i;n++){var o,s,r=c._getParentFromElement(e[n]),a=h(e[n]).data(z),l={relatedTarget:e[n]};t&&"click"===t.type&&(l.clickEvent=t),a&&(o=a._menu,h(r).hasClass(et)&&(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&h.contains(r,t.target)||(s=h.Event($,l),h(r).trigger(s),s.isDefaultPrevented()||("ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),e[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),h(o).removeClass(et),h(r).removeClass(et).trigger(h.Event(J,l))))))}},c._getParentFromElement=function(t){var e,n=u.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},c._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||h(t.target).closest(ot).length)):Y.test(t.which))&&!this.disabled&&!h(this).hasClass(tt)){var e=c._getParentFromElement(this),n=h(e).hasClass(et);if(n||27!==t.which){if(t.preventDefault(),t.stopPropagation(),!n||n&&(27===t.which||32===t.which))return 27===t.which&&h(e.querySelector(it)).trigger("focus"),void h(this).trigger("click");n=[].slice.call(e.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function(t){return h(t).is(":visible")});0!==n.length&&(e=n.indexOf(t.target),38===t.which&&0<e&&e--,40===t.which&&e<n.length-1&&e++,e<0&&(e=0),n[e].focus())}}},r(c,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return st}},{key:"DefaultType",get:function(){return rt}}]),c}();h(document).on(Z,it,at._dataApiKeydownHandler).on(Z,ot,at._dataApiKeydownHandler).on(G+" keyup.bs.dropdown.data-api",at._clearMenus).on(G,it,function(t){t.preventDefault(),t.stopPropagation(),at._jQueryInterface.call(h(this),"toggle")}).on(G,".dropdown form",function(t){t.stopPropagation()}),h.fn[V]=at._jQueryInterface,h.fn[V].Constructor=at,h.fn[V].noConflict=function(){return h.fn[V]=X,at._jQueryInterface};var lt="modal",ct="bs.modal",ht="."+ct,ut=h.fn[lt],dt={backdrop:!0,keyboard:!0,focus:!0,show:!0},ft={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},gt="hidden"+ht,mt="show"+ht,_t="focusin"+ht,pt="resize"+ht,vt="click.dismiss"+ht,yt="keydown.dismiss"+ht,bt="mousedown.dismiss"+ht,Et="modal-open",Tt="fade",wt="show",Ct="modal-static",St=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Dt=".sticky-top",Nt=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var t=o.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e,n=this;this._isShown||this._isTransitioning||(h(this._element).hasClass(Tt)&&(this._isTransitioning=!0),e=h.Event(mt,{relatedTarget:t}),h(this._element).trigger(e),this._isShown||e.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),h(this._element).on(vt,'[data-dismiss="modal"]',function(t){return n.hide(t)}),h(this._dialog).on(bt,function(){h(n._element).one("mouseup.dismiss.bs.modal",function(t){h(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(t)})))},t.hide=function(t){var e=this;t&&t.preventDefault(),this._isShown&&!this._isTransitioning&&(t=h.Event("hide.bs.modal"),h(this._element).trigger(t),this._isShown&&!t.isDefaultPrevented()&&(this._isShown=!1,(t=h(this._element).hasClass(Tt))&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),h(document).off(_t),h(this._element).removeClass(wt),h(this._element).off(vt),h(this._dialog).off(bt),t?(t=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(t)):this._hideModal()))},t.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return h(t).off(ht)}),h(document).off(_t),h.removeData(this._element,ct),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=a({},dt,t),u.typeCheckConfig(lt,t,ft),t},t._triggerBackdropTransition=function(){var t,e,n,i=this;"static"===this._config.backdrop?(t=h.Event("hidePrevented.bs.modal"),h(this._element).trigger(t),t.defaultPrevented||((e=this._element.scrollHeight>document.documentElement.clientHeight)||(this._element.style.overflowY="hidden"),this._element.classList.add(Ct),n=u.getTransitionDurationFromElement(this._dialog),h(this._element).off(u.TRANSITION_END),h(this._element).one(u.TRANSITION_END,function(){i._element.classList.remove(Ct),e||h(i._element).one(u.TRANSITION_END,function(){i._element.style.overflowY=""}).emulateTransitionEnd(i._element,n)}).emulateTransitionEnd(n),this._element.focus())):this.hide()},t._showElement=function(t){var e=this,n=h(this._element).hasClass(Tt),i=this._dialog?this._dialog.querySelector(".modal-body"):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),h(this._dialog).hasClass("modal-dialog-scrollable")&&i?i.scrollTop=0:this._element.scrollTop=0,n&&u.reflow(this._element),h(this._element).addClass(wt),this._config.focus&&this._enforceFocus();var o=h.Event("shown.bs.modal",{relatedTarget:t}),t=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,h(e._element).trigger(o)};n?(n=u.getTransitionDurationFromElement(this._dialog),h(this._dialog).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t()},t._enforceFocus=function(){var e=this;h(document).off(_t).on(_t,function(t){document!==t.target&&e._element!==t.target&&0===h(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown?h(this._element).on(yt,function(t){e._config.keyboard&&27===t.which?(t.preventDefault(),e.hide()):e._config.keyboard||27!==t.which||e._triggerBackdropTransition()}):this._isShown||h(this._element).off(yt)},t._setResizeEvent=function(){var e=this;this._isShown?h(window).on(pt,function(t){return e.handleUpdate(t)}):h(window).off(pt)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop(function(){h(document.body).removeClass(Et),t._resetAdjustments(),t._resetScrollbar(),h(t._element).trigger(gt)})},t._removeBackdrop=function(){this._backdrop&&(h(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e,n=this,i=h(this._element).hasClass(Tt)?Tt:"";this._isShown&&this._config.backdrop?(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),h(this._backdrop).appendTo(document.body),h(this._element).on(vt,function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&n._triggerBackdropTransition()}),i&&u.reflow(this._backdrop),h(this._backdrop).addClass(wt),t&&(i?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t())):!this._isShown&&this._backdrop?(h(this._backdrop).removeClass(wt),i=function(){n._removeBackdrop(),t&&t()},h(this._element).hasClass(Tt)?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,i).emulateTransitionEnd(e)):i()):t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(t.left+t.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var t,e,o=this;this._isBodyOverflowing&&(t=[].slice.call(document.querySelectorAll(St)),e=[].slice.call(document.querySelectorAll(Dt)),h(t).each(function(t,e){var n=e.style.paddingRight,i=h(e).css("padding-right");h(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),h(e).each(function(t,e){var n=e.style.marginRight,i=h(e).css("margin-right");h(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")}),t=document.body.style.paddingRight,e=h(document.body).css("padding-right"),h(document.body).data("padding-right",t).css("padding-right",parseFloat(e)+this._scrollbarWidth+"px")),h(document.body).addClass(Et)},t._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(St));h(t).each(function(t,e){var n=h(e).data("padding-right");h(e).removeData("padding-right"),e.style.paddingRight=n||""});t=[].slice.call(document.querySelectorAll(Dt));h(t).each(function(t,e){var n=h(e).data("margin-right");void 0!==n&&h(e).css("margin-right",n).removeData("margin-right")});t=h(document.body).data("padding-right");h(document.body).removeData("padding-right"),document.body.style.paddingRight=t||""},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(n,i){return this.each(function(){var t=h(this).data(ct),e=a({},dt,h(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new o(this,e),h(this).data(ct,t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},r(o,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return dt}}]),o}();h(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e,n=this,i=u.getSelectorFromElement(this);i&&(e=document.querySelector(i));i=h(e).data(ct)?"toggle":a({},h(e).data(),h(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var o=h(e).one(mt,function(t){t.isDefaultPrevented()||o.one(gt,function(){h(n).is(":visible")&&n.focus()})});Nt._jQueryInterface.call(h(e),i,this)}),h.fn[lt]=Nt._jQueryInterface,h.fn[lt].Constructor=Nt,h.fn[lt].noConflict=function(){return h.fn[lt]=ut,Nt._jQueryInterface};var At=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],G={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},kt=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,It=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function Ot(t,o,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var t=(new window.DOMParser).parseFromString(t,"text/html"),s=Object.keys(o),r=[].slice.call(t.body.querySelectorAll("*")),n=function(t){var e=r[t],n=e.nodeName.toLowerCase();if(-1===s.indexOf(e.nodeName.toLowerCase()))return e.parentNode.removeChild(e),"continue";var t=[].slice.call(e.attributes),i=[].concat(o["*"]||[],o[n]||[]);t.forEach(function(t){!function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===At.indexOf(n)||Boolean(t.nodeValue.match(kt)||t.nodeValue.match(It));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,s=i.length;o<s;o++)if(n.match(i[o]))return 1}(t,i)&&e.removeAttribute(t.nodeName)})},i=0,a=r.length;i<a;i++)n(i);return t.body.innerHTML}var jt="tooltip",Pt="bs.tooltip",Rt="."+Pt,xt=h.fn[jt],Lt="bs-tooltip",qt=new RegExp("(^|\\s)"+Lt+"\\S+","g"),Ft=["sanitize","whiteList","sanitizeFn"],Qt={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},Bt={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Ht={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:G,popperConfig:null},Ut="show",Mt={HIDE:"hide"+Rt,HIDDEN:"hidden"+Rt,SHOW:"show"+Rt,SHOWN:"shown"+Rt,INSERTED:"inserted"+Rt,CLICK:"click"+Rt,FOCUSIN:"focusin"+Rt,FOCUSOUT:"focusout"+Rt,MOUSEENTER:"mouseenter"+Rt,MOUSELEAVE:"mouseleave"+Rt},Wt="fade",Vt="show",zt="hover",Kt="focus",Xt=function(){function i(t,e){if(void 0===o)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var t=i.prototype;return t.enable=function(){this._isEnabled=!0},t.disable=function(){this._isEnabled=!1},t.toggleEnabled=function(){this._isEnabled=!this._isEnabled},t.toggle=function(t){var e,n;this._isEnabled&&(t?(e=this.constructor.DATA_KEY,(n=h(t.currentTarget).data(e))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)):h(this.getTipElement()).hasClass(Vt)?this._leave(null,this):this._enter(null,this))},t.dispose=function(){clearTimeout(this._timeout),h.removeData(this.element,this.constructor.DATA_KEY),h(this.element).off(this.constructor.EVENT_KEY),h(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&h(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},t.show=function(){var e=this;if("none"===h(this.element).css("display"))throw new Error("Please use show on visible elements");var t,n,i=h.Event(this.constructor.Event.SHOW);this.isWithContent()&&this._isEnabled&&(h(this.element).trigger(i),n=u.findShadowRoot(this.element),t=h.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element),!i.isDefaultPrevented()&&t&&(n=this.getTipElement(),i=u.getUID(this.constructor.NAME),n.setAttribute("id",i),this.element.setAttribute("aria-describedby",i),this.setContent(),this.config.animation&&h(n).addClass(Wt),t="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,i=this._getAttachment(t),this.addAttachmentClass(i),t=this._getContainer(),h(n).data(this.constructor.DATA_KEY,this),h.contains(this.element.ownerDocument.documentElement,this.tip)||h(n).appendTo(t),h(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new o(this.element,n,this._getPopperConfig(i)),h(n).addClass(Vt),"ontouchstart"in document.documentElement&&h(document.body).children().on("mouseover",null,h.noop),i=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,h(e.element).trigger(e.constructor.Event.SHOWN),"out"===t&&e._leave(null,e)},h(this.tip).hasClass(Wt)?(n=u.getTransitionDurationFromElement(this.tip),h(this.tip).one(u.TRANSITION_END,i).emulateTransitionEnd(n)):i()))},t.hide=function(t){function e(){n._hoverState!==Ut&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),h(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()}var n=this,i=this.getTipElement(),o=h.Event(this.constructor.Event.HIDE);h(this.element).trigger(o),o.isDefaultPrevented()||(h(i).removeClass(Vt),"ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),this._activeTrigger.click=!1,this._activeTrigger[Kt]=!1,this._activeTrigger[zt]=!1,h(this.tip).hasClass(Wt)?(o=u.getTransitionDurationFromElement(i),h(i).one(u.TRANSITION_END,e).emulateTransitionEnd(o)):e(),this._hoverState="")},t.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},t.isWithContent=function(){return Boolean(this.getTitle())},t.addAttachmentClass=function(t){h(this.getTipElement()).addClass(Lt+"-"+t)},t.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},t.setContent=function(){var t=this.getTipElement();this.setElementContent(h(t.querySelectorAll(".tooltip-inner")),this.getTitle()),h(t).removeClass(Wt+" "+Vt)},t.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=Ot(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?h(e).parent().is(t)||t.empty().append(e):t.text(h(e).text())},t.getTitle=function(){return this.element.getAttribute("data-original-title")||("function"==typeof this.config.title?this.config.title.call(this.element):this.config.title)},t._getPopperConfig=function(t){var e=this;return a({},{placement:t,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}},this.config.popperConfig)},t._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=a({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},t._getContainer=function(){return!1===this.config.container?document.body:u.isElement(this.config.container)?h(this.config.container):h(document).find(this.config.container)},t._getAttachment=function(t){return Bt[t.toUpperCase()]},t._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(t){var e;"click"===t?h(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(t){return n.toggle(t)}):"manual"!==t&&(e=t===zt?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,t=t===zt?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT,h(n.element).on(e,n.config.selector,function(t){return n._enter(t)}).on(t,n.config.selector,function(t){return n._leave(t)}))}),this._hideModalHandler=function(){n.element&&n.hide()},h(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=a({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},t._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");!this.element.getAttribute("title")&&"string"==t||(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},t._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?Kt:zt]=!0),h(e.getTipElement()).hasClass(Vt)||e._hoverState===Ut?e._hoverState=Ut:(clearTimeout(e._timeout),e._hoverState=Ut,e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){e._hoverState===Ut&&e.show()},e.config.delay.show):e.show())},t._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?Kt:zt]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){"out"===e._hoverState&&e.hide()},e.config.delay.hide):e.hide())},t._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},t._getConfig=function(t){var e=h(this.element).data();return Object.keys(e).forEach(function(t){-1!==Ft.indexOf(t)&&delete e[t]}),"number"==typeof(t=a({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),u.typeCheckConfig(jt,t,this.constructor.DefaultType),t.sanitize&&(t.template=Ot(t.template,t.whiteList,t.sanitizeFn)),t},t._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},t._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(qt);null!==e&&e.length&&t.removeClass(e.join(""))},t._handlePopperPlacementChange=function(t){this.tip=t.instance.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},t._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(h(t).removeClass(Wt),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data(Pt),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data(Pt,t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Ht}},{key:"NAME",get:function(){return jt}},{key:"DATA_KEY",get:function(){return Pt}},{key:"Event",get:function(){return Mt}},{key:"EVENT_KEY",get:function(){return Rt}},{key:"DefaultType",get:function(){return Qt}}]),i}();h.fn[jt]=Xt._jQueryInterface,h.fn[jt].Constructor=Xt,h.fn[jt].noConflict=function(){return h.fn[jt]=xt,Xt._jQueryInterface};var Yt="popover",$t="bs.popover",Jt="."+$t,Gt=h.fn[Yt],Zt="bs-popover",te=new RegExp("(^|\\s)"+Zt+"\\S+","g"),ee=a({},Xt.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),ne=a({},Xt.DefaultType,{content:"(string|element|function)"}),ie={HIDE:"hide"+Jt,HIDDEN:"hidden"+Jt,SHOW:"show"+Jt,SHOWN:"shown"+Jt,INSERTED:"inserted"+Jt,CLICK:"click"+Jt,FOCUSIN:"focusin"+Jt,FOCUSOUT:"focusout"+Jt,MOUSEENTER:"mouseenter"+Jt,MOUSELEAVE:"mouseleave"+Jt},oe=function(t){var e;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var n=i.prototype;return n.isWithContent=function(){return this.getTitle()||this._getContent()},n.addAttachmentClass=function(t){h(this.getTipElement()).addClass(Zt+"-"+t)},n.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},n.setContent=function(){var t=h(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(".popover-body"),e),t.removeClass("fade show")},n._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},n._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(te);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data($t),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data($t,t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return ee}},{key:"NAME",get:function(){return Yt}},{key:"DATA_KEY",get:function(){return $t}},{key:"Event",get:function(){return ie}},{key:"EVENT_KEY",get:function(){return Jt}},{key:"DefaultType",get:function(){return ne}}]),i}(Xt);h.fn[Yt]=oe._jQueryInterface,h.fn[Yt].Constructor=oe,h.fn[Yt].noConflict=function(){return h.fn[Yt]=Gt,oe._jQueryInterface};var se="scrollspy",re="bs.scrollspy",ae="."+re,le=h.fn[se],ce={offset:10,method:"auto",target:""},he={offset:"number",method:"string",target:"(string|element)"},ue="active",de=".nav, .list-group",fe=".nav-link",ge=".list-group-item",me="position",_e=function(){function n(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" "+fe+","+this._config.target+" "+ge+","+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,h(this._scrollElement).on("scroll.bs.scrollspy",function(t){return n._process(t)}),this.refresh(),this._process()}var t=n.prototype;return t.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":me,i="auto"===this._config.method?t:this._config.method,o=i===me?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=u.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){t=e.getBoundingClientRect();if(t.width||t.height)return[h(e)[i]().top+o,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},t.dispose=function(){h.removeData(this._element,re),h(this._scrollElement).off(ae),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},t._getConfig=function(t){var e;return"string"!=typeof(t=a({},ce,"object"==typeof t&&t?t:{})).target&&u.isElement(t.target)&&((e=h(t.target).attr("id"))||(e=u.getUID(se),h(t.target).attr("id",e)),t.target="#"+e),u.typeCheckConfig(se,t,he),t},t._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},t._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},t._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},t._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;)this._activeTarget!==this._targets[i]&&t>=this._offsets[i]&&(void 0===this._offsets[i+1]||t<this._offsets[i+1])&&this._activate(this._targets[i])}},t._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),t=h([].slice.call(document.querySelectorAll(t.join(","))));t.hasClass("dropdown-item")?(t.closest(".dropdown").find(".dropdown-toggle").addClass(ue),t.addClass(ue)):(t.addClass(ue),t.parents(de).prev(fe+", "+ge).addClass(ue),t.parents(de).prev(".nav-item").children(fe).addClass(ue)),h(this._scrollElement).trigger("activate.bs.scrollspy",{relatedTarget:e})},t._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains(ue)}).forEach(function(t){return t.classList.remove(ue)})},n._jQueryInterface=function(e){return this.each(function(){var t=h(this).data(re);if(t||(t=new n(this,"object"==typeof e&&e),h(this).data(re,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return ce}}]),n}();h(window).on("load.bs.scrollspy.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),e=t.length;e--;){var n=h(t[e]);_e._jQueryInterface.call(n,n.data())}}),h.fn[se]=_e._jQueryInterface,h.fn[se].Constructor=_e,h.fn[se].noConflict=function(){return h.fn[se]=le,_e._jQueryInterface};var pe="bs.tab",ve=h.fn.tab,ye="active",be=".active",Ee="> li > .active",Te=function(){function i(t){this._element=t}var t=i.prototype;return t.show=function(){var t,e,n,i,o,s,r=this;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&h(this._element).hasClass(ye)||h(this._element).hasClass("disabled")||(s=h(this._element).closest(".nav, .list-group")[0],e=u.getSelectorFromElement(this._element),s&&(o="UL"===s.nodeName||"OL"===s.nodeName?Ee:be,n=(n=h.makeArray(h(s).find(o)))[n.length-1]),i=h.Event("hide.bs.tab",{relatedTarget:this._element}),o=h.Event("show.bs.tab",{relatedTarget:n}),n&&h(n).trigger(i),h(this._element).trigger(o),o.isDefaultPrevented()||i.isDefaultPrevented()||(e&&(t=document.querySelector(e)),this._activate(this._element,s),s=function(){var t=h.Event("hidden.bs.tab",{relatedTarget:r._element}),e=h.Event("shown.bs.tab",{relatedTarget:n});h(n).trigger(t),h(r._element).trigger(e)},t?this._activate(t,t.parentNode,s):s()))},t.dispose=function(){h.removeData(this._element,pe),this._element=null},t._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?h(e).children(be):h(e).find(Ee))[0],s=n&&o&&h(o).hasClass("fade"),e=function(){return i._transitionComplete(t,o,n)};o&&s?(s=u.getTransitionDurationFromElement(o),h(o).removeClass("show").one(u.TRANSITION_END,e).emulateTransitionEnd(s)):e()},t._transitionComplete=function(t,e,n){var i;e&&(h(e).removeClass(ye),(i=h(e.parentNode).find("> .dropdown-menu .active")[0])&&h(i).removeClass(ye),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)),h(t).addClass(ye),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),u.reflow(t),t.classList.contains("fade")&&t.classList.add("show"),t.parentNode&&h(t.parentNode).hasClass("dropdown-menu")&&((e=h(t).closest(".dropdown")[0])&&(e=[].slice.call(e.querySelectorAll(".dropdown-toggle")),h(e).addClass(ye)),t.setAttribute("aria-expanded",!0)),n&&n()},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(pe);if(e||(e=new i(this),t.data(pe,e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),i}();h(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',function(t){t.preventDefault(),Te._jQueryInterface.call(h(this),"show")}),h.fn.tab=Te._jQueryInterface,h.fn.tab.Constructor=Te,h.fn.tab.noConflict=function(){return h.fn.tab=ve,Te._jQueryInterface};var we="toast",Ce="bs.toast",G="."+Ce,Se=h.fn[we],De="click.dismiss"+G,Ne="show",Ae="showing",ke={animation:"boolean",autohide:"boolean",delay:"number"},Ie={animation:!0,autohide:!0,delay:500},Oe=function(){function i(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}var t=i.prototype;return t.show=function(){var t,e=this,n=h.Event("show.bs.toast");h(this._element).trigger(n),n.isDefaultPrevented()||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),t=function(){e._element.classList.remove(Ae),e._element.classList.add(Ne),h(e._element).trigger("shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout(function(){e.hide()},e._config.delay))},this._element.classList.remove("hide"),u.reflow(this._element),this._element.classList.add(Ae),this._config.animation?(n=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t())},t.hide=function(){var t;this._element.classList.contains(Ne)&&(t=h.Event("hide.bs.toast"),h(this._element).trigger(t),t.isDefaultPrevented()||this._close())},t.dispose=function(){this._clearTimeout(),this._element.classList.contains(Ne)&&this._element.classList.remove(Ne),h(this._element).off(De),h.removeData(this._element,Ce),this._element=null,this._config=null},t._getConfig=function(t){return t=a({},Ie,h(this._element).data(),"object"==typeof t&&t?t:{}),u.typeCheckConfig(we,t,this.constructor.DefaultType),t},t._setListeners=function(){var t=this;h(this._element).on(De,'[data-dismiss="toast"]',function(){return t.hide()})},t._close=function(){function t(){n._element.classList.add("hide"),h(n._element).trigger("hidden.bs.toast")}var e,n=this;this._element.classList.remove(Ne),this._config.animation?(e=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t()},t._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},i._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data(Ce);if(e||(e=new i(this,"object"==typeof n&&n),t.data(Ce,e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},r(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"DefaultType",get:function(){return ke}},{key:"Default",get:function(){return Ie}}]),i}();h.fn[we]=Oe._jQueryInterface,h.fn[we].Constructor=Oe,h.fn[we].noConflict=function(){return h.fn[we]=Se,Oe._jQueryInterface},t.Alert=d,t.Button=b,t.Carousel=P,t.Collapse=W,t.Dropdown=at,t.Modal=Nt,t.Popover=oe,t.Scrollspy=_e,t.Tab=Te,t.Toast=Oe,t.Tooltip=Xt,t.Util=u,Object.defineProperty(t,"__esModule",{value:!0})});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap={},t.jQuery,t.Popper)}(this,function(t,h,o){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,i=arguments[e];for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n])}return t}).apply(this,arguments)}h=h&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h,o=o&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o;var u={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e,n=t.getAttribute("data-target");n&&"#"!==n||(n=(e=t.getAttribute("href"))&&"#"!==e?e.trim():"");try{return document.querySelector(n)?n:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=h(t).css("transition-duration"),n=h(t).css("transition-delay"),i=parseFloat(e),t=parseFloat(n);return i||t?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){h(t).trigger("transitionend")},supportsTransitionEnd:function(){return Boolean("transitionend")},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],s=e[i],s=s&&u.isElement(s)?"element":null===s||void 0===s?""+s:{}.toString.call(s).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(s))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+o+'".')}},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?u.findShadowRoot(t.parentNode):null;t=t.getRootNode();return t instanceof ShadowRoot?t:null},jQueryDetection:function(){if(void 0===h)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=h.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}};u.jQueryDetection(),h.fn.emulateTransitionEnd=function(t){var e=this,n=!1;return h(this).one(u.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||u.triggerTransitionEnd(e)},t),this},h.event.special[u.TRANSITION_END]={bindType:"transitionend",delegateType:"transitionend",handle:function(t){if(h(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var e="alert",n=h.fn[e],a=((mt=l.prototype).close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},mt.dispose=function(){h.removeData(this._element,"bs.alert"),this._element=null},mt._getRootElement=function(t){var e=u.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n=n||h(t).closest(".alert")[0]},mt._triggerCloseEvent=function(t){var e=h.Event("close.bs.alert");return h(t).trigger(e),e},mt._removeElement=function(e){var t,n=this;h(e).removeClass("show"),h(e).hasClass("fade")?(t=u.getTransitionDurationFromElement(e),h(e).one(u.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)):this._destroyElement(e)},mt._destroyElement=function(t){h(t).detach().trigger("closed.bs.alert").remove()},l._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.alert");e||(e=new l(this),t.data("bs.alert",e)),"close"===n&&e[n](this)})},l._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},s(l,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),l);function l(t){this._element=t}h(document).on("click.bs.alert.data-api",'[data-dismiss="alert"]',a._handleDismiss(new a)),h.fn[e]=a._jQueryInterface,h.fn[e].Constructor=a,h.fn[e].noConflict=function(){return h.fn[e]=n,a._jQueryInterface};var c=h.fn.button,d=((mt=f.prototype).toggle=function(){var t,e=!0,n=!0,i=h(this._element).closest('[data-toggle="buttons"]')[0];!i||(t=this._element.querySelector('input:not([type="hidden"])'))&&("radio"===t.type&&(t.checked&&this._element.classList.contains("active")?e=!1:(i=i.querySelector(".active"))&&h(i).removeClass("active")),e&&("checkbox"!==t.type&&"radio"!==t.type||(t.checked=!this._element.classList.contains("active")),h(t).trigger("change")),t.focus(),n=!1),this._element.hasAttribute("disabled")||this._element.classList.contains("disabled")||(n&&this._element.setAttribute("aria-pressed",!this._element.classList.contains("active")),e&&h(this._element).toggleClass("active"))},mt.dispose=function(){h.removeData(this._element,"bs.button"),this._element=null},f._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.button");t||(t=new f(this),h(this).data("bs.button",t)),"toggle"===e&&t[e]()})},s(f,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),f);function f(t){this._element=t}h(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var e,n=t.target,i=n;h(n).hasClass("btn")||(n=h(n).closest(".btn")[0]),!n||n.hasAttribute("disabled")||n.classList.contains("disabled")||(e=n.querySelector('input:not([type="hidden"])'))&&(e.hasAttribute("disabled")||e.classList.contains("disabled"))?t.preventDefault():("LABEL"!==i.tagName||e&&"checkbox"!==e.type)&&d._jQueryInterface.call(h(n),"toggle")}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){var e=h(t.target).closest(".btn")[0];h(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),h(window).on("load.bs.button.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-toggle="buttons"] .btn')),e=0,n=t.length;e<n;e++){var i=t[e],o=i.querySelector('input:not([type="hidden"])');o.checked||o.hasAttribute("checked")?i.classList.add("active"):i.classList.remove("active")}for(var s=0,r=(t=[].slice.call(document.querySelectorAll('[data-toggle="button"]'))).length;s<r;s++){var a=t[s];"true"===a.getAttribute("aria-pressed")?a.classList.add("active"):a.classList.remove("active")}}),h.fn.button=d._jQueryInterface,h.fn.button.Constructor=d,h.fn.button.noConflict=function(){return h.fn.button=c,d._jQueryInterface};var g="carousel",m=h.fn[g],p={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},_={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},v={TOUCH:"touch",PEN:"pen"},b=((mt=y.prototype).next=function(){this._isSliding||this._slide("next")},mt.nextWhenVisible=function(){!document.hidden&&h(this._element).is(":visible")&&"hidden"!==h(this._element).css("visibility")&&this.next()},mt.prev=function(){this._isSliding||this._slide("prev")},mt.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&(u.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},mt.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},mt.to=function(t){var e=this;this._activeElement=this._element.querySelector(".active.carousel-item");var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)h(this._element).one("slid.bs.carousel",function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();n=n<t?"next":"prev";this._slide(n,this._items[t])}},mt.dispose=function(){h(this._element).off(".bs.carousel"),h.removeData(this._element,"bs.carousel"),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},mt._getConfig=function(t){return t=r({},p,t),u.typeCheckConfig(g,t,_),t},mt._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);t<=40||(t=t/this.touchDeltaX,(this.touchDeltaX=0)<t&&this.prev(),t<0&&this.next())},mt._addEventListeners=function(){var e=this;this._config.keyboard&&h(this._element).on("keydown.bs.carousel",function(t){return e._keydown(t)}),"hover"===this._config.pause&&h(this._element).on("mouseenter.bs.carousel",function(t){return e.pause(t)}).on("mouseleave.bs.carousel",function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},mt._addTouchEventListeners=function(){var t,e,n=this;this._touchSupported&&(t=function(t){n._pointerEvent&&v[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},e=function(t){n._pointerEvent&&v[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))},h(this._element.querySelectorAll(".carousel-item img")).on("dragstart.bs.carousel",function(t){return t.preventDefault()}),this._pointerEvent?(h(this._element).on("pointerdown.bs.carousel",t),h(this._element).on("pointerup.bs.carousel",e),this._element.classList.add("pointer-event")):(h(this._element).on("touchstart.bs.carousel",t),h(this._element).on("touchmove.bs.carousel",function(t){(t=t).originalEvent.touches&&1<t.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=t.originalEvent.touches[0].clientX-n.touchStartX}),h(this._element).on("touchend.bs.carousel",e)))},mt._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},mt._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},mt._getItemByDirection=function(t,e){var n="next"===t,i="prev"===t,o=this._getItemIndex(e),s=this._items.length-1;if((i&&0===o||n&&o===s)&&!this._config.wrap)return e;t=(o+("prev"===t?-1:1))%this._items.length;return-1==t?this._items[this._items.length-1]:this._items[t]},mt._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(".active.carousel-item")),n=h.Event("slide.bs.carousel",{relatedTarget:t,direction:e,from:i,to:n});return h(this._element).trigger(n),n},mt._setActiveIndicatorElement=function(t){var e;this._indicatorsElement&&(e=[].slice.call(this._indicatorsElement.querySelectorAll(".active")),h(e).removeClass("active"),(t=this._indicatorsElement.children[this._getItemIndex(t)])&&h(t).addClass("active"))},mt._slide=function(t,e){var n,i,o,s=this,r=this._element.querySelector(".active.carousel-item"),a=this._getItemIndex(r),l=e||r&&this._getItemByDirection(t,r),c=this._getItemIndex(l),e=Boolean(this._interval),t="next"===t?(n="carousel-item-left",i="carousel-item-next","left"):(n="carousel-item-right",i="carousel-item-prev","right");l&&h(l).hasClass("active")?this._isSliding=!1:!this._triggerSlideEvent(l,t).isDefaultPrevented()&&r&&l&&(this._isSliding=!0,e&&this.pause(),this._setActiveIndicatorElement(l),o=h.Event("slid.bs.carousel",{relatedTarget:l,direction:t,from:a,to:c}),h(this._element).hasClass("slide")?(h(l).addClass(i),u.reflow(l),h(r).addClass(n),h(l).addClass(n),(c=parseInt(l.getAttribute("data-interval"),10))?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=c):this._config.interval=this._config.defaultInterval||this._config.interval,c=u.getTransitionDurationFromElement(r),h(r).one(u.TRANSITION_END,function(){h(l).removeClass(n+" "+i).addClass("active"),h(r).removeClass("active "+i+" "+n),s._isSliding=!1,setTimeout(function(){return h(s._element).trigger(o)},0)}).emulateTransitionEnd(c)):(h(r).removeClass("active"),h(l).addClass("active"),this._isSliding=!1,h(this._element).trigger(o)),e&&this.cycle())},y._jQueryInterface=function(i){return this.each(function(){var t=h(this).data("bs.carousel"),e=r({},p,h(this).data());"object"==typeof i&&(e=r({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new y(this,e),h(this).data("bs.carousel",t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},y._dataApiClickHandler=function(t){var e,n,i=u.getSelectorFromElement(this);!i||(e=h(i)[0])&&h(e).hasClass("carousel")&&(n=r({},h(e).data(),h(this).data()),(i=this.getAttribute("data-slide-to"))&&(n.interval=!1),y._jQueryInterface.call(h(e),n),i&&h(e).data("bs.carousel").to(i),t.preventDefault())},s(y,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return p}}]),y);function y(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}h(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",b._dataApiClickHandler),h(window).on("load.bs.carousel.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),e=0,n=t.length;e<n;e++){var i=h(t[e]);b._jQueryInterface.call(i,i.data())}}),h.fn[g]=b._jQueryInterface,h.fn[g].Constructor=b,h.fn[g].noConflict=function(){return h.fn[g]=m,b._jQueryInterface};var E="collapse",w=h.fn[E],T={toggle:!0,parent:""},C={toggle:"boolean",parent:"(string|element)"},S=((mt=k.prototype).toggle=function(){h(this._element).hasClass("show")?this.hide():this.show()},mt.show=function(){var t,e,n,i,o=this;this._isTransitioning||h(this._element).hasClass("show")||(this._parent&&0===(i=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t){return"string"==typeof o._config.parent?t.getAttribute("data-parent")===o._config.parent:t.classList.contains("collapse")})).length&&(i=null),i&&(n=h(i).not(this._selector).data("bs.collapse"))&&n._isTransitioning)||(t=h.Event("show.bs.collapse"),h(this._element).trigger(t),t.isDefaultPrevented()||(i&&(k._jQueryInterface.call(h(i).not(this._selector),"hide"),n||h(i).data("bs.collapse",null)),e=this._getDimension(),h(this._element).removeClass("collapse").addClass("collapsing"),this._element.style[e]=0,this._triggerArray.length&&h(this._triggerArray).removeClass("collapsed").attr("aria-expanded",!0),this.setTransitioning(!0),n="scroll"+(e[0].toUpperCase()+e.slice(1)),i=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(){h(o._element).removeClass("collapsing").addClass("collapse show"),o._element.style[e]="",o.setTransitioning(!1),h(o._element).trigger("shown.bs.collapse")}).emulateTransitionEnd(i),this._element.style[e]=this._element[n]+"px"))},mt.hide=function(){var t=this;if(!this._isTransitioning&&h(this._element).hasClass("show")){var e=h.Event("hide.bs.collapse");if(h(this._element).trigger(e),!e.isDefaultPrevented()){e=this._getDimension();this._element.style[e]=this._element.getBoundingClientRect()[e]+"px",u.reflow(this._element),h(this._element).addClass("collapsing").removeClass("collapse show");var n=this._triggerArray.length;if(0<n)for(var i=0;i<n;i++){var o=this._triggerArray[i],s=u.getSelectorFromElement(o);null!==s&&(h([].slice.call(document.querySelectorAll(s))).hasClass("show")||h(o).addClass("collapsed").attr("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[e]="";e=u.getTransitionDurationFromElement(this._element);h(this._element).one(u.TRANSITION_END,function(){t.setTransitioning(!1),h(t._element).removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")}).emulateTransitionEnd(e)}}},mt.setTransitioning=function(t){this._isTransitioning=t},mt.dispose=function(){h.removeData(this._element,"bs.collapse"),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},mt._getConfig=function(t){return(t=r({},T,t)).toggle=Boolean(t.toggle),u.typeCheckConfig(E,t,C),t},mt._getDimension=function(){return h(this._element).hasClass("width")?"width":"height"},mt._getParent=function(){var t,n=this;u.isElement(this._config.parent)?(t=this._config.parent,void 0!==this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',e=[].slice.call(t.querySelectorAll(e));return h(e).each(function(t,e){n._addAriaAndCollapsedClass(k._getTargetFromElement(e),[e])}),t},mt._addAriaAndCollapsedClass=function(t,e){t=h(t).hasClass("show");e.length&&h(e).toggleClass("collapsed",!t).attr("aria-expanded",t)},k._getTargetFromElement=function(t){t=u.getSelectorFromElement(t);return t?document.querySelector(t):null},k._jQueryInterface=function(i){return this.each(function(){var t=h(this),e=t.data("bs.collapse"),n=r({},T,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&"string"==typeof i&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new k(this,n),t.data("bs.collapse",e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},s(k,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return T}}]),k);function k(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll('[data-toggle="collapse"]')),i=0,o=n.length;i<o;i++){var s=n[i],r=u.getSelectorFromElement(s),a=[].slice.call(document.querySelectorAll(r)).filter(function(t){return t===e});null!==r&&0<a.length&&(this._selector=r,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}h(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=h(this),t=u.getSelectorFromElement(this),t=[].slice.call(document.querySelectorAll(t));h(t).each(function(){var t=h(this),e=t.data("bs.collapse")?"toggle":n.data();S._jQueryInterface.call(t,e)})}),h.fn[E]=S._jQueryInterface,h.fn[E].Constructor=S,h.fn[E].noConflict=function(){return h.fn[E]=w,S._jQueryInterface};var D="dropdown",N=h.fn[D],A=new RegExp("38|40|27"),I={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic",popperConfig:null},O={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},j=((mt=x.prototype).toggle=function(){var t;this._element.disabled||h(this._element).hasClass("disabled")||(t=h(this._menu).hasClass("show"),x._clearMenus(),t||this.show(!0))},mt.show=function(t){if(void 0===t&&(t=!1),!(this._element.disabled||h(this._element).hasClass("disabled")||h(this._menu).hasClass("show"))){var e={relatedTarget:this._element},n=h.Event("show.bs.dropdown",e),i=x._getParentFromElement(this._element);if(h(i).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar&&t){if(void 0===o)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");t=this._element;"parent"===this._config.reference?t=i:u.isElement(this._config.reference)&&(t=this._config.reference,void 0!==this._config.reference.jquery&&(t=this._config.reference[0])),"scrollParent"!==this._config.boundary&&h(i).addClass("position-static"),this._popper=new o(t,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===h(i).closest(".navbar-nav").length&&h(document.body).children().on("mouseover",null,h.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),h(this._menu).toggleClass("show"),h(i).toggleClass("show").trigger(h.Event("shown.bs.dropdown",e))}}},mt.hide=function(){var t,e,n;this._element.disabled||h(this._element).hasClass("disabled")||!h(this._menu).hasClass("show")||(t={relatedTarget:this._element},e=h.Event("hide.bs.dropdown",t),n=x._getParentFromElement(this._element),h(n).trigger(e),e.isDefaultPrevented()||(this._popper&&this._popper.destroy(),h(this._menu).toggleClass("show"),h(n).toggleClass("show").trigger(h.Event("hidden.bs.dropdown",t))))},mt.dispose=function(){h.removeData(this._element,"bs.dropdown"),h(this._element).off(".bs.dropdown"),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},mt.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},mt._addEventListeners=function(){var e=this;h(this._element).on("click.bs.dropdown",function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},mt._getConfig=function(t){return t=r({},this.constructor.Default,h(this._element).data(),t),u.typeCheckConfig(D,t,this.constructor.DefaultType),t},mt._getMenuElement=function(){var t;return this._menu||(t=x._getParentFromElement(this._element))&&(this._menu=t.querySelector(".dropdown-menu")),this._menu},mt._getPlacement=function(){var t=h(this._element.parentNode),e="bottom-start";return t.hasClass("dropup")?e=h(this._menu).hasClass("dropdown-menu-right")?"top-end":"top-start":t.hasClass("dropright")?e="right-start":t.hasClass("dropleft")?e="left-start":h(this._menu).hasClass("dropdown-menu-right")&&(e="bottom-end"),e},mt._detectNavbar=function(){return 0<h(this._element).closest(".navbar").length},mt._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=r({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},mt._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),r({},t,this._config.popperConfig)},x._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.dropdown");if(t||(t=new x(this,"object"==typeof e?e:null),h(this).data("bs.dropdown",t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},x._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll('[data-toggle="dropdown"]')),n=0,i=e.length;n<i;n++){var o,s,r=x._getParentFromElement(e[n]),a=h(e[n]).data("bs.dropdown"),l={relatedTarget:e[n]};t&&"click"===t.type&&(l.clickEvent=t),a&&(o=a._menu,!h(r).hasClass("show")||t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&h.contains(r,t.target)||(s=h.Event("hide.bs.dropdown",l),h(r).trigger(s),s.isDefaultPrevented()||("ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),e[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),h(o).removeClass("show"),h(r).removeClass("show").trigger(h.Event("hidden.bs.dropdown",l)))))}},x._getParentFromElement=function(t){var e,n=u.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},x._dataApiKeydownHandler=function(t){if(!(/input|textarea/i.test(t.target.tagName)?32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||h(t.target).closest(".dropdown-menu").length):!A.test(t.which))&&!this.disabled&&!h(this).hasClass("disabled")){var e=x._getParentFromElement(this),n=h(e).hasClass("show");if(n||27!==t.which){if(t.preventDefault(),t.stopPropagation(),!n||n&&(27===t.which||32===t.which))return 27===t.which&&h(e.querySelector('[data-toggle="dropdown"]')).trigger("focus"),void h(this).trigger("click");n=[].slice.call(e.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)")).filter(function(t){return h(t).is(":visible")});0!==n.length&&(e=n.indexOf(t.target),38===t.which&&0<e&&e--,40===t.which&&e<n.length-1&&e++,e<0&&(e=0),n[e].focus())}}},s(x,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return I}},{key:"DefaultType",get:function(){return O}}]),x);function x(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}h(document).on("keydown.bs.dropdown.data-api",'[data-toggle="dropdown"]',j._dataApiKeydownHandler).on("keydown.bs.dropdown.data-api",".dropdown-menu",j._dataApiKeydownHandler).on("click.bs.dropdown.data-api keyup.bs.dropdown.data-api",j._clearMenus).on("click.bs.dropdown.data-api",'[data-toggle="dropdown"]',function(t){t.preventDefault(),t.stopPropagation(),j._jQueryInterface.call(h(this),"toggle")}).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}),h.fn[D]=j._jQueryInterface,h.fn[D].Constructor=j,h.fn[D].noConflict=function(){return h.fn[D]=N,j._jQueryInterface};var P=h.fn.modal,R={backdrop:!0,keyboard:!0,focus:!0,show:!0},L={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},q=((mt=F.prototype).toggle=function(t){return this._isShown?this.hide():this.show(t)},mt.show=function(t){var e,n=this;this._isShown||this._isTransitioning||(h(this._element).hasClass("fade")&&(this._isTransitioning=!0),e=h.Event("show.bs.modal",{relatedTarget:t}),h(this._element).trigger(e),this._isShown||e.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),h(this._element).on("click.dismiss.bs.modal",'[data-dismiss="modal"]',function(t){return n.hide(t)}),h(this._dialog).on("mousedown.dismiss.bs.modal",function(){h(n._element).one("mouseup.dismiss.bs.modal",function(t){h(t.target).is(n._element)&&(n._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return n._showElement(t)})))},mt.hide=function(t){var e=this;t&&t.preventDefault(),this._isShown&&!this._isTransitioning&&(t=h.Event("hide.bs.modal"),h(this._element).trigger(t),this._isShown&&!t.isDefaultPrevented()&&(this._isShown=!1,(t=h(this._element).hasClass("fade"))&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),h(document).off("focusin.bs.modal"),h(this._element).removeClass("show"),h(this._element).off("click.dismiss.bs.modal"),h(this._dialog).off("mousedown.dismiss.bs.modal"),t?(t=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(t)):this._hideModal()))},mt.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return h(t).off(".bs.modal")}),h(document).off("focusin.bs.modal"),h.removeData(this._element,"bs.modal"),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},mt.handleUpdate=function(){this._adjustDialog()},mt._getConfig=function(t){return t=r({},R,t),u.typeCheckConfig("modal",t,L),t},mt._triggerBackdropTransition=function(){var t,e,n,i=this;"static"===this._config.backdrop?(t=h.Event("hidePrevented.bs.modal"),h(this._element).trigger(t),t.defaultPrevented||((e=this._element.scrollHeight>document.documentElement.clientHeight)||(this._element.style.overflowY="hidden"),this._element.classList.add("modal-static"),n=u.getTransitionDurationFromElement(this._dialog),h(this._element).off(u.TRANSITION_END),h(this._element).one(u.TRANSITION_END,function(){i._element.classList.remove("modal-static"),e||h(i._element).one(u.TRANSITION_END,function(){i._element.style.overflowY=""}).emulateTransitionEnd(i._element,n)}).emulateTransitionEnd(n),this._element.focus())):this.hide()},mt._showElement=function(t){var e=this,n=h(this._element).hasClass("fade"),i=this._dialog?this._dialog.querySelector(".modal-body"):null;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),h(this._dialog).hasClass("modal-dialog-scrollable")&&i?i.scrollTop=0:this._element.scrollTop=0,n&&u.reflow(this._element),h(this._element).addClass("show"),this._config.focus&&this._enforceFocus();var o=h.Event("shown.bs.modal",{relatedTarget:t}),t=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,h(e._element).trigger(o)};n?(n=u.getTransitionDurationFromElement(this._dialog),h(this._dialog).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t()},mt._enforceFocus=function(){var e=this;h(document).off("focusin.bs.modal").on("focusin.bs.modal",function(t){document!==t.target&&e._element!==t.target&&0===h(e._element).has(t.target).length&&e._element.focus()})},mt._setEscapeEvent=function(){var e=this;this._isShown?h(this._element).on("keydown.dismiss.bs.modal",function(t){e._config.keyboard&&27===t.which?(t.preventDefault(),e.hide()):e._config.keyboard||27!==t.which||e._triggerBackdropTransition()}):this._isShown||h(this._element).off("keydown.dismiss.bs.modal")},mt._setResizeEvent=function(){var e=this;this._isShown?h(window).on("resize.bs.modal",function(t){return e.handleUpdate(t)}):h(window).off("resize.bs.modal")},mt._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop(function(){h(document.body).removeClass("modal-open"),t._resetAdjustments(),t._resetScrollbar(),h(t._element).trigger("hidden.bs.modal")})},mt._removeBackdrop=function(){this._backdrop&&(h(this._backdrop).remove(),this._backdrop=null)},mt._showBackdrop=function(t){var e,n=this,i=h(this._element).hasClass("fade")?"fade":"";this._isShown&&this._config.backdrop?(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),h(this._backdrop).appendTo(document.body),h(this._element).on("click.dismiss.bs.modal",function(t){n._ignoreBackdropClick?n._ignoreBackdropClick=!1:t.target===t.currentTarget&&n._triggerBackdropTransition()}),i&&u.reflow(this._backdrop),h(this._backdrop).addClass("show"),t&&(i?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t())):!this._isShown&&this._backdrop?(h(this._backdrop).removeClass("show"),i=function(){n._removeBackdrop(),t&&t()},h(this._element).hasClass("fade")?(e=u.getTransitionDurationFromElement(this._backdrop),h(this._backdrop).one(u.TRANSITION_END,i).emulateTransitionEnd(e)):i()):t&&t()},mt._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},mt._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},mt._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(t.left+t.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},mt._setScrollbar=function(){var t,e,o=this;this._isBodyOverflowing&&(t=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top")),e=[].slice.call(document.querySelectorAll(".sticky-top")),h(t).each(function(t,e){var n=e.style.paddingRight,i=h(e).css("padding-right");h(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),h(e).each(function(t,e){var n=e.style.marginRight,i=h(e).css("margin-right");h(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")}),t=document.body.style.paddingRight,e=h(document.body).css("padding-right"),h(document.body).data("padding-right",t).css("padding-right",parseFloat(e)+this._scrollbarWidth+"px")),h(document.body).addClass("modal-open")},mt._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top"));h(t).each(function(t,e){var n=h(e).data("padding-right");h(e).removeData("padding-right"),e.style.paddingRight=n||""});t=[].slice.call(document.querySelectorAll(".sticky-top"));h(t).each(function(t,e){var n=h(e).data("margin-right");void 0!==n&&h(e).css("margin-right",n).removeData("margin-right")});t=h(document.body).data("padding-right");h(document.body).removeData("padding-right"),document.body.style.paddingRight=t||""},mt._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},F._jQueryInterface=function(n,i){return this.each(function(){var t=h(this).data("bs.modal"),e=r({},R,h(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new F(this,e),h(this).data("bs.modal",t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},s(F,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return R}}]),F);function F(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}h(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var e,n=this,i=u.getSelectorFromElement(this);i&&(e=document.querySelector(i));i=h(e).data("bs.modal")?"toggle":r({},h(e).data(),h(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var o=h(e).one("show.bs.modal",function(t){t.isDefaultPrevented()||o.one("hidden.bs.modal",function(){h(n).is(":visible")&&n.focus()})});q._jQueryInterface.call(h(e),i,this)}),h.fn.modal=q._jQueryInterface,h.fn.modal.Constructor=q,h.fn.modal.noConflict=function(){return h.fn.modal=P,q._jQueryInterface};var Q=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],B=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,H=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function U(t,o,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var t=(new window.DOMParser).parseFromString(t,"text/html"),s=Object.keys(o),r=[].slice.call(t.body.querySelectorAll("*")),n=0,i=r.length;n<i;n++)!function(t){var e=r[t],n=e.nodeName.toLowerCase();if(-1===s.indexOf(e.nodeName.toLowerCase()))return e.parentNode.removeChild(e);var t=[].slice.call(e.attributes),i=[].concat(o["*"]||[],o[n]||[]);t.forEach(function(t){!function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===Q.indexOf(n)||Boolean(t.nodeValue.match(B)||t.nodeValue.match(H));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,s=i.length;o<s;o++)if(n.match(i[o]))return 1}(t,i)&&e.removeAttribute(t.nodeName)})}(n);return t.body.innerHTML}var M="tooltip",W=h.fn[M],V=new RegExp("(^|\\s)bs-tooltip\\S+","g"),z=["sanitize","whiteList","sanitizeFn"],K={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object",popperConfig:"(null|object)"},X={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Y={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},$={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},J=((mt=G.prototype).enable=function(){this._isEnabled=!0},mt.disable=function(){this._isEnabled=!1},mt.toggleEnabled=function(){this._isEnabled=!this._isEnabled},mt.toggle=function(t){var e,n;this._isEnabled&&(t?(e=this.constructor.DATA_KEY,(n=h(t.currentTarget).data(e))||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)):h(this.getTipElement()).hasClass("show")?this._leave(null,this):this._enter(null,this))},mt.dispose=function(){clearTimeout(this._timeout),h.removeData(this.element,this.constructor.DATA_KEY),h(this.element).off(this.constructor.EVENT_KEY),h(this.element).closest(".modal").off("hide.bs.modal",this._hideModalHandler),this.tip&&h(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},mt.show=function(){var e=this;if("none"===h(this.element).css("display"))throw new Error("Please use show on visible elements");var t,n,i=h.Event(this.constructor.Event.SHOW);this.isWithContent()&&this._isEnabled&&(h(this.element).trigger(i),n=u.findShadowRoot(this.element),t=h.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element),!i.isDefaultPrevented()&&t&&(n=this.getTipElement(),i=u.getUID(this.constructor.NAME),n.setAttribute("id",i),this.element.setAttribute("aria-describedby",i),this.setContent(),this.config.animation&&h(n).addClass("fade"),t="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,i=this._getAttachment(t),this.addAttachmentClass(i),t=this._getContainer(),h(n).data(this.constructor.DATA_KEY,this),h.contains(this.element.ownerDocument.documentElement,this.tip)||h(n).appendTo(t),h(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new o(this.element,n,this._getPopperConfig(i)),h(n).addClass("show"),"ontouchstart"in document.documentElement&&h(document.body).children().on("mouseover",null,h.noop),i=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,h(e.element).trigger(e.constructor.Event.SHOWN),"out"===t&&e._leave(null,e)},h(this.tip).hasClass("fade")?(n=u.getTransitionDurationFromElement(this.tip),h(this.tip).one(u.TRANSITION_END,i).emulateTransitionEnd(n)):i()))},mt.hide=function(t){function e(){"show"!==n._hoverState&&i.parentNode&&i.parentNode.removeChild(i),n._cleanTipClass(),n.element.removeAttribute("aria-describedby"),h(n.element).trigger(n.constructor.Event.HIDDEN),null!==n._popper&&n._popper.destroy(),t&&t()}var n=this,i=this.getTipElement(),o=h.Event(this.constructor.Event.HIDE);h(this.element).trigger(o),o.isDefaultPrevented()||(h(i).removeClass("show"),"ontouchstart"in document.documentElement&&h(document.body).children().off("mouseover",null,h.noop),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,h(this.tip).hasClass("fade")?(o=u.getTransitionDurationFromElement(i),h(i).one(u.TRANSITION_END,e).emulateTransitionEnd(o)):e(),this._hoverState="")},mt.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},mt.isWithContent=function(){return Boolean(this.getTitle())},mt.addAttachmentClass=function(t){h(this.getTipElement()).addClass("bs-tooltip-"+t)},mt.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},mt.setContent=function(){var t=this.getTipElement();this.setElementContent(h(t.querySelectorAll(".tooltip-inner")),this.getTitle()),h(t).removeClass("fade show")},mt.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=U(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?h(e).parent().is(t)||t.empty().append(e):t.text(h(e).text())},mt.getTitle=function(){return this.element.getAttribute("data-original-title")||("function"==typeof this.config.title?this.config.title.call(this.element):this.config.title)},mt._getPopperConfig=function(t){var e=this;return r({},{placement:t,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}},this.config.popperConfig)},mt._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=r({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},mt._getContainer=function(){return!1===this.config.container?document.body:u.isElement(this.config.container)?h(this.config.container):h(document).find(this.config.container)},mt._getAttachment=function(t){return X[t.toUpperCase()]},mt._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(t){var e;"click"===t?h(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(t){return n.toggle(t)}):"manual"!==t&&(e="hover"===t?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,t="hover"===t?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT,h(n.element).on(e,n.config.selector,function(t){return n._enter(t)}).on(t,n.config.selector,function(t){return n._leave(t)}))}),this._hideModalHandler=function(){n.element&&n.hide()},h(this.element).closest(".modal").on("hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=r({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},mt._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");!this.element.getAttribute("title")&&"string"==t||(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},mt._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?"focus":"hover"]=!0),h(e.getTipElement()).hasClass("show")||"show"===e._hoverState?e._hoverState="show":(clearTimeout(e._timeout),e._hoverState="show",e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){"show"===e._hoverState&&e.show()},e.config.delay.show):e.show())},mt._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||h(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),h(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?"focus":"hover"]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){"out"===e._hoverState&&e.hide()},e.config.delay.hide):e.hide())},mt._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},mt._getConfig=function(t){var e=h(this.element).data();return Object.keys(e).forEach(function(t){-1!==z.indexOf(t)&&delete e[t]}),"number"==typeof(t=r({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),u.typeCheckConfig(M,t,this.constructor.DefaultType),t.sanitize&&(t.template=U(t.template,t.whiteList,t.sanitizeFn)),t},mt._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},mt._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(V);null!==e&&e.length&&t.removeClass(e.join(""))},mt._handlePopperPlacementChange=function(t){this.tip=t.instance.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},mt._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(h(t).removeClass("fade"),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},G._jQueryInterface=function(n){return this.each(function(){var t=h(this).data("bs.tooltip"),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new G(this,e),h(this).data("bs.tooltip",t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(G,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return Y}},{key:"NAME",get:function(){return M}},{key:"DATA_KEY",get:function(){return"bs.tooltip"}},{key:"Event",get:function(){return $}},{key:"EVENT_KEY",get:function(){return".bs.tooltip"}},{key:"DefaultType",get:function(){return K}}]),G);function G(t,e){if(void 0===o)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}h.fn[M]=J._jQueryInterface,h.fn[M].Constructor=J,h.fn[M].noConflict=function(){return h.fn[M]=W,J._jQueryInterface};var Z="popover",tt=h.fn[Z],et=new RegExp("(^|\\s)bs-popover\\S+","g"),nt=r({},J.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),it=r({},J.DefaultType,{content:"(string|element|function)"}),ot={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"},st=function(t){var e;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var n=i.prototype;return n.isWithContent=function(){return this.getTitle()||this._getContent()},n.addAttachmentClass=function(t){h(this.getTipElement()).addClass("bs-popover-"+t)},n.getTipElement=function(){return this.tip=this.tip||h(this.config.template)[0],this.tip},n.setContent=function(){var t=h(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(".popover-body"),e),t.removeClass("fade show")},n._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},n._cleanTipClass=function(){var t=h(this.getTipElement()),e=t.attr("class").match(et);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=h(this).data("bs.popover"),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),h(this).data("bs.popover",t)),"string"==typeof n)){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return nt}},{key:"NAME",get:function(){return Z}},{key:"DATA_KEY",get:function(){return"bs.popover"}},{key:"Event",get:function(){return ot}},{key:"EVENT_KEY",get:function(){return".bs.popover"}},{key:"DefaultType",get:function(){return it}}]),i}(J);h.fn[Z]=st._jQueryInterface,h.fn[Z].Constructor=st,h.fn[Z].noConflict=function(){return h.fn[Z]=tt,st._jQueryInterface};var rt="scrollspy",at=h.fn[rt],lt={offset:10,method:"auto",target:""},ct={offset:"number",method:"string",target:"(string|element)"},ht=((mt=ut.prototype).refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":"position",i="auto"===this._config.method?t:this._config.method,o="position"===i?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=u.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){t=e.getBoundingClientRect();if(t.width||t.height)return[h(e)[i]().top+o,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},mt.dispose=function(){h.removeData(this._element,"bs.scrollspy"),h(this._scrollElement).off(".bs.scrollspy"),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},mt._getConfig=function(t){var e;return"string"!=typeof(t=r({},lt,"object"==typeof t&&t?t:{})).target&&u.isElement(t.target)&&((e=h(t.target).attr("id"))||(e=u.getUID(rt),h(t.target).attr("id",e)),t.target="#"+e),u.typeCheckConfig(rt,t,ct),t},mt._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},mt._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},mt._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},mt._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;)this._activeTarget!==this._targets[i]&&t>=this._offsets[i]&&(void 0===this._offsets[i+1]||t<this._offsets[i+1])&&this._activate(this._targets[i])}},mt._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),t=h([].slice.call(document.querySelectorAll(t.join(","))));t.hasClass("dropdown-item")?(t.closest(".dropdown").find(".dropdown-toggle").addClass("active"),t.addClass("active")):(t.addClass("active"),t.parents(".nav, .list-group").prev(".nav-link, .list-group-item").addClass("active"),t.parents(".nav, .list-group").prev(".nav-item").children(".nav-link").addClass("active")),h(this._scrollElement).trigger("activate.bs.scrollspy",{relatedTarget:e})},mt._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains("active")}).forEach(function(t){return t.classList.remove("active")})},ut._jQueryInterface=function(e){return this.each(function(){var t=h(this).data("bs.scrollspy");if(t||(t=new ut(this,"object"==typeof e&&e),h(this).data("bs.scrollspy",t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},s(ut,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"Default",get:function(){return lt}}]),ut);function ut(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" .nav-link,"+this._config.target+" .list-group-item,"+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,h(this._scrollElement).on("scroll.bs.scrollspy",function(t){return n._process(t)}),this.refresh(),this._process()}h(window).on("load.bs.scrollspy.data-api",function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),e=t.length;e--;){var n=h(t[e]);ht._jQueryInterface.call(n,n.data())}}),h.fn[rt]=ht._jQueryInterface,h.fn[rt].Constructor=ht,h.fn[rt].noConflict=function(){return h.fn[rt]=at,ht._jQueryInterface};var dt=h.fn.tab,ft=((mt=gt.prototype).show=function(){var t,e,n,i,o,s,r=this;this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&h(this._element).hasClass("active")||h(this._element).hasClass("disabled")||(s=h(this._element).closest(".nav, .list-group")[0],e=u.getSelectorFromElement(this._element),s&&(o="UL"===s.nodeName||"OL"===s.nodeName?"> li > .active":".active",n=(n=h.makeArray(h(s).find(o)))[n.length-1]),i=h.Event("hide.bs.tab",{relatedTarget:this._element}),o=h.Event("show.bs.tab",{relatedTarget:n}),n&&h(n).trigger(i),h(this._element).trigger(o),o.isDefaultPrevented()||i.isDefaultPrevented()||(e&&(t=document.querySelector(e)),this._activate(this._element,s),s=function(){var t=h.Event("hidden.bs.tab",{relatedTarget:r._element}),e=h.Event("shown.bs.tab",{relatedTarget:n});h(n).trigger(t),h(r._element).trigger(e)},t?this._activate(t,t.parentNode,s):s()))},mt.dispose=function(){h.removeData(this._element,"bs.tab"),this._element=null},mt._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?h(e).children(".active"):h(e).find("> li > .active"))[0],s=n&&o&&h(o).hasClass("fade"),e=function(){return i._transitionComplete(t,o,n)};o&&s?(s=u.getTransitionDurationFromElement(o),h(o).removeClass("show").one(u.TRANSITION_END,e).emulateTransitionEnd(s)):e()},mt._transitionComplete=function(t,e,n){var i;e&&(h(e).removeClass("active"),(i=h(e.parentNode).find("> .dropdown-menu .active")[0])&&h(i).removeClass("active"),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)),h(t).addClass("active"),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),u.reflow(t),t.classList.contains("fade")&&t.classList.add("show"),t.parentNode&&h(t.parentNode).hasClass("dropdown-menu")&&((e=h(t).closest(".dropdown")[0])&&(e=[].slice.call(e.querySelectorAll(".dropdown-toggle")),h(e).addClass("active")),t.setAttribute("aria-expanded",!0)),n&&n()},gt._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.tab");if(e||(e=new gt(this),t.data("bs.tab",e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},s(gt,null,[{key:"VERSION",get:function(){return"4.5.2"}}]),gt);function gt(t){this._element=t}h(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',function(t){t.preventDefault(),ft._jQueryInterface.call(h(this),"show")}),h.fn.tab=ft._jQueryInterface,h.fn.tab.Constructor=ft,h.fn.tab.noConflict=function(){return h.fn.tab=dt,ft._jQueryInterface};var mt,pt=h.fn.toast,_t={animation:"boolean",autohide:"boolean",delay:"number"},vt={animation:!0,autohide:!0,delay:500},bt=((mt=yt.prototype).show=function(){var t,e=this,n=h.Event("show.bs.toast");h(this._element).trigger(n),n.isDefaultPrevented()||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),t=function(){e._element.classList.remove("showing"),e._element.classList.add("show"),h(e._element).trigger("shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout(function(){e.hide()},e._config.delay))},this._element.classList.remove("hide"),u.reflow(this._element),this._element.classList.add("showing"),this._config.animation?(n=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(n)):t())},mt.hide=function(){var t;this._element.classList.contains("show")&&(t=h.Event("hide.bs.toast"),h(this._element).trigger(t),t.isDefaultPrevented()||this._close())},mt.dispose=function(){this._clearTimeout(),this._element.classList.contains("show")&&this._element.classList.remove("show"),h(this._element).off("click.dismiss.bs.toast"),h.removeData(this._element,"bs.toast"),this._element=null,this._config=null},mt._getConfig=function(t){return t=r({},vt,h(this._element).data(),"object"==typeof t&&t?t:{}),u.typeCheckConfig("toast",t,this.constructor.DefaultType),t},mt._setListeners=function(){var t=this;h(this._element).on("click.dismiss.bs.toast",'[data-dismiss="toast"]',function(){return t.hide()})},mt._close=function(){function t(){n._element.classList.add("hide"),h(n._element).trigger("hidden.bs.toast")}var e,n=this;this._element.classList.remove("show"),this._config.animation?(e=u.getTransitionDurationFromElement(this._element),h(this._element).one(u.TRANSITION_END,t).emulateTransitionEnd(e)):t()},mt._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},yt._jQueryInterface=function(n){return this.each(function(){var t=h(this),e=t.data("bs.toast");if(e||(e=new yt(this,"object"==typeof n&&n),t.data("bs.toast",e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},s(yt,null,[{key:"VERSION",get:function(){return"4.5.2"}},{key:"DefaultType",get:function(){return _t}},{key:"Default",get:function(){return vt}}]),yt);function yt(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}h.fn.toast=bt._jQueryInterface,h.fn.toast.Constructor=bt,h.fn.toast.noConflict=function(){return h.fn.toast=pt,bt._jQueryInterface},t.Alert=a,t.Button=d,t.Carousel=b,t.Collapse=S,t.Dropdown=j,t.Modal=q,t.Popover=st,t.Scrollspy=ht,t.Tab=ft,t.Toast=bt,t.Tooltip=J,t.Util=u,Object.defineProperty(t,"__esModule",{value:!0})});
function scrolled(){$(document).scrollTop()>$("#header").outerHeight()?$("body").addClass("scrolled"):$("body").removeClass("scrolled")}function setMain(){$("#main-content").css({"min-height":$(window).innerHeight()-$("#footer").outerHeight(),"padding-top":$("#header").outerHeight()})}function setHomeHeight(){$(".home").css({"min-height":$(window).innerHeight()-$("#header").outerHeight()})}function backToTop(){var e=$(".back-to-top");$(window).on("scroll",function(){200<=$(window).scrollTop()?e.fadeIn(400):e.fadeOut(400)})}function jsScroll(){var o=$("#header").outerHeight()-22;$(".js-scroll").on("click",function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var e=$(this.hash);if((e=e.length?e:$("[name="+this.hash.slice(1)+"]")).length){e=e.offset().top-o;return $("html, body").animate({scrollTop:e},1e3,"swing"),!1}}})}jQuery(document).ready(function(e){scrolled(),setMain(),setHomeHeight(),backToTop(),jsScroll(),e(document).scroll(function(){scrolled()}),e(window).resize(function(e){setMain(),setHomeHeight()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
