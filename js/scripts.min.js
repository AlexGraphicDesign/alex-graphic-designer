function scrolled(){$(document).scrollTop()>$("#header").outerHeight()?$("body").addClass("scrolled"):$("body").removeClass("scrolled")}function setMain(){$("#main-content").css({"min-height":$(window).innerHeight()-$("#footer").outerHeight(),"padding-top":$("#header").outerHeight()})}function setHomeHeight(){$(".home").css({"min-height":$(window).innerHeight()-$("#header").outerHeight()})}function backToTop(){var e=$(".back-to-top");$(window).on("scroll",function(){200<=$(window).scrollTop()?e.fadeIn(400):e.fadeOut(400)})}function jsScroll(){var o=$("#header").outerHeight()-22;$(".js-scroll").on("click",function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var e=$(this.hash);if((e=e.length?e:$("[name="+this.hash.slice(1)+"]")).length){e=e.offset().top-o;return $("html, body").animate({scrollTop:e},1e3,"swing"),!1}}})}function resizeMasonryItem(e){var o=$(".masonry-container"),t=parseInt(o.css("grid-row-gap")),o=parseInt(o.css("grid-auto-rows")),t=Math.ceil((e.querySelector(".blog__item").getBoundingClientRect().height+t)/(o+t));e.style.gridRowEnd="span "+t}function resizeAllMasonryItems(){for(var e=$(".masonry-item"),o=0;o<e.length;o++)resizeMasonryItem(e[o])}jQuery(document).ready(function(e){scrolled(),setMain(),setHomeHeight(),backToTop(),jsScroll(),resizeAllMasonryItems(),e(document).scroll(function(){scrolled()}),e(window).resize(function(e){setMain(),setHomeHeight(),resizeAllMasonryItems()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9TY3JpcHQgc3DDqWNpZmlxdWVzIGF1IHRow6htZSBcIkFsZXhHcmFwaGljRGVzaWduZXJcIlxyXG5cclxualF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigkKXtcclxuXHJcbiAgc2Nyb2xsZWQoKTtcclxuICBzZXRNYWluKCk7XHJcbiAgc2V0SG9tZUhlaWdodCgpO1xyXG4gIGJhY2tUb1RvcCgpO1xyXG4gIGpzU2Nyb2xsKCk7XHJcbiAgcmVzaXplQWxsTWFzb25yeUl0ZW1zKCk7XHJcblxyXG4gIC8vT24gZXhlY3V0ZSBsYSBmb25jdGlvbiBxdWkgZG9pdCBzJ2V4ZWN1dGVyIGF1IHNjcm9sbFxyXG4gICQoZG9jdW1lbnQpLnNjcm9sbChmdW5jdGlvbigpIHtcclxuICAgICAgc2Nyb2xsZWQoKTtcclxuICB9KTtcclxuXHJcbiAgLy9PbiBhcHBlbGxlIGxhL2xlcyBmb25jdGlvbihzKSBxdWkgZG9pdCBzJ8OpeMOpY3V0ZXIgYXUgcmVzaXplXHJcbiAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbihlKSB7XHJcbiAgICAgIHNldE1haW4oKTtcclxuICAgICAgc2V0SG9tZUhlaWdodCgpO1xyXG4gICAgICByZXNpemVBbGxNYXNvbnJ5SXRlbXMoKTtcclxuICB9KTtcclxuXHJcbn0pO1xyXG5cclxuLy9Gb25jdGlvbiBxdWkgZMOpdGVybWluZSBzaSBvbiBhcyBzY3JvbGzDqSBvdSBub24sIG9uIGVmZmVjdHVlIGRlcyBhY3Rpb25zIHNlbG9uIGxlIGNhc1xyXG5mdW5jdGlvbiBzY3JvbGxlZCgpe1xyXG4gIC8vT24gcsOpY3Vww6hyZSBsYSB2YWxldXIgZHUgc2Nyb2xsXHJcbiAgdmFyIHNjcm9sbFZhbCA9ICQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpO1xyXG4gIGlmIChzY3JvbGxWYWwgPiAkKCcjaGVhZGVyJykub3V0ZXJIZWlnaHQoKSl7XHJcbiAgICAkKCdib2R5JykuYWRkQ2xhc3MoXCJzY3JvbGxlZFwiKTtcclxuICB9ZWxzZXtcclxuICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcyhcInNjcm9sbGVkXCIpO1xyXG4gIH1cclxufVxyXG5cclxuLy9Gb25jdGlvbiBxdWkgcGVybWV0cyBkZSBmaXhlciBsZSBmb290ZXIgZW4gYmFzIGRlIGxhIHBhZ2VcclxuZnVuY3Rpb24gc2V0TWFpbigpe1xyXG4gICQoXCIjbWFpbi1jb250ZW50XCIpLmNzcyh7XHJcbiAgICAnbWluLWhlaWdodCcgOiAkKHdpbmRvdykuaW5uZXJIZWlnaHQoKSAtICQoJyNmb290ZXInKS5vdXRlckhlaWdodCgpLFxyXG4gICAgJ3BhZGRpbmctdG9wJyA6ICQoJyNoZWFkZXInKS5vdXRlckhlaWdodCgpXHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vT24gbWV0IGxhIHNlY3Rpb24gZGUgbGEgaG9tZSDDoCAxMDAlIGR1IHZpZXdwb3J0XHJcbmZ1bmN0aW9uIHNldEhvbWVIZWlnaHQoKXtcclxuICAkKCcuaG9tZScpLmNzcyh7XHJcbiAgICAnbWluLWhlaWdodCcgOiAkKHdpbmRvdykuaW5uZXJIZWlnaHQoKSAtICQoJyNoZWFkZXInKS5vdXRlckhlaWdodCgpXHJcbiAgfSk7XHJcbn1cclxuXHJcbi8vIEJvdXRvbiByZXRvdXIgaGF1dCBkZSBwYWdlXHJcbmZ1bmN0aW9uIGJhY2tUb1RvcCgpe1xyXG4gIHZhciBweFNob3cgPSAyMDAsXHJcbiAgICAgIGZhZGVJblRpbWUgPSA0MDAsXHJcbiAgICAgIGZhZGVPdXRUaW1lID0gNDAwLFxyXG4gICAgICBnb1RvcEJ1dHRvbiA9ICQoXCIuYmFjay10by10b3BcIilcclxuXHJcbiAgJCh3aW5kb3cpLm9uKCdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGlmICgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgPj0gcHhTaG93KSB7XHJcbiAgICAgICAgICBnb1RvcEJ1dHRvbi5mYWRlSW4oZmFkZUluVGltZSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBnb1RvcEJ1dHRvbi5mYWRlT3V0KGZhZGVPdXRUaW1lKTtcclxuICAgICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG4vL1Ntb290aHNjcm9sbFxyXG5mdW5jdGlvbiBqc1Njcm9sbCgpe1xyXG4gIHZhciBtYWluTmF2X2hlaWdodCA9ICQoJyNoZWFkZXInKS5vdXRlckhlaWdodCgpIC0gMjI7XHJcbiAgJCgnLmpzLXNjcm9sbCcpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sICcnKSA9PSB0aGlzLnBhdGhuYW1lLnJlcGxhY2UoL15cXC8vLCAnJykgJiYgbG9jYXRpb24uaG9zdG5hbWUgPT0gdGhpcy5ob3N0bmFtZSkge1xyXG4gICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzLmhhc2gpO1xyXG4gICAgICB0YXJnZXQgPSB0YXJnZXQubGVuZ3RoID8gdGFyZ2V0IDogJCgnW25hbWU9JyArIHRoaXMuaGFzaC5zbGljZSgxKSArICddJyk7XHJcbiAgICAgIGlmICh0YXJnZXQubGVuZ3RoKSB7XHJcbiAgICAgICAgdmFyIHNjcm9sbHRvID0gdGFyZ2V0Lm9mZnNldCgpLnRvcCAtIG1haW5OYXZfaGVpZ2h0O1xyXG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcclxuICAgICAgICAgIHNjcm9sbFRvcDogc2Nyb2xsdG9cclxuICAgICAgICB9LCAxMDAwLCBcInN3aW5nXCIpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG4vL01hc29ucnlcclxuZnVuY3Rpb24gcmVzaXplTWFzb25yeUl0ZW0oaXRlbSl7XHJcbiAgLyogR2V0IHRoZSBncmlkIG9iamVjdCwgaXRzIHJvdy1nYXAsIGFuZCB0aGUgc2l6ZSBvZiBpdHMgaW1wbGljaXQgcm93cyAqL1xyXG4gIHZhciBncmlkID0gJCgnLm1hc29ucnktY29udGFpbmVyJyksXHJcbiAgICAgIHJvd0dhcCA9IHBhcnNlSW50KGdyaWQuY3NzKCdncmlkLXJvdy1nYXAnKSksXHJcbiAgICAgIHJvd0hlaWdodCA9IHBhcnNlSW50KGdyaWQuY3NzKCdncmlkLWF1dG8tcm93cycpKTtcclxuXHJcbiAgLypcclxuICAgKiBTcGFubmluZyBmb3IgYW55IGJyaWNrID0gU1xyXG4gICAqIEdyaWQncyByb3ctZ2FwID0gR1xyXG4gICAqIFNpemUgb2YgZ3JpZCdzIGltcGxpY2l0bHkgY3JlYXRlIHJvdy10cmFjayA9IFJcclxuICAgKiBIZWlnaHQgb2YgaXRlbSBjb250ZW50ID0gSFxyXG4gICAqIE5ldCBoZWlnaHQgb2YgdGhlIGl0ZW0gPSBIMSA9IEggKyBHXHJcbiAgICogTmV0IGhlaWdodCBvZiB0aGUgaW1wbGljaXQgcm93LXRyYWNrID0gVCA9IEcgKyBSXHJcbiAgICogUyA9IEgxIC8gVFxyXG4gICAqL1xyXG4gIHZhciByb3dTcGFuID0gTWF0aC5jZWlsKChpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5ibG9nX19pdGVtJykuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0K3Jvd0dhcCkvKHJvd0hlaWdodCtyb3dHYXApKTtcclxuICAvKiBTZXQgdGhlIHNwYW5uaW5nIGFzIGNhbGN1bGF0ZWQgYWJvdmUgKFMpICovXHJcbiAgaXRlbS5zdHlsZS5ncmlkUm93RW5kID0gJ3NwYW4gJysgcm93U3BhbjtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIHJlc2l6ZUFsbE1hc29ucnlJdGVtcygpe1xyXG4gIHZhciBhbGxJdGVtcyA9ICQoJy5tYXNvbnJ5LWl0ZW0nKTtcclxuICBmb3IodmFyIGk9MDtpPGFsbEl0ZW1zLmxlbmd0aDtpKyspe1xyXG4gICAgcmVzaXplTWFzb25yeUl0ZW0oYWxsSXRlbXNbaV0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsic2Nyb2xsZWQiLCIkIiwiZG9jdW1lbnQiLCJzY3JvbGxUb3AiLCJvdXRlckhlaWdodCIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJzZXRNYWluIiwiY3NzIiwibWluLWhlaWdodCIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwicGFkZGluZy10b3AiLCJzZXRIb21lSGVpZ2h0IiwiYmFja1RvVG9wIiwiZ29Ub3BCdXR0b24iLCJvbiIsImZhZGVJbiIsImZhZGVPdXQiLCJqc1Njcm9sbCIsIm1haW5OYXZfaGVpZ2h0IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInJlcGxhY2UiLCJ0aGlzIiwiaG9zdG5hbWUiLCJ0YXJnZXQiLCJoYXNoIiwibGVuZ3RoIiwic2xpY2UiLCJzY3JvbGx0byIsIm9mZnNldCIsInRvcCIsImFuaW1hdGUiLCJyZXNpemVNYXNvbnJ5SXRlbSIsIml0ZW0iLCJncmlkIiwicm93R2FwIiwicGFyc2VJbnQiLCJyb3dIZWlnaHQiLCJyb3dTcGFuIiwiTWF0aCIsImNlaWwiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaGVpZ2h0Iiwic3R5bGUiLCJncmlkUm93RW5kIiwicmVzaXplQWxsTWFzb25yeUl0ZW1zIiwiYWxsSXRlbXMiLCJpIiwialF1ZXJ5IiwicmVhZHkiLCJzY3JvbGwiLCJyZXNpemUiLCJlIl0sIm1hcHBpbmdzIjoiQUEwQkEsU0FBU0EsV0FFU0MsRUFBRUMsVUFBVUMsWUFDWkYsRUFBRSxXQUFXRyxjQUMzQkgsRUFBRSxRQUFRSSxTQUFTLFlBRW5CSixFQUFFLFFBQVFLLFlBQVksWUFLMUIsU0FBU0MsVUFDUE4sRUFBRSxpQkFBaUJPLElBQUksQ0FDckJDLGFBQWVSLEVBQUVTLFFBQVFDLGNBQWdCVixFQUFFLFdBQVdHLGNBQ3REUSxjQUFnQlgsRUFBRSxXQUFXRyxnQkFLakMsU0FBU1MsZ0JBQ1BaLEVBQUUsU0FBU08sSUFBSSxDQUNiQyxhQUFlUixFQUFFUyxRQUFRQyxjQUFnQlYsRUFBRSxXQUFXRyxnQkFLMUQsU0FBU1UsWUFDUCxJQUdJQyxFQUFjZCxFQUFFLGdCQUVwQkEsRUFBRVMsUUFBUU0sR0FBRyxTQUFVLFdBTFYsS0FNTGYsRUFBRVMsUUFBUVAsWUFDVlksRUFBWUUsT0FOSCxLQVFURixFQUFZRyxRQVBGLE9BYXBCLFNBQVNDLFdBQ1AsSUFBSUMsRUFBaUJuQixFQUFFLFdBQVdHLGNBQWdCLEdBQ2xESCxFQUFFLGNBQWNlLEdBQUcsUUFBUyxXQUMxQixHQUFJSyxTQUFTQyxTQUFTQyxRQUFRLE1BQU8sS0FBT0MsS0FBS0YsU0FBU0MsUUFBUSxNQUFPLEtBQU9GLFNBQVNJLFVBQVlELEtBQUtDLFNBQVUsQ0FDbEgsSUFBSUMsRUFBU3pCLEVBQUV1QixLQUFLRyxNQUVwQixJQURBRCxFQUFTQSxFQUFPRSxPQUFTRixFQUFTekIsRUFBRSxTQUFXdUIsS0FBS0csS0FBS0UsTUFBTSxHQUFLLE1BQ3pERCxPQUFRLENBQ2JFLEVBQVdKLEVBQU9LLFNBQVNDLElBQU1aLEVBSXJDLE9BSEFuQixFQUFFLGNBQWNnQyxRQUFRLENBQ3RCOUIsVUFBVzJCLEdBQ1YsSUFBTSxVQUNGLE1BT2YsU0FBU0ksa0JBQWtCQyxHQUV6QixJQUFJQyxFQUFPbkMsRUFBRSxzQkFDVG9DLEVBQVNDLFNBQVNGLEVBQUs1QixJQUFJLGlCQUMzQitCLEVBQVlELFNBQVNGLEVBQUs1QixJQUFJLG1CQVc5QmdDLEVBQVVDLEtBQUtDLE1BQU1QLEVBQUtRLGNBQWMsZUFBZUMsd0JBQXdCQyxPQUFPUixJQUFTRSxFQUFVRixJQUU3R0YsRUFBS1csTUFBTUMsV0FBYSxRQUFTUCxFQUluQyxTQUFTUSx3QkFFUCxJQURBLElBQUlDLEVBQVdoRCxFQUFFLGlCQUNUaUQsRUFBRSxFQUFFQSxFQUFFRCxFQUFTckIsT0FBT3NCLElBQzVCaEIsa0JBQWtCZSxFQUFTQyxJQTVHL0JDLE9BQU9qRCxVQUFVa0QsTUFBTSxTQUFTbkQsR0FFOUJELFdBQ0FPLFVBQ0FNLGdCQUNBQyxZQUNBSyxXQUNBNkIsd0JBR0EvQyxFQUFFQyxVQUFVbUQsT0FBTyxXQUNmckQsYUFJSkMsRUFBRVMsUUFBUTRDLE9BQU8sU0FBU0MsR0FDdEJoRCxVQUNBTSxnQkFDQW1DIn0=
